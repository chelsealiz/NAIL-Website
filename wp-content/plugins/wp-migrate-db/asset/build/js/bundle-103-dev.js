/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 71);
/******/ })
/************************************************************************/
/******/ (Array(29).concat([
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar $ = window.jQuery;\nvar ajaxurl = window.ajaxurl;\nvar wpmdb_strings = window.wpmdb_strings;\nvar wpmdb_data = window.wpmdb_data;\n\nvar WPMDBGlobals = function () {\n\tfunction WPMDBGlobals() {\n\t\t_classCallCheck(this, WPMDBGlobals);\n\n\t\tthis.show_ssl_notice = false;\n\t\tthis.doing_save_profile = false;\n\t\tthis.doing_ajax = false;\n\t\tthis.profile_name_edited = false;\n\t\tthis.migration_intent = null;\n\t\tthis.doing_licence_registration_ajax = false;\n\t\tthis.migration_paused = false;\n\t\tthis.last_replace_switch = wpmdb.functions.wpmdb_migration_type();\n\t\tthis.connection_established = false;\n\t\tthis.profile_name_edited = false;\n\t\tthis.checked_licence = false;\n\t\tthis.show_prefix_notice = false;\n\t\tthis.show_ssl_notice = false;\n\t\tthis.force_reconnect = false;\n\t\tthis.migration_selection = '';\n\t\tthis.show_version_notice = false;\n\t\tthis.migration_completed = false;\n\t\tthis.currently_migrating = false;\n\t\tthis.dump_filename = '';\n\t\tthis.dump_path = '';\n\t\tthis.migration_intent = '';\n\t\tthis.remote_site = null;\n\t\tthis.secret_key = null;\n\t\tthis.form_data = null;\n\t\tthis.stage = null;\n\t\tthis.elapsed_interval = null;\n\t\tthis.completed_msg = null;\n\t\tthis.tables_to_migrate = [];\n\t\tthis.migration_paused = false;\n\t\tthis.previous_progress_title = '';\n\t\tthis.previous_progress_text_primary = '';\n\t\tthis.previous_progress_text_secondary = '';\n\t\tthis.cancelling_text = '';\n\t\tthis.paused_text = '';\n\t\tthis.migration_cancelled = false;\n\t\tthis.flag_skip_delay = false;\n\t\tthis.delay_between_requests = 0;\n\t\tthis.fade_duration = 400;\n\t\tthis.pause_before_finalize = false;\n\t\tthis.is_auto_pause_before_finalize = false;\n\t\tthis.$connection_info_box = $('.connection-info-wrapper');\n\t\tthis.$push_select = window.wpmdb.$push_select = $('#select-tables').clone();\n\t\tthis.$pull_select = window.wpmdb.$pull_select = $('#select-tables').clone();\n\t\tthis.$push_post_type_select = $('#select-post-types').clone();\n\t\tthis.$pull_post_type_select = $('#select-post-types').clone();\n\t\tthis.$push_select_backup = $('#select-backup').clone();\n\t\tthis.$pull_select_backup = $('#select-backup').clone();\n\n\t\tthis.spinner_url = window.spinner_url = wpmdb.functions.get_spinner_url();\n\t\tthis.ajax_spinner = window.ajax_spinner = '<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"ajax-spinner general-spinner\" />';\n\t}\n\n\t_createClass(WPMDBGlobals, [{\n\t\tkey: 'pad',\n\t\tvalue: function pad(n, width, z) {\n\t\t\tz = z || '0';\n\t\t\tn = n + '';\n\t\t\treturn n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t\t}\n\t}, {\n\t\tkey: 'is_int',\n\t\tvalue: function is_int(n) {\n\t\t\tn = parseInt(n);\n\t\t\treturn 'number' === typeof n && 0 === n % 1;\n\t\t}\n\t}, {\n\t\tkey: 'get_intersect',\n\t\tvalue: function get_intersect(arr1, arr2) {\n\t\t\tvar r = [],\n\t\t\t    o = {},\n\t\t\t    l = arr2.length,\n\t\t\t    i,\n\t\t\t    v;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\to[arr2[i]] = true;\n\t\t\t}\n\t\t\tl = arr1.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tv = arr1[i];\n\t\t\t\tif (v in o) {\n\t\t\t\t\tr.push(v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\t}, {\n\t\tkey: 'pin_replace_url',\n\t\tvalue: function pin_replace_url(pin) {\n\t\t\tif (true === pin && 1 > $('.replace-row.pin').length && 1 === $('#old-url').length) {\n\t\t\t\t$('#old-url').parents('.replace-row').addClass('pin');\n\t\t\t}\n\n\t\t\tif (false === pin && 0 < $('.replace-row.pin').length) {\n\t\t\t\t$('.replace-row.pin').removeClass('pin');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Core plugin wrapper for the common AJAX error detecting method\n   *\n   * @param text\n   * @param code\n   * @param jqXHR\n   *\n   * @returns {string}\n   */\n\n\t}, {\n\t\tkey: 'get_ajax_errors',\n\t\tvalue: function get_ajax_errors(text, code, jqXHR) {\n\t\t\treturn wpmdb.functions.wpmdbGetAjaxErrors(wpmdb_strings.connection_local_server_problem, code, text, jqXHR);\n\t\t}\n\n\t\t// updates the debug log when the user switches to the help tab\n\n\t}, {\n\t\tkey: 'refresh_debug_log',\n\t\tvalue: function refresh_debug_log() {\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_get_log',\n\t\t\t\t\tnonce: wpmdb_data.nonces.get_log\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.update_log_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.debug-log-textarea').val(data);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'get_query_var',\n\t\tvalue: function get_query_var(name) {\n\t\t\tname = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n\t\t\tvar regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)'),\n\t\t\t    results = regex.exec(location.search);\n\t\t\treturn null === results ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_ssl_warning',\n\t\tvalue: function maybe_show_ssl_warning(url, key, remote_scheme) {\n\t\t\tvar scheme = url.substr(0, url.indexOf(':'));\n\t\t\tvar $ssl_notice = $('.ssl-notice');\n\n\t\t\tif (!this.show_ssl_notice) {\n\t\t\t\t$ssl_notice.hide();\n\t\t\t}\n\n\t\t\tif (remote_scheme !== scheme && url.indexOf('https') !== -1) {\n\t\t\t\t$ssl_notice.show();\n\t\t\t\tthis.show_ssl_notice = true;\n\t\t\t\turl = url.replace('https', 'http');\n\t\t\t\t$('.pull-push-connection-info').val(url + '\\n' + key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.show_ssl_notice = false;\n\t\t}\n\t}, {\n\t\tkey: 'validate_url',\n\t\tvalue: function validate_url(url) {\n\t\t\treturn (/^([a-z]([a-z]|\\d|\\+|-|\\.)*):(\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?((\\[(|(v[\\da-f]{1,}\\.(([a-z]|\\d|-|\\.|_|~)|[!\\$&'\\(\\)\\*\\+,;=]|:)+))\\])|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=])*)(:\\d*)?)(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*|(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)|((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)|((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)){0})(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(url)\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'refresh_table_selects',\n\t\tvalue: function refresh_table_selects() {\n\t\t\tif (undefined !== wpmdb_data && undefined !== wpmdb_data.this_tables && undefined !== wpmdb_data.this_table_sizes_hr) {\n\t\t\t\tthis.$push_select = this.create_table_select(wpmdb_data.this_tables, wpmdb_data.this_table_sizes_hr, $(wpmdb.$push_select).val());\n\t\t\t}\n\n\t\t\tif (undefined !== wpmdb.common.connection_data && undefined !== wpmdb.common.connection_data.tables && undefined !== wpmdb.common.connection_data.table_sizes_hr) {\n\t\t\t\tthis.$pull_select = this.create_table_select(wpmdb.common.connection_data.tables, wpmdb.common.connection_data.table_sizes_hr, $(wpmdb.$pull_select).val());\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'save_active_profile',\n\t\tvalue: function save_active_profile() {\n\t\t\tvar profile;\n\t\t\t$('.save-settings-button').blur();\n\n\t\t\tif (this.doing_save_profile) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (true === this.maybe_show_select_table_notice()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar create_new_profile = false;\n\n\t\t\tif ($('#create_new').is(':checked')) {\n\t\t\t\tcreate_new_profile = true;\n\t\t\t}\n\t\t\tvar profile_name = $('.create-new-profile').val();\n\n\t\t\tthis.doing_save_profile = true;\n\t\t\tprofile = $($('#migrate-form')[0].elements).not('.auth-credentials').serialize();\n\n\t\t\t$('.save-settings-button').attr('disabled', 'disabled').after('<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"save-profile-ajax-spinner general-spinner\" />');\n\n\t\t\tthis.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_save_profile',\n\t\t\t\t\tprofile: profile,\n\t\t\t\t\tnonce: wpmdb_data.nonces.save_profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\talert(wpmdb_strings.save_profile_problem);\n\t\t\t\t\t$('.save-settings-button').removeAttr('disabled');\n\t\t\t\t\t$('.save-profile-ajax-spinner').remove();\n\t\t\t\t\t$('.save-settings-button').after('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t\tthis.doing_save_profile = false;\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tvar updated_profile_id = parseInt($('#migrate-form input[name=save_migration_profile_option]:checked').val(), 10) + 1;\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t$('.save-settings-button').removeAttr('disabled');\n\t\t\t\t\t$('.save-profile-ajax-spinner').remove();\n\t\t\t\t\t$('.save-settings-button').after('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t\tthis.doing_save_profile = false;\n\t\t\t\t\t$('.create-new-profile').val('');\n\n\t\t\t\t\tif (create_new_profile) {\n\t\t\t\t\t\tvar new_profile_key = parseInt(data, 10);\n\t\t\t\t\t\tvar new_profile_id = new_profile_key + 1;\n\t\t\t\t\t\tvar new_li = $('<li><span class=\"delete-profile\" data-profile-id=\"' + new_profile_id + '\"></span><label for=\"profile-' + new_profile_id + '\"><input id=\"profile-' + new_profile_id + '\" value=\"' + new_profile_key + '\" name=\"save_migration_profile_option\" type=\"radio\"></label></li>');\n\t\t\t\t\t\tnew_li.find('label').append(document.createTextNode(' ' + profile_name));\n\t\t\t\t\t\tupdated_profile_id = new_profile_id;\n\n\t\t\t\t\t\t$('#create_new').parents('li').before(new_li);\n\t\t\t\t\t\t$('#profile-' + new_profile_id).attr('checked', 'checked');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Push updated profile id to history if available\n\t\t\t\t\tvar updated_url = window.location.href.replace('#migrate', '').replace(/&wpmdb-profile=-?\\d+/, '') + '&wpmdb-profile=' + updated_profile_id;\n\t\t\t\t\tvar updated_profile_name = $('#migrate-form input[name=save_migration_profile_option]:checked').parent().text().trim();\n\n\t\t\t\t\tif ('function' === typeof window.history.pushState) {\n\t\t\t\t\t\tif ($('#migrate-form .crumbs').length) {\n\t\t\t\t\t\t\t$('#migrate-form .crumbs .crumb:last').text(updated_profile_name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $crumbs = $('<div class=\"crumbs\" />').append('<a class=\"crumb\" href=\"' + wpmdb_data.this_plugin_base + '\"> Saved Profiles </a>').append('<span class=\"crumb\">' + updated_profile_name + '</span>');\n\t\t\t\t\t\t\t$('#migrate-form').prepend($crumbs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.history.pushState({ updated_profile_id: updated_profile_id }, null, updated_url);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'cancel_migration',\n\t\tvalue: function cancel_migration(event) {\n\t\t\tthis.migration_cancelled = true;\n\t\t\tthis.cancelling_text = wpmdb_strings.cancelling_migration;\n\t\t\t$('.migration-controls').css({ visibility: 'hidden' });\n\n\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\tthis.cancelling_text = wpmdb_strings.cancelling_find_replace;\n\t\t\t}\n\n\t\t\twpmdb.current_migration.setState(this.cancelling_text, wpmdb_strings.completing_current_request, 'cancelling');\n\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\tthis.migration_paused = false;\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Set checkbox\n   *\n   * @param string checkbox_wrap\n   */\n\n\t}, {\n\t\tkey: 'set_checkbox',\n\t\tvalue: function set_checkbox(checkbox_wrap) {\n\t\t\tvar $switch = $('#' + checkbox_wrap);\n\t\t\tvar $checkbox = $switch.find('input[type=checkbox]');\n\n\t\t\t$switch.toggleClass('on').find('span').toggleClass('checked');\n\t\t\tvar switch_on = $switch.find('span.on').hasClass('checked');\n\t\t\t$checkbox.attr('checked', switch_on).trigger('change');\n\t\t}\n\n\t\t// save file (export) / push / pull special conditions\n\n\t}, {\n\t\tkey: 'move_connection_info_box',\n\t\tvalue: function move_connection_info_box() {\n\t\t\tvar $connection_status = $('.connection-status');\n\t\t\tvar $directory_permission_notice = $('.directory-permission-notice');\n\t\t\tvar $compatibility_older_mysql = $('.compatibility-older-mysql');\n\t\t\tvar $mst_required = $('.mst-required');\n\t\t\tvar $keep_active_plugins = $('.keep-active-plugins');\n\t\t\tvar $step_two = $('.step-two');\n\t\t\tvar $backup_options = $('.backup-options');\n\t\t\tvar new_migration_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar profile_name, table_prefix, backup_table_prefix, uploads_dir, upload_dir_long, write_permission;\n\n\t\t\t$connection_status.hide();\n\t\t\t$directory_permission_notice.hide();\n\t\t\t$step_two.show();\n\t\t\t$backup_options.show();\n\t\t\t$keep_active_plugins.show();\n\t\t\t$compatibility_older_mysql.hide();\n\t\t\t$mst_required.hide();\n\n\t\t\twpmdb.functions.wpmdb_toggle_migration_action_text();\n\n\t\t\t$('.migrate-tab').attr('class', 'migrate-tab content-tab').addClass(wpmdb.functions.wpmdb_migration_type());\n\n\t\t\t$.wpmdb.do_action('move_connection_info_box', {\n\t\t\t\tmigration_type: new_migration_type,\n\t\t\t\tlast_migration_type: this.last_replace_switch\n\t\t\t});\n\n\t\t\tif (-1 !== $.inArray(new_migration_type, ['push', 'pull'])) {\n\t\t\t\tvar $pull_push_connection_info = $('.pull-push-connection-info');\n\t\t\t\tvar connection_info = $.trim($pull_push_connection_info.val()).split('\\n');\n\t\t\t\tvar $migration_list_li = $('.' + new_migration_type + '-list li');\n\n\t\t\t\t$migration_list_li.append(this.$connection_info_box);\n\t\t\t\tthis.$connection_info_box.show(function () {\n\t\t\t\t\tvar connection_textarea = $(this).find('.pull-push-connection-info');\n\t\t\t\t\tif (!connection_textarea.val()) {\n\t\t\t\t\t\tconnection_textarea.focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reconnect if the migration type was just changed\n\t\t\t\tif (new_migration_type !== this.last_replace_switch && 2 === connection_info.length) {\n\t\t\t\t\twpmdb.force_reconnect = true;\n\t\t\t\t\t$migration_list_li.append(this.$connection_info_box);\n\t\t\t\t\t$pull_push_connection_info.removeClass('temp-disabled').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\t\t\t\t\twpmdb.functions.connection_box_changed();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.connection_established) {\n\t\t\t\t\t$connection_status.hide();\n\t\t\t\t\t$step_two.show();\n\n\t\t\t\t\twpmdb.functions.wpmdb_toggle_migration_action_text();\n\n\t\t\t\t\tif ('pull' === new_migration_type) {\n\t\t\t\t\t\ttable_prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t\t\tbackup_table_prefix = wpmdb_data.site_details.prefix;\n\t\t\t\t\t\tuploads_dir = wpmdb_data.this_uploads_dir;\n\t\t\t\t\t\tupload_dir_long = wpmdb_data.this_upload_dir_long;\n\t\t\t\t\t\twrite_permission = wpmdb_data.write_permission;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttable_prefix = wpmdb_data.this_prefix;\n\t\t\t\t\t\tbackup_table_prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t\t\tuploads_dir = wpmdb.common.connection_data.uploads_dir;\n\t\t\t\t\t\tupload_dir_long = wpmdb.common.connection_data.upload_dir_long;\n\t\t\t\t\t\twrite_permission = wpmdb.common.connection_data.write_permissions;\n\t\t\t\t\t}\n\n\t\t\t\t\t$('.table_prefix').html(table_prefix);\n\t\t\t\t\t$('.backup-table-prefix').html(backup_table_prefix);\n\t\t\t\t\t$('.uploads-dir').html(uploads_dir);\n\n\t\t\t\t\tthis.maybe_show_backup_disabled_msg(upload_dir_long, write_permission);\n\n\t\t\t\t\tif (false === this.profile_name_edited) {\n\t\t\t\t\t\tprofile_name = this.get_domain_name(wpmdb.common.connection_data.url);\n\t\t\t\t\t\t$('.create-new-profile').val(profile_name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$connection_status.show();\n\t\t\t\t\t$step_two.hide();\n\t\t\t\t}\n\t\t\t} else if (-1 !== $.inArray(new_migration_type, ['find_replace', 'savefile'])) {\n\t\t\t\t$connection_status.hide();\n\t\t\t\t$step_two.show();\n\t\t\t\t$('.table-prefix').html(wpmdb_data.this_prefix);\n\t\t\t\tif (false === this.profile_name_edited) {\n\t\t\t\t\t$('.create-new-profile').val('');\n\t\t\t\t}\n\n\t\t\t\t$keep_active_plugins.hide();\n\n\t\t\t\tif ('savefile' === new_migration_type) {\n\t\t\t\t\t$backup_options.hide();\n\t\t\t\t\t$compatibility_older_mysql.show();\n\n\t\t\t\t\tif ('false' === wpmdb_data.write_permission) {\n\t\t\t\t\t\t$directory_permission_notice.show();\n\t\t\t\t\t\t$step_two.hide();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\tvar $old_replace_col = $('.old-replace-col').eq(1);\n\t\t\t\t\t\t$old_replace_col.parent().removeClass('pin').find('.replace-remove-row').show();\n\t\t\t\t\t\t$old_replace_col.find('input').removeAttr('readonly');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.maybe_show_backup_disabled_msg(wpmdb_data.this_upload_dir_long, wpmdb_data.write_permission);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.maybe_show_mixed_cased_table_name_warning();\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_backup_disabled_msg',\n\t\tvalue: function maybe_show_backup_disabled_msg(upload_dir, write_permission) {\n\t\t\tvar $create_backup = $('#create-backup');\n\t\t\tvar $create_backup_label = $('#create-backup-label');\n\t\t\tvar $backup_option_disabled = $('.backup-option-disabled');\n\n\t\t\t$create_backup.removeAttr('disabled');\n\t\t\t$create_backup_label.removeClass('disabled');\n\t\t\t$backup_option_disabled.hide();\n\n\t\t\tif ('false' === write_permission) {\n\t\t\t\t$create_backup.prop('checked', false);\n\t\t\t\t$create_backup.attr('disabled', 'disabled');\n\t\t\t\t$create_backup_label.addClass('disabled');\n\t\t\t\t$backup_option_disabled.show();\n\t\t\t\t$('.upload-directory-location').html(upload_dir);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'change_replace_values',\n\t\tvalue: function change_replace_values() {\n\t\t\tvar old_url = null;\n\t\t\tvar old_path = null;\n\t\t\tif (null !== wpmdb.common.previous_connection_data && 'object' === _typeof(wpmdb.common.previous_connection_data) && wpmdb.common.previous_connection_data.url !== wpmdb.common.connection_data.url) {\n\t\t\t\told_url = this.remove_protocol(wpmdb.common.previous_connection_data.url);\n\t\t\t\told_path = wpmdb.common.previous_connection_data.path;\n\t\t\t}\n\n\t\t\tif ('push' === wpmdb.functions.wpmdb_migration_type() || 'savefile' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\tif ('pull' === this.last_replace_switch) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\t$('.old-replace-col input', this).val($('.replace-right-col input', this).val());\n\t\t\t\t\t\t$('.replace-right-col input', this).val(old_val);\n\t\t\t\t\t});\n\t\t\t\t} else if ('push' === this.last_replace_switch && 'push' === wpmdb.functions.wpmdb_migration_type() && null !== old_url && null !== old_path) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.replace-right-col input', this).val();\n\t\t\t\t\t\tif (old_val === old_path) {\n\t\t\t\t\t\t\t$('.replace-right-col input', this).val(wpmdb.common.connection_data.path);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old_val === old_url) {\n\t\t\t\t\t\t\t$('.replace-right-col input', this).val(this.remove_protocol(wpmdb.common.connection_data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$.wpmdb.do_action('wpmdb_update_push_table_select');\n\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t$('.exclude-post-types-warning').after(this.$push_post_type_select);\n\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t$('#select-backup').remove();\n\t\t\t\t$('.backup-tables-wrap').prepend(this.$push_select_backup);\n\t\t\t} else if ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\tif ('' === this.last_replace_switch || 'push' === this.last_replace_switch || 'savefile' === this.last_replace_switch) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\t$('.old-replace-col input', this).val($('.replace-right-col input', this).val());\n\t\t\t\t\t\t$('.replace-right-col input', this).val(old_val);\n\t\t\t\t\t});\n\t\t\t\t} else if ('pull' === this.last_replace_switch && 'pull' === wpmdb.functions.wpmdb_migration_type() && null !== old_url && null !== old_path) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\tif (old_val === old_path) {\n\t\t\t\t\t\t\t$('.old-replace-col input', this).val(wpmdb.common.connection_data.path);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old_val === old_url) {\n\t\t\t\t\t\t\t$('.old-replace-col input', this).val(this.remove_protocol(wpmdb.common.connection_data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t$('.exclude-post-types-warning').after(this.$pull_post_type_select);\n\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t$('#select-backup').remove();\n\t\t\t\t$('.backup-tables-wrap').prepend(this.$pull_select_backup);\n\t\t\t}\n\t\t\tthis.last_replace_switch = wpmdb.functions.wpmdb_migration_type();\n\t\t}\n\t}, {\n\t\tkey: 'switch_to_plugin_tab',\n\t\tvalue: function switch_to_plugin_tab(hash, skip_addons_check) {\n\t\t\t$('.nav-tab').removeClass('nav-tab-active');\n\t\t\t$('.nav-tab.' + hash).addClass('nav-tab-active');\n\t\t\t$('.content-tab').hide();\n\t\t\t$('.' + hash + '-tab').show();\n\n\t\t\tif ('settings' === hash) {\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('p.licence-status').append('Checking License... ').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ('help' === hash) {\n\t\t\t\tthis.refresh_debug_log();\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('.support-content p').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ('addons' === hash && true !== skip_addons_check) {\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('.addons-content p').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'hide_overlay',\n\t\tvalue: function hide_overlay() {\n\t\t\t$('#overlay').removeClass('show').addClass('hide');\n\t\t\t$('#overlay > div').removeClass('show').addClass('hide');\n\t\t\twpmdb.current_migration.$proVersion.find('iframe').remove();\n\t\t\tsetTimeout(function () {\n\t\t\t\t$('#overlay').remove();\n\t\t\t}, 500);\n\t\t\tthis.migration_completed = false;\n\t\t}\n\t}, {\n\t\tkey: 'check_licence',\n\t\tvalue: function check_licence(licence) {\n\t\t\tvar update_licence_content = !this.doing_licence_registration_ajax;\n\t\t\tthis.checked_licence = true;\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_check_licence',\n\t\t\t\t\tlicence: licence,\n\t\t\t\t\tcontext: 'all',\n\t\t\t\t\tnonce: wpmdb_data.nonces.check_licence\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.license_check_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\n\t\t\t\t\tvar $support_content = $('.support-content');\n\t\t\t\t\tvar $addons_content = $('.addons-content');\n\t\t\t\t\tvar $licence_content = $('.licence-status:not(.notification-message)');\n\t\t\t\t\tvar licence_msg, support_msg, addons_msg;\n\n\t\t\t\t\tif ('undefined' !== typeof data.dbrains_api_down) {\n\t\t\t\t\t\tsupport_msg = data.dbrains_api_down + data.message;\n\t\t\t\t\t\taddons_msg = data.dbrains_api_down;\n\t\t\t\t\t} else if ('undefined' !== typeof data.errors) {\n\n\t\t\t\t\t\tif ('undefined' !== typeof data.errors.subscription_expired) {\n\t\t\t\t\t\t\tlicence_msg = data.errors.subscription_expired.licence;\n\t\t\t\t\t\t\tsupport_msg = data.errors.subscription_expired.support;\n\t\t\t\t\t\t\taddons_msg = data.errors.subscription_expired.addons;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar msg = '';\n\t\t\t\t\t\t\tfor (var key in data.errors) {\n\t\t\t\t\t\t\t\tmsg += data.errors[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsupport_msg = msg;\n\t\t\t\t\t\t\taddons_msg = msg;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ('undefined' !== typeof data.addon_content) {\n\t\t\t\t\t\t\taddons_msg += '\\n' + data.addon_content;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsupport_msg = data.message;\n\t\t\t\t\t\taddons_msg = data.addon_content;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (update_licence_content) {\n\t\t\t\t\t\t$licence_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t\tif ('undefined' === typeof licence_msg) {\n\t\t\t\t\t\t\t\t$(this).css({ visibility: 'hidden', display: 'block' }).slideUp();\n\t\t\t\t\t\t\t\tlicence_msg = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$(this).empty().html(licence_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t$support_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t$(this).empty().html(support_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t});\n\t\t\t\t\t$addons_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t$(this).empty().html(addons_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t});\n\n\t\t\t\t\tif ($('#plugin-compatibility').is(':not(:checked)')) {\n\t\t\t\t\t\t$('#compatibility-header').click();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'should_check_licence',\n\t\tvalue: function should_check_licence() {\n\t\t\treturn false === this.checked_licence && '1' === wpmdb_data.has_licence && 'true' === wpmdb_data.is_pro;\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_mixed_cased_table_name_warning',\n\t\tvalue: function maybe_show_mixed_cased_table_name_warning() {\n\t\t\tif ('undefined' === typeof wpmdb.common.connection_data || false === wpmdb.common.connection_data) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar migration_intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar tables_to_migrate = wpmdb.functions.get_tables_to_migrate(null, null);\n\n\t\t\t$('.mixed-case-table-name-notice').hide();\n\n\t\t\tif (null === tables_to_migrate) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttables_to_migrate = tables_to_migrate.join('');\n\n\t\t\t// The table names are all lowercase, no need to display the warning.\n\t\t\tif (tables_to_migrate === tables_to_migrate.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * Do not display the warning if the remote lower_case_table_names does not equal \"1\" (i.e the only problematic setting)\n    * Applies to push/export migrations.\n    */\n\t\t\tif ('1' !== wpmdb.common.connection_data.lower_case_table_names && ('push' === migration_intent || 'savefile' === migration_intent)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * Do not display the warning if the local lower_case_table_names does not equal \"1\" (i.e the only problematic setting)\n    * Only applies to pull migrations.\n    */\n\t\t\tif ('1' !== wpmdb_data.lower_case_table_names && 'pull' === migration_intent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * At this stage we've determined:\n    * 1. The source database contains at least one table that contains an uppercase character.\n    * 2. The destination environment has lower_case_table_names set to 1.\n    * 3. The source database table containing the uppercase letter will be converted to lowercase during the migration.\n    */\n\n\t\t\tif ('push' === migration_intent || 'savefile' === migration_intent) {\n\t\t\t\t$('.mixed-case-table-name-notice.push').show();\n\t\t\t} else {\n\t\t\t\t$('.mixed-case-table-name-notice.pull').show();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'enable_pro_licence',\n\t\tvalue: function enable_pro_licence(data, licence_key) {\n\t\t\t$('.licence-input, .register-licence').remove();\n\t\t\t$('.licence-not-entered').prepend(data.masked_licence);\n\t\t\t$('.support-content').empty().html('<p>' + wpmdb_strings.fetching_license + '<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"ajax-spinner general-spinner\" /></p>');\n\t\t\tthis.check_licence(licence_key);\n\n\t\t\t$('.migrate-selection label').removeClass('disabled');\n\t\t\t$('.migrate-selection input').removeAttr('disabled');\n\t\t}\n\t}, {\n\t\tkey: 'get_domain_name',\n\t\tvalue: function get_domain_name(url) {\n\t\t\tvar temp_url = url;\n\t\t\tvar domain = temp_url.replace(/\\/\\/(.*)@/, '//').replace('http://', '').replace('https://', '').replace('www.', '');\n\t\t\treturn domain;\n\t\t}\n\t}, {\n\t\tkey: 'update_domain_placeholder',\n\t\tvalue: function update_domain_placeholder(label, url, stage) {\n\t\t\tvar domain = this.get_domain_name(url);\n\n\t\t\tif ('completed' === stage) {\n\t\t\t\treturn label.replace(/\\%s\\s?/, '<span class=domain-label>' + domain + '</span>&nbsp;');\n\t\t\t}\n\n\t\t\treturn label.replace(/\\%s(\\S*)\\s?/, '<span class=domain-label>' + domain + '$1</span>&nbsp;');\n\t\t}\n\t}, {\n\t\tkey: 'get_migration_status_label',\n\t\tvalue: function get_migration_status_label(url, intent, stage) {\n\t\t\tvar migrating_stage_label = '';\n\t\t\tvar completed_stage_label = '';\n\n\t\t\tswitch (intent) {\n\t\t\t\tcase 'push':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.push_migration_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.push_migration_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'pull':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.pull_migration_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.pull_migration_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'find_replace':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.find_replace_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.find_replace_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'savefile':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.exporting_please_wait;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.exporting_complete;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar label = migrating_stage_label;\n\n\t\t\tif ('completed' === stage) {\n\t\t\t\tlabel = completed_stage_label;\n\t\t\t}\n\n\t\t\tif ('push' === intent || 'pull' === intent) {\n\t\t\t\tlabel = this.update_domain_placeholder(label, url, stage);\n\t\t\t}\n\n\t\t\tlabel = $.wpmdb.apply_filters('wpmdb_get_migration_status_label', label, {\n\t\t\t\tintent: intent,\n\t\t\t\tstage: stage\n\t\t\t});\n\n\t\t\treturn label;\n\t\t}\n\t}, {\n\t\tkey: 'disable_export_type_controls',\n\t\tvalue: function disable_export_type_controls() {\n\t\t\t$('.option-group').each(function (index) {\n\t\t\t\t$('input', this).attr('disabled', 'disabled');\n\t\t\t\t$('label', this).css('cursor', 'default');\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'enable_export_type_controls',\n\t\tvalue: function enable_export_type_controls() {\n\t\t\t$('.option-group').each(function (index) {\n\t\t\t\t$('input', this).removeAttr('disabled');\n\t\t\t\t$('label', this).css('cursor', 'pointer');\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'set_slider_value',\n\t\tvalue: function set_slider_value(parent_selector, value, unit, display) {\n\t\t\tvar display_value = value;\n\n\t\t\tif (undefined !== display) {\n\t\t\t\tdisplay_value = display;\n\t\t\t}\n\n\t\t\t$('.slider', parent_selector).slider('value', parseInt(value));\n\t\t\t$('.amount', parent_selector).html(wpmdb.functions.wpmdb_add_commas(display_value) + ' ' + unit);\n\t\t}\n\t}, {\n\t\tkey: 'set_pause_resume_button',\n\t\tvalue: function set_pause_resume_button(event, instance) {\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\tthis.migration_paused = false;\n\t\t\t\tthis.doing_ajax = true;\n\n\t\t\t\twpmdb.current_migration.setState(this.previous_progress_title, this.previous_progress_text_primary, 'active');\n\t\t\t\t$('.pause-resume').html(wpmdb_strings.pause);\n\n\t\t\t\t// Resume the timer\n\t\t\t\twpmdb.current_migration.resumeTimer();\n\n\t\t\t\twpmdb.functions.execute_next_step(instance);\n\t\t\t} else {\n\t\t\t\tthis.migration_paused = true;\n\t\t\t\tthis.doing_ajax = false;\n\t\t\t\tthis.paused_text = wpmdb_strings.migration_paused;\n\t\t\t\tthis.previous_progress_title = $('.progress-title').html();\n\t\t\t\tthis.previous_progress_text_primary = $('.progress-text', '.progress-wrapper-primary').html();\n\t\t\t\tthis.previous_progress_text_secondary = $('.progress-text', '.progress-wrapper-secondary ').html();\n\n\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\tthis.paused_text = wpmdb_strings.find_replace_paused;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.setState(this.paused_text, wpmdb_strings.completing_current_request, null);\n\t\t\t\t$('body').off('click', '.pause-resume'); // Is re-bound at execute_next_step when migration is finally paused\n\t\t\t\t$('body').off('click', '.cancel'); // Is re-bound at execute_next_step when migration is finally paused\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Filter temporary tables out of wpmdb.functions.create_table_select().\n   *\n   * @param exclude\n   * @param table_name\n   * @returns {bool}\n   */\n\n\t}, {\n\t\tkey: 'filter_temp_tables',\n\t\tvalue: function filter_temp_tables(exclude, table_name) {\n\t\t\tvar temp_prefix = wpmdb_data.this_temp_prefix;\n\n\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type() && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.temp_prefix) {\n\t\t\t\ttemp_prefix = wpmdb.common.connection_data.temp_prefix;\n\t\t\t}\n\n\t\t\tif (temp_prefix === table_name.substring(0, temp_prefix.length)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn exclude;\n\t\t}\n\t}, {\n\t\tkey: 'get_table_prefix',\n\t\tvalue: function get_table_prefix(value, args) {\n\t\t\treturn $('.table-select-wrap .table-prefix').text();\n\t\t}\n\t}, {\n\t\tkey: 'lock_replace_url',\n\t\tvalue: function lock_replace_url(lock) {\n\t\t\tif (true === lock) {\n\t\t\t\t$('.replace-row.pin .replace-right-col input[type=\"text\"]').attr('readonly', 'readonly');\n\t\t\t\t$('.replace-row.pin .arrow-col').addClass('disabled');\n\t\t\t} else {\n\t\t\t\t$('.replace-row.pin .replace-right-col input[type=\"text\"]').removeAttr('readonly');\n\t\t\t\t$('.replace-row.pin .arrow-col').removeClass('disabled');\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'set_connection_data',\n\t\tvalue: function set_connection_data(data) {\n\t\t\twindow.wpmdb.common.previous_connection_data = wpmdb.common.connection_data;\n\t\t\twindow.wpmdb.common.connection_data = data;\n\t\t\t$.wpmdb.do_action('wpmdb_connection_data_updated', data);\n\t\t}\n\n\t\t/**\n   * Returns formatted info for the Max Request Size slider.\n   *\n   * @param value\n   * @return object\n   */\n\n\t}, {\n\t\tkey: 'get_max_request_display_info',\n\t\tvalue: function get_max_request_display_info(value) {\n\t\t\tvar display_info = {};\n\n\t\t\tdisplay_info.unit = 'MB';\n\t\t\tdisplay_info.amount = (value / 1024).toFixed(2);\n\n\t\t\treturn display_info;\n\t\t}\n\t}, {\n\t\tkey: 'establish_remote_connection_from_saved_profile',\n\t\tvalue: function establish_remote_connection_from_saved_profile() {\n\t\t\tvar action = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar connection_info = $.trim($('.pull-push-connection-info').val()).split('\\n');\n\t\t\tif ('undefined' === typeof wpmdb_default_profile || true === wpmdb_default_profile || 'savefile' === action || 'find_replace' === action || 'import' === action || this.doing_ajax || !wpmdb_data.is_pro) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.doing_ajax = true;\n\t\t\tthis.disable_export_type_controls();\n\n\t\t\t$('.connection-status').html(wpmdb_strings.establishing_remote_connection);\n\t\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t\t$('.connection-status').append(this.ajax_spinner);\n\n\t\t\tvar intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\t// Hack to keep object scope\n\t\t\tvar self = this;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_verify_connection_to_remote_site',\n\t\t\t\t\turl: connection_info[0],\n\t\t\t\t\tkey: connection_info[1],\n\t\t\t\t\tintent: intent,\n\t\t\t\t\tnonce: wpmdb_data.nonces.verify_connection_to_remote_site,\n\t\t\t\t\tconvert_post_type_selection: wpmdb_convert_post_type_selection,\n\t\t\t\t\tprofile: wpmdb_data.profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.connection-status').html(this.get_ajax_errors(jqXHR.responseText, '(#102)', jqXHR));\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tself.doing_ajax = false;\n\t\t\t\t\tself.enable_export_type_controls();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tself.doing_ajax = false;\n\t\t\t\t\tself.enable_export_type_controls();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (true === self.maybe_show_mst_warning(data)) {\n\t\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.maybe_show_ssl_warning(connection_info[0], connection_info[1], data.scheme);\n\t\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\n\t\t\t\t\t$('.pull-push-connection-info').addClass('temp-disabled');\n\t\t\t\t\t$('.pull-push-connection-info').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\n\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t$('.step-two').show();\n\t\t\t\t\tself.connection_established = true;\n\t\t\t\t\tself.set_connection_data(data);\n\t\t\t\t\tself.move_connection_info_box();\n\n\t\t\t\t\tself.maybe_show_mixed_cased_table_name_warning();\n\n\t\t\t\t\tvar loaded_tables = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_tables) {\n\t\t\t\t\t\tloaded_tables = wpmdb_loaded_tables;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.$pull_select = wpmdb.functions.create_table_select(wpmdb.common.connection_data.tables, wpmdb.common.connection_data.table_sizes_hr, loaded_tables);\n\t\t\t\t\tvar loaded_post_types = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_post_types) {\n\t\t\t\t\t\tif ('undefined' !== typeof data.select_post_types) {\n\t\t\t\t\t\t\t$('#exclude-post-types').attr('checked', 'checked');\n\t\t\t\t\t\t\t$('.post-type-select-wrap').show();\n\t\t\t\t\t\t\tloaded_post_types = data.select_post_types;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tloaded_post_types = wpmdb_loaded_post_types;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.post_types, function (index, value) {\n\t\t\t\t\t\tvar selected = $.inArray(value, loaded_post_types);\n\t\t\t\t\t\tif (-1 !== selected || true === wpmdb_convert_exclude_revisions && 'revision' !== value) {\n\t\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$($post_type_select).append('<option' + selected + 'value=\"' + value + '\">' + value + '</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tself.$pull_post_type_select = $post_type_select;\n\n\t\t\t\t\tvar loaded_tables_backup = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_tables_backup) {\n\t\t\t\t\t\tloaded_tables_backup = wpmdb_loaded_tables_backup;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $table_select_backup = document.createElement('select');\n\t\t\t\t\t$($table_select_backup).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_backup[]',\n\t\t\t\t\t\tid: 'select-backup',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.tables, function (index, value) {\n\t\t\t\t\t\tvar selected = $.inArray(value, loaded_tables_backup);\n\t\t\t\t\t\tif (-1 !== selected) {\n\t\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$($table_select_backup).append('<option' + selected + 'value=\"' + value + '\">' + value + ' (' + wpmdb.common.connection_data.table_sizes_hr[value] + ')</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tself.$push_select_backup = $table_select_backup;\n\n\t\t\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t\t$('.exclude-post-types-warning').after(self.$pull_post_type_select);\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(self.$pull_select_backup);\n\t\t\t\t\t\t$('.table-prefix').html(data.prefix);\n\t\t\t\t\t\t$('.uploads-dir').html(wpmdb_data.this_uploads_dir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(self.$push_select_backup);\n\t\t\t\t\t}\n\n\t\t\t\t\t$.wpmdb.do_action('verify_connection_to_remote_site', wpmdb.common.connection_data);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Main method that shows migration progress in the UI\n   * @param current_row\n   * @param primary_keys\n   * @param iterator\n   */\n\n\t}, {\n\t\tkey: 'migrate_table_recursive',\n\t\tvalue: function migrate_table_recursive(current_row, primary_keys, iterator) {\n\t\t\tvar i = iterator || 0;\n\n\t\t\tif (i >= this.tables_to_migrate.length) {\n\n\t\t\t\tif ('upload' === this.stage && wpmdb.current_migration.model.getStageItems('find_replace').length) {\n\t\t\t\t\tthis.stage = 'find_replace';\n\t\t\t\t\tthis.tables_to_migrate = wpmdb.current_migration.model.getStageItems('find_replace', 'name');\n\t\t\t\t\tthis.tables_to_migrate = this.tables_to_migrate.map(function (table) {\n\t\t\t\t\t\treturn '_mig_' + table;\n\t\t\t\t\t});\n\t\t\t\t\ti = 0;\n\t\t\t\t} else if ('backup' === this.stage) {\n\n\t\t\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\t\t\tthis.stage = 'migrate';\n\t\t\t\t\t} else if ('import' === this.migration_intent) {\n\t\t\t\t\t\tthis.stage = 'upload';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stage = this.migration_intent;\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.current_migration.model.setActiveStage(this.stage);\n\n\t\t\t\t\tif ('find_replace' !== this.stage && 'migrate' !== this.stage) {\n\t\t\t\t\t\twpmdb.functions.wpmdb_call_next_hook();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ti = 0;\n\n\t\t\t\t\t// should get from model\n\t\t\t\t\tthis.tables_to_migrate = wpmdb.functions.get_tables_to_migrate(null, null);\n\t\t\t\t} else {\n\t\t\t\t\t$('.progress-label').removeClass('label-visible');\n\n\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_before_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.wpmdb_flush);\n\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_after_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete_events);\n\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar last_table = 0;\n\t\t\tif (i === this.tables_to_migrate.length - 1) {\n\t\t\t\tlast_table = 1;\n\t\t\t}\n\n\t\t\tvar gzip = 0;\n\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull']) && 1 === parseInt(wpmdb.common.connection_data.gzip)) {\n\t\t\t\tgzip = 1;\n\t\t\t}\n\n\t\t\tvar request_data = {\n\t\t\t\taction: 'wpmdb_migrate_table',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\ttable: this.tables_to_migrate[i],\n\t\t\t\tstage: this.stage,\n\t\t\t\tcurrent_row: current_row,\n\t\t\t\tlast_table: last_table,\n\t\t\t\tprimary_keys: primary_keys,\n\t\t\t\tgzip: gzip,\n\t\t\t\tnonce: wpmdb_data.nonces.migrate_table\n\t\t\t};\n\n\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\trequest_data.bottleneck = wpmdb.common.connection_data.bottleneck;\n\t\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t\t}\n\n\t\t\tif (wpmdb.common.connection_data && wpmdb.common.connection_data.path_current_site && wpmdb.common.connection_data.domain) {\n\t\t\t\trequest_data.path_current_site = wpmdb.common.connection_data.path_current_site;\n\t\t\t\trequest_data.domain_current_site = wpmdb.common.connection_data.domain;\n\t\t\t}\n\n\t\t\tthis.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\ttimeout: 0,\n\t\t\t\tdata: request_data,\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tvar progress_text = wpmdb_strings.table_process_problem + ' ' + this.tables_to_migrate[i] + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText;\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, progress_text, 'error');\n\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tdata = $.trim(data);\n\t\t\t\t\tvar row_information = wpmdb.functions.wpmdb_parse_json(data);\n\t\t\t\t\tvar error_text = '';\n\n\t\t\t\t\tif (false === row_information || null === row_information) {\n\n\t\t\t\t\t\t// should update model\n\t\t\t\t\t\tif ('' === data || null === data) {\n\t\t\t\t\t\t\terror_text = wpmdb_strings.table_process_problem_empty_response + ' ' + this.tables_to_migrate[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terror_text = this.get_ajax_errors(data, null, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, error_text, 'error');\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('undefined' !== typeof row_information.wpmdb_error && 1 === row_information.wpmdb_error) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, row_information.body, 'error');\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar item_name = this.tables_to_migrate[i];\n\t\t\t\t\tif ('import' === this.migration_intent && 'find_replace' === this.stage) {\n\t\t\t\t\t\titem_name = item_name.replace(wpmdb_data.this_temp_prefix, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t//successful iteration\n\t\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\t\twpmdb.current_migration.model.getStageModel(this.stage).setItemRowsTransferred(item_name, row_information.current_row);\n\n\t\t\t\t\t// We need the returned file name for delivery or display to the user.\n\t\t\t\t\tif (1 === last_table && 'savefile' === this.migration_intent) {\n\t\t\t\t\t\tif ('undefined' !== typeof row_information.dump_filename) {\n\t\t\t\t\t\t\tthis.dump_filename = row_information.dump_filename;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ('undefined' !== typeof row_information.dump_path) {\n\t\t\t\t\t\t\tthis.dump_path = row_information.dump_path;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (-1 === parseInt(row_information.current_row)) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\trow_information.current_row = '';\n\t\t\t\t\t\trow_information.primary_keys = '';\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\tfn: wpmdb.functions.migrate_table_recursive,\n\t\t\t\t\t\targs: [row_information.current_row, row_information.primary_keys, i]\n\t\t\t\t\t};\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'migration_complete_events',\n\t\tvalue: function migration_complete_events() {\n\t\t\tif (false === wpmdb.common.migration_error) {\n\t\t\t\tif ('' === wpmdb.common.non_fatal_errors) {\n\t\t\t\t\tif ('savefile' !== this.migration_intent && true === $('#save_computer').is(':checked')) {\n\t\t\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.completed_msg = this.completed_msg + '&nbsp;<div class=\"dashicons dashicons-yes\"></div>';\n\n\t\t\t\t\tif (true === this.migration_cancelled) {\n\t\t\t\t\t\tvar cancel_success = wpmdb_strings.migration_cancelled_success;\n\n\t\t\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\t\t\tcancel_success = wpmdb_strings.find_replace_cancelled_success;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, cancel_success, 'cancelled');\n\t\t\t\t\t} else {\n\t\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, '', 'complete');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.completed_with_some_errors, wpmdb.common.non_fatal_errors, 'error');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$('.migration-controls').addClass('hidden');\n\n\t\t\t// reset migration variables so consecutive migrations work correctly\n\t\t\twpmdb.common.hooks = [];\n\t\t\twpmdb.common.call_stack = [];\n\t\t\twpmdb.common.migration_error = false;\n\t\t\tthis.currently_migrating = false;\n\t\t\tthis.migration_completed = true;\n\t\t\tthis.migration_paused = false;\n\t\t\tthis.migration_cancelled = false;\n\t\t\tthis.doing_ajax = false;\n\t\t\twpmdb.common.non_fatal_errors = '';\n\t\t\tthis.tables_to_migrate = [];\n\n\t\t\t$('.progress-label').remove();\n\t\t\t$('.migration-progress-ajax-spinner').remove();\n\t\t\t$('.close-progress-content').show();\n\t\t\t$('#overlay').css('cursor', 'pointer');\n\t\t\twpmdb.current_migration.model.setMigrationComplete();\n\t\t}\n\t}, {\n\t\tkey: 'migration_complete',\n\t\tvalue: function migration_complete() {\n\n\t\t\t$('.migration-controls').addClass('hidden');\n\n\t\t\tif ('savefile' === this.migration_intent) {\n\t\t\t\tthis.currently_migrating = false;\n\t\t\t\tvar migrate_complete_text = wpmdb_strings.migration_complete;\n\t\t\t\tif ($('#save_computer').is(':checked')) {\n\t\t\t\t\tvar url = wpmdb_data.this_download_url + encodeURIComponent(this.dump_filename);\n\t\t\t\t\tif ($('#gzip_file').is(':checked')) {\n\t\t\t\t\t\turl += '&gzip=1';\n\t\t\t\t\t}\n\t\t\t\t\twindow.location = url;\n\t\t\t\t} else {\n\t\t\t\t\tmigrate_complete_text = wpmdb_strings.completed_dump_located_at + ' ' + this.dump_path;\n\t\t\t\t}\n\n\t\t\t\tif (false === wpmdb.common.migration_error) {\n\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, migrate_complete_text, 'complete');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// rename temp tables, delete old tables\n\n\t\t\t\twpmdb.current_migration.setState(null, wpmdb_strings.finalizing_migration, 'finalizing');\n\n\t\t\t\tvar request_data = {\n\t\t\t\t\taction: 'wpmdb_finalize_migration',\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\ttables: this.tables_to_migrate.join(','),\n\t\t\t\t\tnonce: wpmdb_data.nonces.finalize_migration\n\t\t\t\t};\n\n\t\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t}\n\n\t\t\t\tthis.doing_ajax = true;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: request_data,\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.finalize_tables_problem, 'error');\n\n\t\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_flush',\n\t\tvalue: function wpmdb_flush() {\n\t\t\tif ('savefile' !== this.migration_intent) {\n\t\t\t\twpmdb.current_migration.setText(wpmdb_strings.flushing);\n\t\t\t\tthis.doing_ajax = true;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'wpmdb_flush',\n\t\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\t\tnonce: wpmdb_data.nonces.flush\n\t\t\t\t\t},\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.flush_problem, 'error');\n\n\t\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'execute_next_step',\n\t\tvalue: function execute_next_step() {\n\n\t\t\t// if delay is set, set a timeout for delay to recall this function, then return\n\t\t\tif (0 < this.delay_between_requests && false === this.flag_skip_delay) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis.flag_skip_delay = true;\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}, this.delay_between_requests);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.flag_skip_delay = false;\n\t\t\t}\n\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\t$('.migration-progress-ajax-spinner').hide();\n\n\t\t\t\t// Pause the timer\n\t\t\t\twpmdb.current_migration.pauseTimer();\n\n\t\t\t\tvar pause_text = '';\n\t\t\t\tif (true === this.is_auto_pause_before_finalize) {\n\t\t\t\t\tpause_text = wpmdb_strings.paused_before_finalize;\n\t\t\t\t\tthis.is_auto_pause_before_finalize = false;\n\n\t\t\t\t\tif ('find_replace' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\tpause_text = wpmdb_strings.find_replace_paused_before_finalize;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpause_text = wpmdb_strings.paused;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.setState(null, pause_text, 'paused');\n\n\t\t\t\t// Re-bind Pause/Resume button to Resume when we are finally Paused\n\t\t\t\t$('body').on('click', '.pause-resume', function (event) {\n\t\t\t\t\tthis.set_pause_resume_button(event);\n\t\t\t\t});\n\t\t\t\t$('body').on('click', '.cancel', function (event) {\n\t\t\t\t\tthis.cancel_migration(event);\n\t\t\t\t});\n\t\t\t\t$('.pause-resume').html(wpmdb_strings.resume);\n\t\t\t} else if (true === this.migration_cancelled) {\n\t\t\t\tthis.migration_intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\t\tvar progress_msg;\n\n\t\t\t\tif ('savefile' === this.migration_intent) {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_sql;\n\t\t\t\t} else if ('pull' === this.migration_intent) {\n\t\t\t\t\tif ('backup' === this.stage) {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_backup;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_temp_tables;\n\t\t\t\t\t}\n\t\t\t\t} else if ('push' === this.migration_intent) {\n\t\t\t\t\tif ('backup' === this.stage) {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_sql;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_temp_tables;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twpmdb.current_migration.setText(progress_msg);\n\n\t\t\t\tvar request_data = {\n\t\t\t\t\taction: 'wpmdb_cancel_migration',\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\tnonce: wpmdb_data.nonces.cancel_migration\n\t\t\t\t};\n\n\t\t\t\tthis.doing_ajax = true;\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: request_data,\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, wpmdb_strings.manually_remove_temp_files + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText, 'error');\n\t\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tdata = $.trim(data);\n\n\t\t\t\t\t\tif ('push' === this.migration_intent && '1' !== data || 'push' !== this.migration_intent && '' !== data) {\n\n\t\t\t\t\t\t\tif ('undefined' !== typeof data && 'undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t\t\tdata = data.wpmdb_error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, data, 'error');\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.completed_msg = wpmdb_strings.migration_cancelled;\n\n\t\t\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\t\t\tthis.completed_msg = wpmdb_strings.find_replace_cancelled;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\twpmdb.current_migration.setStatus('cancelled');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twpmdb.common.next_step_in_migration.fn.apply(null, wpmdb.common.next_step_in_migration.args);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_prefix_notice',\n\t\tvalue: function maybe_show_prefix_notice(prefix) {\n\t\t\tvar $prefix_notice = $('.prefix-notice');\n\n\t\t\t$prefix_notice.hide();\n\n\t\t\tif (prefix !== wpmdb_data.this_prefix) {\n\t\t\t\t$('.remote-prefix').html(prefix);\n\t\t\t\tthis.show_prefix_notice = true;\n\t\t\t\t$prefix_notice.show();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_mst_warning',\n\t\tvalue: function maybe_show_mst_warning(data) {\n\t\t\tvar migration_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar show_mst_warning = false;\n\n\t\t\tif (-1 !== $.inArray(migration_type, ['push', 'pull']) && 'undefined' !== typeof data.site_details) {\n\t\t\t\tif (wpmdb_data.site_details.is_multisite !== data.site_details.is_multisite) {\n\t\t\t\t\tif ('undefined' === typeof wpmdb.mst || 'undefined' === typeof data.mst_available || '1' !== data.mst_available) {\n\t\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ('import' === migration_type) {\n\t\t\t\tif ('undefined' !== typeof data.multisite && 'undefined' !== typeof data.subsite_export) {\n\t\t\t\t\tif ('false' === wpmdb_data.site_details.is_multisite && 'true' === data.multisite && 'true' !== data.subsite_export || 'true' === wpmdb_data.site_details.is_multisite && 'false' === data.multisite) {\n\t\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshow_mst_warning = $.wpmdb.apply_filters('wpmdb_show_mst_warning', show_mst_warning);\n\n\t\t\tif (show_mst_warning) {\n\t\t\t\t$('.mst-required').show();\n\t\t\t}\n\n\t\t\treturn show_mst_warning;\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_select_table_notice',\n\t\tvalue: function maybe_show_select_table_notice() {\n\n\t\t\t// check that they've selected some tables to migrate\n\t\t\tif ($('#migrate-selected').is(':checked') && null === $('#select-tables').val()) {\n\t\t\t\tif ('import' !== wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\talert(wpmdb_strings.please_select_one_table);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif ($('#import-find-replace').is(':checked') && $('#select-tables').is(':visible')) {\n\t\t\t\t\t\talert(wpmdb_strings.please_select_one_table_import);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check that they've selected some tables to backup\n\t\t\tif ('savefile' !== wpmdb.functions.wpmdb_migration_type() && $('#backup-manual-select').is(':checked') && null === $('#select-backup').val()) {\n\t\t\t\talert(wpmdb_strings.please_select_one_table_backup);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}, {\n\t\tkey: 'remove_protocol',\n\t\tvalue: function remove_protocol(url) {\n\t\t\treturn url.replace(/^https?:/i, '');\n\t\t}\n\t}, {\n\t\tkey: 'create_table_select',\n\t\tvalue: function create_table_select(tables, table_sizes_hr, selected_tables) {\n\t\t\tvar $table_select = document.createElement('select');\n\t\t\t$($table_select).attr({\n\t\t\t\tmultiple: 'multiple',\n\t\t\t\tname: 'select_tables[]',\n\t\t\t\tid: 'select-tables',\n\t\t\t\tclass: 'multiselect'\n\t\t\t});\n\n\t\t\tif (0 < tables.length) {\n\t\t\t\t$.each(tables, function (index, table) {\n\t\t\t\t\tif ($.wpmdb.apply_filters('wpmdb_exclude_table', false, table)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar selected = ' ';\n\t\t\t\t\tif (undefined !== selected_tables && null !== selected_tables && 0 < selected_tables.length && -1 !== $.inArray(table, selected_tables)) {\n\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar size = '';\n\t\t\t\t\tif (0 !== table_sizes_hr.length) {\n\t\t\t\t\t\tsize = ' (' + table_sizes_hr[table] + ')';\n\t\t\t\t\t}\n\n\t\t\t\t\t$($table_select).append('<option' + selected + 'value=\"' + table + '\">' + table + size + '</option>');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn $table_select;\n\t\t}\n\n\t\t/**\n   * Returns tables selected for migration.\n   *\n   * @returns {array}\n   *\n   * Also handler for wpmdb_get_tables_to_migrate filter, disregards input values as it is the primary source.\n   */\n\n\t}, {\n\t\tkey: 'get_tables_to_migrate',\n\t\tvalue: function get_tables_to_migrate() {\n\t\t\tvar tables = [];\n\t\t\tvar mig_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar table_intent = $('input[name=table_migrate_option]:checked').val();\n\n\t\t\t// Grab tables as per what the user has selected from the multiselect box or all prefixed tables.\n\t\t\tif ('migrate_select' === table_intent) {\n\t\t\t\ttables = $('#select-tables').val();\n\t\t\t} else {\n\t\t\t\tif ('pull' !== mig_type && 'undefined' !== typeof wpmdb_data.this_prefixed_tables) {\n\t\t\t\t\ttables = wpmdb_data.this_prefixed_tables;\n\t\t\t\t} else if ('pull' === mig_type && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.prefixed_tables) {\n\t\t\t\t\ttables = wpmdb.common.connection_data.prefixed_tables;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tables;\n\t\t}\n\t}, {\n\t\tkey: 'update_migrate_button_text',\n\t\tvalue: function update_migrate_button_text() {\n\t\t\tvar migration_intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar save_string = $('#save-migration-profile').is(':checked') ? '_save' : '';\n\t\t\tvar migrate_string = 'migrate_button_' + ('savefile' === migration_intent ? 'export' : migration_intent) + save_string;\n\t\t\t$('.migrate-db .button-primary').val(wpmdb_strings[migrate_string]);\n\t\t}\n\n\t\t// fired when the connection info box changes (e.g. gets pasted into)\n\n\t}, {\n\t\tkey: 'connection_box_changed',\n\t\tvalue: function connection_box_changed() {\n\t\t\tvar $this = $('.pull-push-connection-info');\n\n\t\t\tif (-1 === $.inArray(wpmdb.functions.wpmdb_migration_type(), ['push', 'pull']) || (this.doing_ajax || $($this).hasClass('temp-disabled')) && false === wpmdb.force_reconnect) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twpmdb.force_reconnect = false;\n\t\t\tvar data = $('.pull-push-connection-info').val();\n\n\t\t\tvar connection_info = $.trim(data).split('\\n');\n\t\t\tvar error = false;\n\t\t\tvar error_message = '';\n\n\t\t\tif ('' === connection_info) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_missing;\n\t\t\t}\n\n\t\t\t// attempt to format the connection info from a single line\n\t\t\tif (1 === connection_info.length && !error) {\n\t\t\t\tvar connection_words = $.trim(data).split(' ');\n\t\t\t\tif (2 === connection_words.length) {\n\t\t\t\t\tconnection_info = connection_words;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (2 !== connection_info.length && !error) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_incorrect;\n\t\t\t}\n\n\t\t\tif (!error && !this.validate_url(connection_info[0])) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_url_invalid;\n\t\t\t}\n\n\t\t\tvar key_length = 0;\n\n\t\t\tif ('undefined' !== typeof connection_info[1]) {\n\t\t\t\tkey_length = connection_info[1].length;\n\t\t\t}\n\n\t\t\tif (!error && 32 !== key_length && 40 !== key_length) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_key_invalid;\n\t\t\t}\n\n\t\t\tif (!error && connection_info[0] === wpmdb_data.connection_info[0]) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_local_url;\n\t\t\t}\n\n\t\t\tif (!error && connection_info[1] === wpmdb_data.connection_info[1]) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_local_key;\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\t$('.connection-status').html(error_message);\n\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar new_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\n\t\t\t// If connection info is a single line\n\t\t\tif (1 === $.trim(data).split('\\n').length) {\n\n\t\t\t\t// Repopulate the input with the info on two lines\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t}\n\n\t\t\tif (false === wpmdb_data.openssl_available) {\n\t\t\t\tconnection_info[0] = connection_info[0].replace('https://', 'http://');\n\t\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t}\n\n\t\t\tthis.show_prefix_notice = false;\n\t\t\tthis.doing_ajax = true;\n\t\t\tthis.disable_export_type_controls();\n\n\t\t\tif ($('.basic-access-auth-wrapper').is(':visible')) {\n\t\t\t\tconnection_info[0] = connection_info[0].replace(/\\/\\/(.*)@/, '//');\n\t\t\t\tconnection_info[0] = connection_info[0].replace('//', '//' + encodeURIComponent($.trim($('.auth-username').val())) + ':' + encodeURIComponent($.trim($('.auth-password').val())) + '@');\n\t\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t\t$('.basic-access-auth-wrapper').hide();\n\t\t\t}\n\n\t\t\t$('.step-two').hide();\n\t\t\t$('.ssl-notice').hide();\n\t\t\t$('.prefix-notice').hide();\n\t\t\t$('.connection-status').show();\n\n\t\t\t$('.connection-status').html(wpmdb_strings.establishing_remote_connection);\n\t\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t\t$('.connection-status').append(this.ajax_spinner);\n\n\t\t\tvar intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\tthis.profile_name_edited = false;\n\n\t\t\treturn $.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_verify_connection_to_remote_site',\n\t\t\t\t\turl: connection_info[0],\n\t\t\t\t\tkey: connection_info[1],\n\t\t\t\t\tintent: intent,\n\t\t\t\t\tnonce: wpmdb_data.nonces.verify_connection_to_remote_site\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.connection-status').html(this.get_ajax_errors(jqXHR.responseText, '(#100)', jqXHR));\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tthis.enable_export_type_controls();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tthis.enable_export_type_controls();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!$('.pull-push-connection-info').hasClass('temp-disabled') && !$('.connect-button').is(':visible')) {\n\t\t\t\t\t\t\t$('.pull-push-connection-info').removeAttr('readonly');\n\t\t\t\t\t\t\t$('.connect-button').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (true === this.maybe_show_mst_warning(data)) {\n\t\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.maybe_show_ssl_warning(connection_info[0], connection_info[1], data.scheme);\n\n\t\t\t\t\tvar profile_name = this.get_domain_name(data.url);\n\t\t\t\t\t$('.create-new-profile').val(profile_name);\n\n\t\t\t\t\t$('.pull-push-connection-info').addClass('temp-disabled');\n\t\t\t\t\t$('.pull-push-connection-info').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\n\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t$('.step-two').show();\n\n\t\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\n\t\t\t\t\tthis.connection_established = true;\n\t\t\t\t\tthis.set_connection_data(data);\n\t\t\t\t\tthis.move_connection_info_box();\n\t\t\t\t\tthis.change_replace_values();\n\n\t\t\t\t\tthis.maybe_show_mixed_cased_table_name_warning();\n\n\t\t\t\t\tthis.refresh_table_selects(null, null, this);\n\n\t\t\t\t\tthis.$push_select_backup = $(this.$pull_select).clone();\n\t\t\t\t\t$(this.$push_select_backup).attr({\n\t\t\t\t\t\tname: 'select_backup[]',\n\t\t\t\t\t\tid: 'select-backup'\n\t\t\t\t\t});\n\n\t\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.post_types, function (index, value) {\n\t\t\t\t\t\t$($post_type_select).append('<option value=\"' + value + '\">' + value + '</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.$pull_post_type_select = $post_type_select;\n\n\t\t\t\t\t$('#new-path-missing-warning, #new-url-missing-warning').hide();\n\n\t\t\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\t$('#new-url').val(this.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t\t$('#new-path').val(wpmdb_data.this_path);\n\t\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t\t$('#new-domain').val(wpmdb_data.this_domain);\n\t\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('#old-url').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t$('#old-path').val(data.path);\n\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t\t$('.exclude-post-types-warning').after(this.$pull_post_type_select);\n\t\t\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t\t\t$('.table-prefix').html(data.prefix);\n\t\t\t\t\t\t$('.backup-table-prefix').html(wpmdb_data.site_details.prefix);\n\t\t\t\t\t\t$('.uploads-dir').html(wpmdb_data.this_uploads_dir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#new-url').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t$('#new-path').val(data.path);\n\n\t\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(this.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_push_table_select');\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(this.$push_select_backup);\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\tfn: $.wpmdb.do_action,\n\t\t\t\t\t\targs: ['verify_connection_to_remote_site', wpmdb.common.connection_data]\n\t\t\t\t\t};\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn WPMDBGlobals;\n}();\n\nexports.default = WPMDBGlobals;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */,
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */,
/* 39 */,
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar MigrationProgressStageModel = __webpack_require__(50);\nvar $ = jQuery;\n\nvar MigrationProgressModel = Backbone.Model.extend({\n\tdefaults: {\n\t\t_initialStages: null,\n\t\tstages: null,\n\t\tactiveStageName: null,\n\t\tstageModels: null,\n\t\tlocalTableRows: null,\n\t\tlocalTableSizes: null,\n\t\tremoteTableRows: null,\n\t\tremoteTableSizes: null,\n\t\tmigrationStatus: 'active',\n\t\tmigrationIntent: 'savefile'\n\t},\n\tinitialize: function initialize() {\n\t\tthis.set('stageModels', {});\n\t\tthis.set('_initialStages', this.get('stages'));\n\t\tthis.set('stages', []);\n\t\t_.each(this.get('_initialStages'), function (stage, items, dataType) {\n\t\t\tthis.addStage(stage.name, items, dataType);\n\t\t}, this);\n\t},\n\taddStage: function addStage(name, items, dataType, extend) {\n\t\tvar itemsArr = [];\n\t\tvar stage;\n\n\t\t_.each(items, function (item) {\n\t\t\tvar size, rows;\n\n\t\t\tif ('remote' === dataType) {\n\t\t\t\tsize = this.get('remoteTableSizes')[item];\n\t\t\t\trows = this.get('remoteTableRows')[item];\n\t\t\t} else {\n\t\t\t\tsize = this.get('localTableSizes')[item];\n\t\t\t\trows = this.get('localTableRows')[item];\n\t\t\t}\n\n\t\t\titemsArr.push({\n\t\t\t\tname: item,\n\t\t\t\tsize: size,\n\t\t\t\trows: rows\n\t\t\t});\n\t\t}, this);\n\n\t\tstage = {\n\t\t\tname: name,\n\t\t\titems: itemsArr,\n\t\t\tdataType: dataType\n\t\t};\n\n\t\tif ('object' === (typeof extend === 'undefined' ? 'undefined' : _typeof(extend))) {\n\t\t\tstage = $.extend(stage, extend);\n\t\t}\n\n\t\tthis.addStageModel(stage);\n\n\t\tthis.trigger('stage:added', this.get('stageModels')[name]);\n\t\tthis.get('stageModels')[name].on('change', function () {\n\t\t\tthis.trigger('change');\n\t\t}, this);\n\n\t\treturn this.getStageModel(stage.name);\n\t},\n\taddStageItem: function addStageItem(stage, name, size, rows) {\n\t\tvar displayName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n\n\t\tthis.getStageModel(stage).addItem(name, size, rows, displayName);\n\t},\n\taddStageModel: function addStageModel(stage) {\n\t\tvar stages = this.get('stages');\n\t\tvar stageModels = this.get('stageModels');\n\t\tvar newStageModel = new MigrationProgressStageModel(stage);\n\n\t\tstages.push(stage);\n\t\tstageModels[stage.name] = newStageModel;\n\n\t\tthis.set('stages', stages);\n\t\tthis.set('stageModels', stageModels);\n\t},\n\tgetStageModel: function getStageModel(name) {\n\t\treturn this.get('stageModels')[name];\n\t},\n\tgetStageItems: function getStageItems(stage, map) {\n\t\tvar stageModel = this.getStageModel(stage);\n\t\tvar items = stageModel.get('items');\n\n\t\tif (undefined === map) {\n\t\t\treturn items;\n\t\t} else {\n\t\t\treturn items.map(function (item) {\n\t\t\t\treturn item[map];\n\t\t\t});\n\t\t}\n\t},\n\tsetActiveStage: function setActiveStage(stage) {\n\t\tthis.setStageComplete();\n\t\tthis.set('activeStageName', stage);\n\t\tthis.getStageModel(stage).set('status', 'active');\n\t\tthis.trigger('change:activeStage');\n\t},\n\tsetStageComplete: function setStageComplete(stage) {\n\t\tif (!stage) {\n\t\t\tstage = this.get('activeStageName');\n\t\t}\n\t\tif (null !== stage) {\n\t\t\tthis.getStageModel(stage).set('status', 'complete');\n\t\t}\n\n\t\twpmdb.current_migration.currentStageNum = wpmdb.current_migration.currentStageNum + 1;\n\t},\n\tsetMigrationComplete: function setMigrationComplete() {\n\t\tvar lastStage = this.getStageModel(this.get('activeStageName'));\n\t\tthis.setStageComplete();\n\t\tthis.trigger('migrationComplete');\n\t\tthis.set('migrationStatus', 'complete');\n\t\tlastStage.activateTab();\n\t}\n});\n\nmodule.exports = MigrationProgressModel;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar $ = jQuery;\n\nvar MigrationProgressStage = Backbone.Model.extend({\n\tdefaults: {\n\t\tstatus: 'queued',\n\t\t_initialItems: null,\n\t\titems: null,\n\t\tlookupItems: null,\n\t\ttotalSize: 0,\n\t\ttotalTransferred: 0,\n\t\tdataType: 'local',\n\t\tname: '',\n\t\titemsComplete: 0,\n\t\titemsCompleteArr: [],\n\t\tstrings: null\n\t},\n\tinitialize: function initialize() {\n\t\tthis.initStrings();\n\n\t\tthis.set('_initialItems', this.get('items').slice());\n\t\tthis.set('items', []);\n\t\tthis.set('lookupItems', {});\n\t\tthis.set('itemsCompleteArr', []);\n\n\t\t_.each(this.get('_initialItems'), function (item) {\n\t\t\tthis.addItem(item.name, item.size, item.rows);\n\t\t}, this);\n\n\t\tthis.on('view:initialized', this.triggerItemViewInit);\n\n\t\tthis.on('change', function () {\n\t\t\twpmdb.current_migration.updateTitleElem();\n\t\t});\n\t},\n\tinitStrings: function initStrings() {\n\t\tvar default_strings = {\n\t\t\tstage_title: this.get('name'),\n\t\t\tmigrated: wpmdb_strings.migrated,\n\t\t\tqueued: wpmdb_strings.queued,\n\t\t\tactive: wpmdb_strings.running,\n\t\t\tcomplete: wpmdb_strings.complete,\n\t\t\thide: wpmdb_strings.hide,\n\t\t\tshow: wpmdb_strings.show,\n\t\t\titemsName: wpmdb_strings.tables\n\t\t};\n\t\tvar strings = this.get('strings');\n\n\t\tstrings = 'object' === (typeof strings === 'undefined' ? 'undefined' : _typeof(strings)) ? strings : {};\n\t\tstrings = $.extend(default_strings, strings);\n\n\t\tstrings.items_migrated = strings.itemsName + ' ' + strings.migrated;\n\t\tstrings.hide_items = strings.hide + ' ' + strings.itemsName;\n\t\tstrings.show_items = strings.show + ' ' + strings.itemsName;\n\n\t\tthis.set('strings', strings);\n\t},\n\taddItem: function addItem(name, size, rows, displayName) {\n\t\tvar items = this.get('items');\n\t\tvar item = {\n\t\t\tname: name,\n\t\t\tsize: size,\n\t\t\trows: rows || size,\n\t\t\tstageName: this.get('name'),\n\t\t\t$el: null,\n\t\t\ttransferred: 0,\n\t\t\trowsTransferred: 0,\n\t\t\tcomplete: false\n\t\t};\n\n\t\t// Only add the displayName if it's not empty\n\t\tif ('undefined' !== typeof displayName && displayName.length) {\n\t\t\titem.displayName = displayName;\n\t\t}\n\n\t\titems.push(item);\n\t\tthis.get('lookupItems')[name] = items.length - 1;\n\n\t\tthis.set('totalSize', parseInt(this.get('totalSize')) + parseInt(size));\n\t\tthis.trigger('item:added', item);\n\t},\n\ttriggerItemViewInit: function triggerItemViewInit() {\n\t\tvar items = this.get('items');\n\t\tvar self = this;\n\t\t_.each(items, function (item) {\n\t\t\tself.trigger('item:added', item);\n\t\t});\n\t},\n\tgetTotalSizeTransferred: function getTotalSizeTransferred() {\n\t\treturn this.get('totalTransferred');\n\t},\n\tcountItemsComplete: function countItemsComplete() {\n\t\treturn this.get('itemsComplete');\n\t},\n\tgetTotalProgressPercent: function getTotalProgressPercent() {\n\t\tvar transferred = this.getTotalSizeTransferred();\n\t\tvar total = this.get('totalSize');\n\t\tif (0 >= transferred || 0 >= total) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.min(100, Math.floor(transferred / total * 100));\n\t},\n\tactivateTab: function activateTab() {\n\t\tthis.trigger('activateTab');\n\t\twpmdb.current_migration.model.trigger('change:activeStage');\n\t},\n\tsetItemComplete: function setItemComplete(itemName) {\n\n\t\t// Guard: return if item has already been set complete\n\t\tvar itemsCompleteArr = this.get('itemsCompleteArr');\n\t\tif (~itemsCompleteArr.indexOf(itemName)) {\n\t\t\treturn;\n\t\t}\n\t\titemsCompleteArr.push(itemName);\n\n\t\tvar item = this.getItemByName(itemName);\n\t\tvar totalTransferred = this.get('totalTransferred');\n\t\tvar itemsComplete = this.get('itemsComplete');\n\n\t\tthis.set('itemsComplete', ++itemsComplete);\n\n\t\ttotalTransferred += item.size - item.transferred;\n\t\tthis.set('totalTransferred', totalTransferred);\n\n\t\titem.transferred = item.size;\n\t\titem.complete = true;\n\t\titem.rowsTransferred = item.rows;\n\t\tthis.trigger('change change:items', item);\n\t},\n\tsetItemRowsTransferred: function setItemRowsTransferred(itemName, numRows) {\n\t\tvar amtDone, estTransferred;\n\t\tvar item = this.getItemByName(itemName);\n\t\tvar totalTransferred = this.get('totalTransferred');\n\n\t\tif (-1 === parseInt(numRows)) {\n\t\t\tamtDone = 1;\n\t\t} else {\n\t\t\tamtDone = Math.min(1, numRows / item.rows);\n\t\t}\n\n\t\tif (1 === amtDone) {\n\t\t\tthis.setItemComplete(itemName);\n\t\t\treturn;\n\t\t}\n\n\t\testTransferred = item.size * amtDone;\n\n\t\ttotalTransferred += estTransferred - item.transferred;\n\t\tthis.set('totalTransferred', totalTransferred);\n\n\t\titem.transferred = estTransferred;\n\t\titem.rowsTransferred = numRows;\n\t\tthis.trigger('change change:items', item);\n\t},\n\tgetItemByName: function getItemByName(itemName) {\n\t\tvar item = this.get('items')[this.get('lookupItems')[itemName]] || {};\n\t\tif (itemName === item.name) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\treturn this.determineItemByName(itemName);\n\t\t}\n\t},\n\tdetermineItemByName: function determineItemByName(itemName) {\n\t\tvar items = this.get('items');\n\t\tfor (var index = 0; index < items.length; index++) {\n\t\t\tvar item = items[index];\n\t\t\tif (itemName === item.name) {\n\t\t\t\tthis.get('lookupItems').itemName = index;\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = MigrationProgressStage;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar MigrationProgressStageView = __webpack_require__(52);\nvar $ = jQuery;\n\nvar MigrationProgressView = Backbone.View.extend({\n\ttagName: 'div',\n\tclassName: 'migration-progress-stages',\n\tid: 'migration-progress-stages',\n\tself: undefined,\n\tinitialize: function initialize() {\n\t\tthis.$el.empty();\n\n\t\tthis.model.on('stage:added', function (stageModel) {\n\t\t\tthis.addStageView(stageModel);\n\t\t}, this);\n\n\t\t_.each(this.model.get('stageModels'), this.addStageView, this);\n\t},\n\taddStageView: function addStageView(stageModel) {\n\t\tvar newStageSubView = new MigrationProgressStageView({\n\t\t\tmodel: stageModel\n\t\t});\n\t\tstageModel.trigger('view:initialized', newStageSubView);\n\t\tthis.$el.append(newStageSubView.$el);\n\t\tthis.$el.parent().find('.stage-tabs').append(newStageSubView.$tabElem);\n\t}\n});\n\nmodule.exports = MigrationProgressView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3Mtdmlldy5qcz83YmMxIl0sIm5hbWVzIjpbIk1pZ3JhdGlvblByb2dyZXNzU3RhZ2VWaWV3IiwicmVxdWlyZSIsIiQiLCJqUXVlcnkiLCJNaWdyYXRpb25Qcm9ncmVzc1ZpZXciLCJCYWNrYm9uZSIsIlZpZXciLCJleHRlbmQiLCJ0YWdOYW1lIiwiY2xhc3NOYW1lIiwiaWQiLCJzZWxmIiwiaW5pdGlhbGl6ZSIsIiRlbCIsImVtcHR5IiwibW9kZWwiLCJvbiIsInN0YWdlTW9kZWwiLCJhZGRTdGFnZVZpZXciLCJfIiwiZWFjaCIsImdldCIsIm5ld1N0YWdlU3ViVmlldyIsInRyaWdnZXIiLCJhcHBlbmQiLCJwYXJlbnQiLCJmaW5kIiwiJHRhYkVsZW0iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLDZCQUE2QixtQkFBQUMsQ0FBUyxFQUFULENBQWpDO0FBQ0EsSUFBSUMsSUFBSUMsTUFBUjs7QUFFQSxJQUFJQyx3QkFBd0JDLFNBQVNDLElBQVQsQ0FBY0MsTUFBZCxDQUFzQjtBQUNqREMsVUFBUyxLQUR3QztBQUVqREMsWUFBVywyQkFGc0M7QUFHakRDLEtBQUksMkJBSDZDO0FBSWpEQyxnQkFKaUQ7QUFLakRDLGFBQVksc0JBQVc7QUFDdEIsT0FBS0MsR0FBTCxDQUFTQyxLQUFUOztBQUVBLE9BQUtDLEtBQUwsQ0FBV0MsRUFBWCxDQUFlLGFBQWYsRUFBOEIsVUFBVUMsVUFBVixFQUF1QjtBQUNwRCxRQUFLQyxZQUFMLENBQW1CRCxVQUFuQjtBQUNBLEdBRkQsRUFFRyxJQUZIOztBQUlBRSxJQUFFQyxJQUFGLENBQVEsS0FBS0wsS0FBTCxDQUFXTSxHQUFYLENBQWdCLGFBQWhCLENBQVIsRUFBeUMsS0FBS0gsWUFBOUMsRUFBNEQsSUFBNUQ7QUFDQSxFQWJnRDtBQWNqREEsZUFBYyxzQkFBVUQsVUFBVixFQUF1QjtBQUNwQyxNQUFJSyxrQkFBa0IsSUFBSXRCLDBCQUFKLENBQWdDO0FBQ3JEZSxVQUFPRTtBQUQ4QyxHQUFoQyxDQUF0QjtBQUdBQSxhQUFXTSxPQUFYLENBQW9CLGtCQUFwQixFQUF3Q0QsZUFBeEM7QUFDQSxPQUFLVCxHQUFMLENBQVNXLE1BQVQsQ0FBaUJGLGdCQUFnQlQsR0FBakM7QUFDQSxPQUFLQSxHQUFMLENBQVNZLE1BQVQsR0FBa0JDLElBQWxCLENBQXdCLGFBQXhCLEVBQXdDRixNQUF4QyxDQUFnREYsZ0JBQWdCSyxRQUFoRTtBQUNBO0FBckJnRCxDQUF0QixDQUE1Qjs7QUF3QkFDLE9BQU9DLE9BQVAsR0FBaUJ6QixxQkFBakIiLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWlncmF0aW9uUHJvZ3Jlc3NTdGFnZVZpZXcgPSByZXF1aXJlKCAnLi9NaWdyYXRpb25Qcm9ncmVzc1N0YWdlLXZpZXcuanMnICk7XG52YXIgJCA9IGpRdWVyeTtcblxudmFyIE1pZ3JhdGlvblByb2dyZXNzVmlldyA9IEJhY2tib25lLlZpZXcuZXh0ZW5kKCB7XG5cdHRhZ05hbWU6ICdkaXYnLFxuXHRjbGFzc05hbWU6ICdtaWdyYXRpb24tcHJvZ3Jlc3Mtc3RhZ2VzJyxcblx0aWQ6ICdtaWdyYXRpb24tcHJvZ3Jlc3Mtc3RhZ2VzJyxcblx0c2VsZjogdGhpcyxcblx0aW5pdGlhbGl6ZTogZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy4kZWwuZW1wdHkoKTtcblxuXHRcdHRoaXMubW9kZWwub24oICdzdGFnZTphZGRlZCcsIGZ1bmN0aW9uKCBzdGFnZU1vZGVsICkge1xuXHRcdFx0dGhpcy5hZGRTdGFnZVZpZXcoIHN0YWdlTW9kZWwgKTtcblx0XHR9LCB0aGlzICk7XG5cblx0XHRfLmVhY2goIHRoaXMubW9kZWwuZ2V0KCAnc3RhZ2VNb2RlbHMnICksIHRoaXMuYWRkU3RhZ2VWaWV3LCB0aGlzICk7XG5cdH0sXG5cdGFkZFN0YWdlVmlldzogZnVuY3Rpb24oIHN0YWdlTW9kZWwgKSB7XG5cdFx0dmFyIG5ld1N0YWdlU3ViVmlldyA9IG5ldyBNaWdyYXRpb25Qcm9ncmVzc1N0YWdlVmlldygge1xuXHRcdFx0bW9kZWw6IHN0YWdlTW9kZWxcblx0XHR9ICk7XG5cdFx0c3RhZ2VNb2RlbC50cmlnZ2VyKCAndmlldzppbml0aWFsaXplZCcsIG5ld1N0YWdlU3ViVmlldyApO1xuXHRcdHRoaXMuJGVsLmFwcGVuZCggbmV3U3RhZ2VTdWJWaWV3LiRlbCApO1xuXHRcdHRoaXMuJGVsLnBhcmVudCgpLmZpbmQoICcuc3RhZ2UtdGFicycgKS5hcHBlbmQoIG5ld1N0YWdlU3ViVmlldy4kdGFiRWxlbSApO1xuXHR9XG59ICk7XG5cbm1vZHVsZS5leHBvcnRzID0gTWlncmF0aW9uUHJvZ3Jlc3NWaWV3O1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9qcy9tb2R1bGVzL01pZ3JhdGlvblByb2dyZXNzLXZpZXcuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar $ = jQuery;\n\nvar MigrationProgressStageView = Backbone.View.extend({\n\ttagName: 'div',\n\tclassName: 'migration-progress-stage-container hide-tables',\n\t$totalProgressElem: null,\n\t$tabElem: null,\n\t$showHideTablesElem: null,\n\t$pauseBeforeFinalizeElem: null,\n\t$pauseBeforeFinalizeCheckbox: null,\n\t$itemsContainer: null,\n\titemViews: null,\n\tmaxDomNodes: 100,\n\tvisibleDomNodes: 0,\n\tqueuedElements: null,\n\t$truncationNotice: null,\n\t$truncationNoticeHiddenItems: null,\n\tinitialize: function initialize() {\n\t\tthis.$el.empty();\n\t\tthis.$el.attr('data-stage', this.model.get('name')).addClass('queued ' + this.model.get('name'));\n\n\t\tthis.queuedElements = [];\n\n\t\tthis.initTotalProgressElem();\n\t\twpmdb.current_migration.view.$el.parent().find('.stage-tabs').after(this.$totalProgressElem);\n\n\t\tthis.$itemsContainer = $('<div class=progress-items />');\n\t\tthis.$el.append(this.$itemsContainer);\n\n\t\tthis.initTabElem();\n\n\t\tthis.model.on('item:added', this.maybeAddElementToView, this);\n\n\t\t_.each(this.model.get('itemModels'), this.maybeAddElementToView, this);\n\t\tthis.model.on('change', function () {\n\t\t\tthis.updateProgressElem();\n\t\t\tthis.updateStageTotals();\n\t\t}, this);\n\n\t\tthis.model.on('change:status', function (e) {\n\t\t\tthis.$el.removeClass('queued active').addClass(this.model.get('status'));\n\t\t\tthis.$totalProgressElem.removeClass('queued active').addClass(this.model.get('status'));\n\t\t\tthis.$tabElem.removeClass('queued active').addClass(this.model.get('status')).find('.stage-status').text(this.model.get('strings')[this.model.get('status')]);\n\t\t}, this);\n\n\t\tthis.model.on('change:items', function (item) {\n\t\t\tif (item.name) {\n\t\t\t\tthis.setItemProgress(item);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis.model.on('activateTab', function () {\n\t\t\tif ('complete' === wpmdb.current_migration.model.get('migrationStatus')) {\n\t\t\t\tthis.$totalProgressElem.addClass('active').siblings().removeClass('active');\n\t\t\t\tthis.$tabElem.addClass('active').siblings().removeClass('active');\n\t\t\t\tthis.$el.addClass('active').siblings().removeClass('active');\n\t\t\t}\n\t\t}, this);\n\t},\n\tinitTotalProgressElem: function initTotalProgressElem() {\n\t\tthis.initShowHideTablesElem();\n\t\tthis.initPauseBeforeFinalizeElem();\n\n\t\tthis.$totalProgressElem = $('<div class=\"stage-progress ' + this.model.get('name') + '\" />').append('<span class=percent-complete>0</span>% ' + this.model.get('strings').complete + ' ').append('<span class=\"size-complete-wrap\">(<span class=size-complete>0 MB</span> / <span class=size-total>0 MB</span>) </span>').append('<span class=\"items-complete-wrap\"><span class=items-complete>0</span> <span class=lowercase >of</span> <span class=items-total>0</span> ' + this.model.get('strings').items_migrated + '</span>').append(this.$showHideTablesElem).append('<div class=progress-bar-wrapper><div class=progress-bar /></div>');\n\n\t\tthis.updateStageTotals();\n\t},\n\tinitShowHideTablesElem: function initShowHideTablesElem() {\n\t\tthis.$showHideTablesElem = $('<a class=show-hide-tables/>').text(this.model.get('strings').show_items);\n\t\tvar self = this;\n\t\tthis.$showHideTablesElem.on('click show-hide-progress-tables', function () {\n\t\t\tvar progTablesHidden;\n\t\t\tif (self.$el.hasClass('hide-tables')) {\n\t\t\t\t// show tables\n\t\t\t\tprogTablesHidden = false;\n\t\t\t\tself.$el.add(self.$el.siblings()).removeClass('hide-tables');\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').hide_items);\n\t\t\t} else {\n\t\t\t\t// hide tables\n\t\t\t\tprogTablesHidden = true;\n\t\t\t\tself.$el.add(self.$el.siblings()).addClass('hide-tables');\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').show_items);\n\t\t\t}\n\n\t\t\tif (Boolean(progTablesHidden) !== Boolean(wpmdb_data.prog_tables_hidden)) {\n\t\t\t\twpmdb_data.prog_tables_visibility_changed = true;\n\t\t\t\twpmdb_data.prog_tables_hidden = progTablesHidden;\n\t\t\t}\n\t\t});\n\n\t\t// show progress tables on init if hidden is false\n\t\tif (!wpmdb_data.prog_tables_hidden) {\n\t\t\tthis.$showHideTablesElem.triggerHandler('show-hide-progress-tables');\n\t\t}\n\n\t\t// make sure text reflects current state when showing\n\t\tthis.model.on('change:status activateTab', function () {\n\t\t\tif (wpmdb_data.prog_tables_hidden) {\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').show_items);\n\t\t\t} else {\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').hide_items);\n\t\t\t}\n\t\t});\n\t},\n\tinitPauseBeforeFinalizeElem: function initPauseBeforeFinalizeElem() {\n\t\tthis.$pauseBeforeFinalizeElem = $('.pause-before-finalize');\n\t\tthis.$pauseBeforeFinalizeCheckbox = this.$pauseBeforeFinalizeElem.find('input[type=checkbox]');\n\t\tvar self = this;\n\t\tvar isChecked = false;\n\t\tvar migrationIntent = wpmdb.current_migration.model.get('migrationIntent');\n\n\t\t// make sure checkbox is checked based on current state\n\t\tif (wpmdb_data.pause_before_finalize) {\n\t\t\tisChecked = true;\n\t\t}\n\t\tthis.$pauseBeforeFinalizeCheckbox.prop('checked', isChecked);\n\n\t\t// only display on certain migrations\n\t\tif (-1 !== $.inArray(migrationIntent, ['push', 'pull', 'find_replace', 'import'])) {\n\t\t\tif ('find_replace' === migrationIntent) {\n\t\t\t\t$('#pause-before-finalize-label').text(wpmdb_strings.pause_before_finalize_find_replace);\n\t\t\t}\n\t\t\tthis.$pauseBeforeFinalizeElem.show();\n\t\t} else {\n\t\t\tthis.$pauseBeforeFinalizeElem.hide();\n\t\t}\n\n\t\t// hide on media stage\n\t\twpmdb.current_migration.model.on('change:activeStage', function () {\n\t\t\tif ('media' === wpmdb.current_migration.model.get('activeStageName')) {\n\t\t\t\tself.$pauseBeforeFinalizeElem.hide();\n\t\t\t}\n\t\t});\n\n\t\tthis.$pauseBeforeFinalizeElem.on('click', function () {\n\t\t\tvar pauseBeforeFinalizeValue = Boolean(self.$pauseBeforeFinalizeCheckbox.is(':checked'));\n\t\t\tif (pauseBeforeFinalizeValue !== Boolean(wpmdb_data.pause_before_finalize)) {\n\t\t\t\twpmdb_data.pause_before_finalize_changed = true;\n\t\t\t\twpmdb_data.pause_before_finalize = pauseBeforeFinalizeValue;\n\t\t\t}\n\t\t});\n\t},\n\tinitTabElem: function initTabElem() {\n\t\tvar self = this;\n\t\tthis.$tabElem = $('<a class=stage-tab>').append('<span class=stage-title>' + this.model.get('strings').stage_title + '</span> ').append('<span class=stage-status>' + this.model.get('strings').queued + '</span> ').on('click', function () {\n\t\t\tself.model.activateTab();\n\t\t});\n\t},\n\tupdateProgressElem: function updateProgressElem() {\n\t\tvar percentDone = Math.max(0, this.model.getTotalProgressPercent());\n\t\tvar sizeDone = wpmdb.functions.convertKBSizeToHRFixed(Math.min(this.model.getTotalSizeTransferred(), this.model.get('totalSize')));\n\t\tvar tablesDone = Math.min(this.model.countItemsComplete(), this.model.get('items').length);\n\n\t\tif ('complete' === this.model.get('status') && 0 === this.model.get('totalSize')) {\n\t\t\tpercentDone = 100;\n\t\t\tthis.$showHideTablesElem.fadeOut();\n\t\t}\n\n\t\tthis.$totalProgressElem.find('.percent-complete').text(percentDone);\n\t\tthis.$totalProgressElem.find('.size-complete').text(sizeDone);\n\t\tthis.$totalProgressElem.find('.items-complete').text(wpmdb.functions.wpmdb_add_commas(tablesDone));\n\t\tthis.$totalProgressElem.find('.progress-bar-wrapper .progress-bar').css({ width: percentDone + '%' });\n\t},\n\tupdateStageTotals: function updateStageTotals(itemCount) {\n\t\titemCount = itemCount || this.model.get('items').length;\n\t\tthis.$totalProgressElem.find('.items-total').text(wpmdb.functions.wpmdb_add_commas(itemCount));\n\t\tthis.$totalProgressElem.find('.size-total').text(wpmdb.functions.convertKBSizeToHRFixed(this.model.get('totalSize')));\n\t},\n\tinitializeItemElement: function initializeItemElement(item) {\n\t\tvar itemName = item.name;\n\n\t\tif ('undefined' !== typeof item.displayName) {\n\t\t\titemName = item.displayName;\n\t\t}\n\n\t\tvar $el = $('<div class=\"item-progress\" />');\n\t\tvar $progress = $('<div class=\"progress-bar\"/>').css('width', '0%');\n\t\tvar $title = $('<p>').addClass('item-info').append($('<span class=\"name\" />').text(itemName)).append(' ').append($('<span class=\"size\" />').text('(' + wpmdb.functions.convertKBSizeToHRFixed(item.size) + ')'));\n\n\t\t$el.append($title);\n\t\t$el.append($progress);\n\t\t$el.append('<span class=\"dashicons dashicons-yes\"/>');\n\n\t\t$el.attr('id', 'item-' + item.name);\n\t\t$el.attr('data-stage', this.model.get('name'));\n\n\t\titem.$el = $el;\n\t\titem.$progress = $progress;\n\t\titem.$title = $title;\n\n\t\treturn item;\n\t},\n\tmaybeAddElementToView: function maybeAddElementToView(item) {\n\t\tif (this.visibleDomNodes < this.maxDomNodes) {\n\t\t\t++this.visibleDomNodes;\n\t\t\tthis.$itemsContainer.append(this.initializeItemElement(item).$el);\n\t\t} else {\n\t\t\tthis.queuedElements.push(item);\n\t\t\tif (!this.$truncationNotice) {\n\t\t\t\tthis.showTruncationNotice();\n\t\t\t} else {\n\t\t\t\tthis.updateTruncationNotice();\n\t\t\t}\n\t\t}\n\t},\n\tshowTruncationNotice: function showTruncationNotice() {\n\t\tif (this.$truncationNotice) {\n\t\t\treturn;\n\t\t}\n\t\tthis.$truncationNotice = $('<div class=\"truncation-notice\" >' + wpmdb_strings.progress_items_truncated_msg.replace('%1$s', '<span class=\"hidden-items\">' + wpmdb.functions.wpmdb_add_commas(this.queuedElements.length) + '</span>') + '</div>');\n\t\tthis.$truncationNoticeHiddenItems = this.$truncationNotice.find('.hidden-items');\n\t\tthis.$itemsContainer.after(this.$truncationNotice);\n\t},\n\tupdateTruncationNotice: function updateTruncationNotice() {\n\t\tthis.$truncationNoticeHiddenItems.text(wpmdb.functions.wpmdb_add_commas(this.queuedElements.length));\n\t},\n\tgetNextElementForView: function getNextElementForView($el) {\n\t\tvar queueItem;\n\t\tif (this.queuedElements.length) {\n\t\t\tif ($el) {\n\t\t\t\tthis.queuedElements.push($el);\n\t\t\t}\n\t\t\tqueueItem = this.queuedElements.shift();\n\t\t\tif (queueItem instanceof $) {\n\t\t\t\t$el = queueItem;\n\t\t\t} else {\n\t\t\t\t$el = this.initializeItemElement(queueItem).$el;\n\t\t\t}\n\t\t}\n\t\treturn $el;\n\t},\n\tsetItemProgress: function setItemProgress(item) {\n\n\t\tvar percentDone = Math.min(100, Math.ceil(100 * (item.transferred / item.size)));\n\t\tif (0 === item.size) {\n\t\t\tpercentDone = 100;\n\t\t}\n\t\titem.$progress.css('width', percentDone + '%');\n\t\tif (100 <= percentDone || 0 === item.size) {\n\t\t\tthis.elemComplete(item);\n\t\t}\n\t},\n\telemComplete: function elemComplete(item) {\n\t\tvar $el = item.$el.addClass('complete');\n\n\t\t// skip moving item to end of list if there's only one item in the list\n\t\tif (1 === this.model.get('items').length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $nextEl = this.getNextElementForView($el);\n\n\t\tvar height = $el.height();\n\t\tvar marginBottom = $el.css('margin-bottom');\n\n\t\tvar $clone = $nextEl.clone().css({ height: 0, marginBottom: 0 }).addClass('clone');\n\t\t$clone.appendTo(this.$itemsContainer);\n\t\t$el.css({ height: height, marginBottom: marginBottom });\n\n\t\tsetTimeout(function () {\n\t\t\t$el.css({ height: 0, marginBottom: 0 });\n\t\t\t$clone.css({ height: height, marginBottom: marginBottom });\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$el.css({ height: 'auto', marginBottom: marginBottom }).remove();\n\t\t\t\t$clone.remove();\n\t\t\t\tthis.$itemsContainer.find('.item-progress:not(.clone)').last().after($nextEl.css({\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tmarginBottom: marginBottom\n\t\t\t\t}));\n\t\t\t}.bind(this), 250);\n\t\t}.bind(this), 1000);\n\t}\n});\n\nmodule.exports = MigrationProgressStageView;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar $ = jQuery;\n\nmodule.exports = {\n\tupdateProgTableVisibilitySetting: function updateProgTableVisibilitySetting() {\n\t\tif (!wpmdb_data.prog_tables_visibility_changed) {\n\t\t\treturn;\n\t\t}\n\t\twpmdb_data.prog_tables_visibility_changed = false;\n\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcache: false,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_save_setting',\n\t\t\t\tnonce: wpmdb_data.nonces.save_setting,\n\t\t\t\tsetting: 'prog_tables_hidden',\n\t\t\t\tchecked: Boolean(wpmdb_data.prog_tables_hidden)\n\t\t\t},\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log('Could not save progress item visibility setting', errorThrown);\n\t\t\t}\n\t\t});\n\t},\n\tupdatePauseBeforeFinalizeSetting: function updatePauseBeforeFinalizeSetting() {\n\t\tif (!wpmdb_data.pause_before_finalize_changed) {\n\t\t\treturn;\n\t\t}\n\t\twpmdb_data.pause_before_finalize_changed = false;\n\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcache: false,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_save_setting',\n\t\t\t\tnonce: wpmdb_data.nonces.save_setting,\n\t\t\t\tsetting: 'pause_before_finalize',\n\t\t\t\tchecked: Boolean(wpmdb_data.pause_before_finalize)\n\t\t\t},\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log('Could not save pause before finalize setting', errorThrown);\n\t\t\t}\n\t\t});\n\t}\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtdXRpbHMuanM/MTBiZSJdLCJuYW1lcyI6WyIkIiwialF1ZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyIsInVwZGF0ZVByb2dUYWJsZVZpc2liaWxpdHlTZXR0aW5nIiwid3BtZGJfZGF0YSIsInByb2dfdGFibGVzX3Zpc2liaWxpdHlfY2hhbmdlZCIsImFqYXgiLCJ1cmwiLCJhamF4dXJsIiwidHlwZSIsImRhdGFUeXBlIiwiY2FjaGUiLCJkYXRhIiwiYWN0aW9uIiwibm9uY2UiLCJub25jZXMiLCJzYXZlX3NldHRpbmciLCJzZXR0aW5nIiwiY2hlY2tlZCIsIkJvb2xlYW4iLCJwcm9nX3RhYmxlc19oaWRkZW4iLCJlcnJvciIsImpxWEhSIiwidGV4dFN0YXR1cyIsImVycm9yVGhyb3duIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZVBhdXNlQmVmb3JlRmluYWxpemVTZXR0aW5nIiwicGF1c2VfYmVmb3JlX2ZpbmFsaXplX2NoYW5nZWQiLCJwYXVzZV9iZWZvcmVfZmluYWxpemUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsSUFBSUMsTUFBUjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQjtBQUNoQkMsbUNBQWtDLDRDQUFXO0FBQzVDLE1BQUssQ0FBRUMsV0FBV0MsOEJBQWxCLEVBQW1EO0FBQ2xEO0FBQ0E7QUFDREQsYUFBV0MsOEJBQVgsR0FBNEMsS0FBNUM7O0FBRUFOLElBQUVPLElBQUYsQ0FBUTtBQUNQQyxRQUFLQyxPQURFO0FBRVBDLFNBQU0sTUFGQztBQUdQQyxhQUFVLE1BSEg7QUFJUEMsVUFBTyxLQUpBO0FBS1BDLFNBQU07QUFDTEMsWUFBUSxvQkFESDtBQUVMQyxXQUFPVixXQUFXVyxNQUFYLENBQWtCQyxZQUZwQjtBQUdMQyxhQUFTLG9CQUhKO0FBSUxDLGFBQVNDLFFBQVNmLFdBQVdnQixrQkFBcEI7QUFKSixJQUxDO0FBV1BDLFVBQU8sZUFBVUMsS0FBVixFQUFpQkMsVUFBakIsRUFBNkJDLFdBQTdCLEVBQTJDO0FBQ2pEQyxZQUFRQyxHQUFSLENBQWEsaURBQWIsRUFBZ0VGLFdBQWhFO0FBQ0E7QUFiTSxHQUFSO0FBZUEsRUF0QmU7QUF1QmhCRyxtQ0FBa0MsNENBQVc7QUFDNUMsTUFBSyxDQUFFdkIsV0FBV3dCLDZCQUFsQixFQUFrRDtBQUNqRDtBQUNBO0FBQ0R4QixhQUFXd0IsNkJBQVgsR0FBMkMsS0FBM0M7O0FBRUE3QixJQUFFTyxJQUFGLENBQVE7QUFDUEMsUUFBS0MsT0FERTtBQUVQQyxTQUFNLE1BRkM7QUFHUEMsYUFBVSxNQUhIO0FBSVBDLFVBQU8sS0FKQTtBQUtQQyxTQUFNO0FBQ0xDLFlBQVEsb0JBREg7QUFFTEMsV0FBT1YsV0FBV1csTUFBWCxDQUFrQkMsWUFGcEI7QUFHTEMsYUFBUyx1QkFISjtBQUlMQyxhQUFTQyxRQUFTZixXQUFXeUIscUJBQXBCO0FBSkosSUFMQztBQVdQUixVQUFPLGVBQVVDLEtBQVYsRUFBaUJDLFVBQWpCLEVBQTZCQyxXQUE3QixFQUEyQztBQUNqREMsWUFBUUMsR0FBUixDQUFhLDhDQUFiLEVBQTZERixXQUE3RDtBQUNBO0FBYk0sR0FBUjtBQWVBO0FBNUNlLENBQWpCIiwiZmlsZSI6IjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyICQgPSBqUXVlcnk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHR1cGRhdGVQcm9nVGFibGVWaXNpYmlsaXR5U2V0dGluZzogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhIHdwbWRiX2RhdGEucHJvZ190YWJsZXNfdmlzaWJpbGl0eV9jaGFuZ2VkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHR3cG1kYl9kYXRhLnByb2dfdGFibGVzX3Zpc2liaWxpdHlfY2hhbmdlZCA9IGZhbHNlO1xuXG5cdFx0JC5hamF4KCB7XG5cdFx0XHR1cmw6IGFqYXh1cmwsXG5cdFx0XHR0eXBlOiAnUE9TVCcsXG5cdFx0XHRkYXRhVHlwZTogJ3RleHQnLFxuXHRcdFx0Y2FjaGU6IGZhbHNlLFxuXHRcdFx0ZGF0YToge1xuXHRcdFx0XHRhY3Rpb246ICd3cG1kYl9zYXZlX3NldHRpbmcnLFxuXHRcdFx0XHRub25jZTogd3BtZGJfZGF0YS5ub25jZXMuc2F2ZV9zZXR0aW5nLFxuXHRcdFx0XHRzZXR0aW5nOiAncHJvZ190YWJsZXNfaGlkZGVuJyxcblx0XHRcdFx0Y2hlY2tlZDogQm9vbGVhbiggd3BtZGJfZGF0YS5wcm9nX3RhYmxlc19oaWRkZW4gKVxuXHRcdFx0fSxcblx0XHRcdGVycm9yOiBmdW5jdGlvbigganFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duICkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyggJ0NvdWxkIG5vdCBzYXZlIHByb2dyZXNzIGl0ZW0gdmlzaWJpbGl0eSBzZXR0aW5nJywgZXJyb3JUaHJvd24gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdHVwZGF0ZVBhdXNlQmVmb3JlRmluYWxpemVTZXR0aW5nOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICEgd3BtZGJfZGF0YS5wYXVzZV9iZWZvcmVfZmluYWxpemVfY2hhbmdlZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdFx0d3BtZGJfZGF0YS5wYXVzZV9iZWZvcmVfZmluYWxpemVfY2hhbmdlZCA9IGZhbHNlO1xuXG5cdFx0JC5hamF4KCB7XG5cdFx0XHR1cmw6IGFqYXh1cmwsXG5cdFx0XHR0eXBlOiAnUE9TVCcsXG5cdFx0XHRkYXRhVHlwZTogJ3RleHQnLFxuXHRcdFx0Y2FjaGU6IGZhbHNlLFxuXHRcdFx0ZGF0YToge1xuXHRcdFx0XHRhY3Rpb246ICd3cG1kYl9zYXZlX3NldHRpbmcnLFxuXHRcdFx0XHRub25jZTogd3BtZGJfZGF0YS5ub25jZXMuc2F2ZV9zZXR0aW5nLFxuXHRcdFx0XHRzZXR0aW5nOiAncGF1c2VfYmVmb3JlX2ZpbmFsaXplJyxcblx0XHRcdFx0Y2hlY2tlZDogQm9vbGVhbiggd3BtZGJfZGF0YS5wYXVzZV9iZWZvcmVfZmluYWxpemUgKVxuXHRcdFx0fSxcblx0XHRcdGVycm9yOiBmdW5jdGlvbigganFYSFIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duICkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyggJ0NvdWxkIG5vdCBzYXZlIHBhdXNlIGJlZm9yZSBmaW5hbGl6ZSBzZXR0aW5nJywgZXJyb3JUaHJvd24gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtdXRpbHMuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */,
/* 55 */,
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _wpmdbCommon = __webpack_require__(72);\n\nvar _wpmdbCommon2 = _interopRequireDefault(_wpmdbCommon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nwindow.wpmdb = {\n\tfunctions: {},\n\tcommon: {\n\t\thooks: [],\n\t\tcall_stack: [],\n\t\tnon_fatal_errors: '',\n\t\tmigration_error: false\n\t}\n};\n\nwpmdb.functions = new _wpmdbCommon2.default();\n\nfunction importAll(require) {\n\trequire.keys().forEach(function (file) {\n\t\tif (!file.includes('wpmdbCommon.js')) {\n\t\t\trequire(file);\n\t\t}\n\t});\n}\n\nimportAll(__webpack_require__(73));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvd2VicGFjay5pbmRleC5qcz9iZDI1Il0sIm5hbWVzIjpbIndpbmRvdyIsIndwbWRiIiwiZnVuY3Rpb25zIiwiY29tbW9uIiwiaG9va3MiLCJjYWxsX3N0YWNrIiwibm9uX2ZhdGFsX2Vycm9ycyIsIm1pZ3JhdGlvbl9lcnJvciIsImltcG9ydEFsbCIsInJlcXVpcmUiLCJrZXlzIiwiZm9yRWFjaCIsImZpbGUiLCJpbmNsdWRlcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7O0FBRUFBLE9BQU9DLEtBQVAsR0FBZTtBQUNkQyxZQUFZLEVBREU7QUFFZEMsU0FBUztBQUNSQyxTQUFPLEVBREM7QUFFUkMsY0FBWSxFQUZKO0FBR1JDLG9CQUFrQixFQUhWO0FBSVJDLG1CQUFpQjtBQUpUO0FBRkssQ0FBZjs7QUFVQU4sTUFBTUMsU0FBTixHQUFrQiwyQkFBbEI7O0FBRUEsU0FBU00sU0FBVCxDQUFvQkMsT0FBcEIsRUFBOEI7QUFDN0JBLFNBQVFDLElBQVIsR0FBZUMsT0FBZixDQUF3QixVQUFVQyxJQUFWLEVBQWlCO0FBQ3hDLE1BQUssQ0FBQ0EsS0FBS0MsUUFBTCxDQUFlLGdCQUFmLENBQU4sRUFBMEM7QUFDekNKLFdBQVNHLElBQVQ7QUFDQTtBQUNELEVBSkQ7QUFLQTs7QUFFREosVUFDQyx1QkFERCIsImZpbGUiOiI3MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBXUE1EQkNvbW1vbiBmcm9tICcuL3NyYy9qcy9oZWxwZXJzL3dwbWRiQ29tbW9uJztcblxud2luZG93LndwbWRiID0ge1xuXHRmdW5jdGlvbnMgOiB7fSxcblx0Y29tbW9uIDoge1xuXHRcdGhvb2tzOiBbXSxcblx0XHRjYWxsX3N0YWNrOiBbXSxcblx0XHRub25fZmF0YWxfZXJyb3JzOiAnJyxcblx0XHRtaWdyYXRpb25fZXJyb3I6IGZhbHNlXG5cdH1cbn07XG5cbndwbWRiLmZ1bmN0aW9ucyA9IG5ldyBXUE1EQkNvbW1vbigpO1xuXG5mdW5jdGlvbiBpbXBvcnRBbGwoIHJlcXVpcmUgKSB7XG5cdHJlcXVpcmUua2V5cygpLmZvckVhY2goIGZ1bmN0aW9uKCBmaWxlICkge1xuXHRcdGlmICggIWZpbGUuaW5jbHVkZXMoICd3cG1kYkNvbW1vbi5qcycgKSApIHtcblx0XHRcdHJlcXVpcmUoIGZpbGUgKTtcblx0XHR9XG5cdH0gKTtcbn1cblxuaW1wb3J0QWxsKCBcblx0cmVxdWlyZS5jb250ZXh0KCBcblx0XHQnaW1wb3J0cy1sb2FkZXI/JD0+d2luZG93LmpRdWVyeSEuL3NyYycsIHRydWUsIC9eKC4qXFwuKGpzfHNhc3N8c2NzcyQpKS9pbVxuXHQpXG4gKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy93cC1taWdyYXRlLWRiLXByby9hc3NldC93ZWJwYWNrLmluZGV4LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///71\n");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Wrapper for wpmdb.functions, assigned in Webpack entry file\n */\nvar WPMDBCommon = function () {\n\tfunction WPMDBCommon() {\n\t\t_classCallCheck(this, WPMDBCommon);\n\t}\n\t/**\n  * Toggle proper translated strings based on migration type selected.\n  *\n  * To show the properly translated strings for the selected push or pull\n  * migration type, we need to hide all strings then show the right\n  * translated strings based on the migration type selected.\n  *\n  * @see https://github.com/deliciousbrains/wp-migrate-db-pro/issues/764\n  *\n  * @return void\n  */\n\n\n\t_createClass(WPMDBCommon, [{\n\t\tkey: 'wpmdb_toggle_migration_action_text',\n\t\tvalue: function wpmdb_toggle_migration_action_text() {\n\t\t\tjQuery('.action-text').hide();\n\t\t\tjQuery('.action-text.' + jQuery('input[name=action]:checked').val()).show();\n\t\t}\n\n\t\t/**\n   * Return the currently selected migration type selected.\n   *\n   * @return string Will return `push`, `pull`, `savefile`, or `` for exporting as a file.\n   */\n\n\t}, {\n\t\tkey: 'wpmdb_migration_type',\n\t\tvalue: function wpmdb_migration_type() {\n\t\t\tvar action = jQuery('input[name=action]:checked');\n\t\t\tif (0 === action.length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn action.val();\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_call_next_hook',\n\t\tvalue: function wpmdb_call_next_hook() {\n\t\t\tvar wpmdb = window.wpmdb;\n\t\t\tif (!wpmdb.common.call_stack.length) {\n\t\t\t\twpmdb.common.call_stack = wpmdb.common.hooks;\n\t\t\t}\n\n\t\t\tvar func = wpmdb.common.call_stack[0];\n\t\t\twpmdb.common.call_stack.shift();\n\t\t\tfunc.call(this);\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_add_commas',\n\t\tvalue: function wpmdb_add_commas(number_string) {\n\t\t\tnumber_string += '';\n\t\t\tvar number_parts = number_string.split('.');\n\t\t\tvar integer = number_parts[0];\n\t\t\tvar decimal = 1 < number_parts.length ? '.' + number_parts[1] : '';\n\t\t\tvar rgx = /(\\d+)(\\d{3})/;\n\t\t\twhile (rgx.test(integer)) {\n\t\t\t\tinteger = integer.replace(rgx, '$1' + ',' + '$2');\n\t\t\t}\n\t\t\treturn integer + decimal;\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_parse_json',\n\t\tvalue: function wpmdb_parse_json(maybe_json) {\n\t\t\tvar json_object = {};\n\t\t\ttry {\n\t\t\t\tjson_object = jQuery.parseJSON(maybe_json);\n\t\t\t} catch (e) {\n\n\t\t\t\t// We simply return false here because the json data itself will never just contain a value of \"false\"\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn json_object;\n\t\t}\n\n\t\t/**\n   * Global error method for detecting PHP or other errors in AJAX response\n   *\n   * @param title - the error title if not a PHP error\n   * @param code - the error code if not a PHP error\n   * @param text - the AJAX response text to sniff for errors\n   * @param jqXHR - optional AJAX object used to enrich the error message\n   *\n   * @returns {string} - html error string with view error toggle element\n   */\n\n\t}, {\n\t\tkey: 'wpmdbGetAjaxErrors',\n\t\tvalue: function wpmdbGetAjaxErrors(title, code, text, jqXHR) {\n\t\t\tvar jsonErrors = false;\n\t\t\tvar html = '';\n\n\t\t\tvar validJson = this.wpmdb_parse_json(text);\n\t\t\tif (false === validJson) {\n\t\t\t\tjsonErrors = true;\n\t\t\t\ttitle = wpmdb_strings.ajax_json_message;\n\t\t\t\tcode = '(#144)';\n\t\t\t\tvar originalText = text;\n\t\t\t\ttext = wpmdb_strings.ajax_json_errors + ' ' + code;\n\t\t\t\ttext += '<br><a class=\"show-errors-toggle\" href=\"#\">' + wpmdb_strings.view_error_messages + '</a> ';\n\t\t\t\ttext += '<div class=\"migration-php-errors\">' + originalText + '</div>';\n\t\t\t}\n\n\t\t\t// Only add local connection issue if php errors (#144) or jqXHR has been provided\n\t\t\tif (jsonErrors || 'undefined' !== jqXHR) {\n\t\t\t\thtml += '<strong>' + title + '</strong>' + ' &mdash; ';\n\t\t\t}\n\n\t\t\t// Only add extra error details if not php errors (#144) and jqXHR has been provided\n\t\t\tif (!jsonErrors && 'undefined' !== jqXHR) {\n\t\t\t\thtml += wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText;\n\t\t\t\thtml += '<br /><br />' + wpmdb_strings.response + ':<br />';\n\t\t\t}\n\n\t\t\t// Add code to the end of the error text if not json errors\n\t\t\tif (!jsonErrors) {\n\t\t\t\ttext += ' ' + code;\n\t\t\t}\n\n\t\t\t// Finally add the error message to the output\n\t\t\thtml += text;\n\n\t\t\treturn html;\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param str\n   * @param delimiter\n   * @returns {string}\n   */\n\n\t}, {\n\t\tkey: 'preg_quote',\n\t\tvalue: function preg_quote(str, delimiter) {\n\n\t\t\t//  discuss at: http://phpjs.org/functions/preg_quote/\n\t\t\t// original by: booeyOH\n\t\t\t// improved by: Ates Goral (http://magnetiq.com)\n\t\t\t// improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t\t// improved by: Brett Zamir (http://brett-zamir.me)\n\t\t\t// bugfixed by: Onno Marsman\n\t\t\t//   example 1: preg_quote(\"$40\");\n\t\t\t//   returns 1: '\\\\$40'\n\t\t\t//   example 2: preg_quote(\"*RRRING* Hello?\");\n\t\t\t//   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n\t\t\t//   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\");\n\t\t\t//   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n\t\t\treturn String(str).replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&');\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param table_prefix\n   * @param desired_table\n   * @param given_table\n   * @returns {boolean}\n   */\n\n\t}, {\n\t\tkey: 'table_is',\n\t\tvalue: function table_is(table_prefix, desired_table, given_table) {\n\t\t\tif ((table_prefix + desired_table).toLowerCase() === given_table.toLowerCase()) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar escaped_given_table = this.preg_quote(given_table);\n\t\t\tvar regex = new RegExp(table_prefix + '([0-9]+)_' + desired_table, 'i');\n\t\t\tvar results = regex.exec(escaped_given_table);\n\t\t\treturn null !== results;\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param table_prefix\n   * @param table_name\n   * @returns {*}\n   */\n\n\t}, {\n\t\tkey: 'subsite_for_table',\n\t\tvalue: function subsite_for_table(table_prefix, table_name) {\n\t\t\tvar escaped_table_name = this.preg_quote(table_name);\n\t\t\tvar regex = new RegExp(table_prefix + '([0-9]+)_', 'i');\n\t\t\tvar results = regex.exec(escaped_table_name);\n\n\t\t\tif (null === results) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn results[1];\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'convertKBSizeToHR',\n\t\tvalue: function convertKBSizeToHR(size, dec, kbSize, retArray) {\n\t\t\tvar retVal, units;\n\t\t\tkbSize = kbSize || 1000;\n\t\t\tdec = dec || 2;\n\n\t\t\tsize = parseFloat(size);\n\n\t\t\tif (kbSize > Math.abs(size)) {\n\t\t\t\tretVal = [size.toFixed(0), 'KB'];\n\t\t\t} else {\n\t\t\t\tunits = ['MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\t\t\t\tvar u = -1;\n\t\t\t\tdo {\n\t\t\t\t\tsize /= kbSize;\n\t\t\t\t\t++u;\n\t\t\t\t} while (Math.abs(size) >= kbSize && u < units.length - 1);\n\t\t\t\tretVal = [Math.round(size * Math.pow(10, dec)) / Math.pow(10, dec), units[u]];\n\t\t\t}\n\n\t\t\tif (!retArray) {\n\t\t\t\tretVal = retVal[0] + ' ' + retVal[1];\n\t\t\t}\n\t\t\treturn retVal;\n\t\t}\n\t}, {\n\t\tkey: 'convertKBSizeToHRFixed',\n\t\tvalue: function convertKBSizeToHRFixed(size, dec, kbSize) {\n\t\t\tdec = dec || 2;\n\t\t\tvar hrSizeArray = this.convertKBSizeToHR(size, dec, kbSize, true);\n\t\t\tif ('KB' !== hrSizeArray[1]) {\n\t\t\t\treturn hrSizeArray[0].toFixed(2) + ' ' + hrSizeArray[1];\n\t\t\t}\n\t\t\treturn hrSizeArray[0] + ' ' + hrSizeArray[1];\n\t\t}\n\t}, {\n\t\tkey: 'ajax_handle_dismissible_notice',\n\t\tvalue: function ajax_handle_dismissible_notice(nonce, callback, ele) {\n\t\t\tjQuery.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_process_notice_link',\n\t\t\t\t\tnonce: nonce,\n\t\t\t\t\tnotice: jQuery(ele).data('notice'),\n\t\t\t\t\ttype: jQuery(ele).data('type'),\n\t\t\t\t\treminder: jQuery(ele).data('reminder')\n\t\t\t\t},\n\t\t\t\tbeforeSend: callback(ele)\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'get_spinner_url',\n\t\tvalue: function get_spinner_url() {\n\t\t\tvar admin_url = ajaxurl.replace('/admin-ajax.php', ''),\n\t\t\t    spinner_url = admin_url + '/images/spinner';\n\n\t\t\tif (2 < window.devicePixelRatio) {\n\t\t\t\tspinner_url += '-2x';\n\t\t\t}\n\t\t\tspinner_url += '.gif';\n\n\t\t\treturn spinner_url;\n\t\t}\n\t}, {\n\t\tkey: 'exclude_post_types_warning',\n\t\tvalue: function exclude_post_types_warning() {\n\t\t\tvar excluded_post_types = $('#select-post-types').val();\n\t\t\tvar excluded_post_types_text = '';\n\t\t\tvar $exclude_post_types_warning = $('.exclude-post-types-warning');\n\n\t\t\tif (excluded_post_types) {\n\t\t\t\texcluded_post_types_text = '<code>' + excluded_post_types.join('</code>, <code>') + '</code>';\n\t\t\t\t$('.excluded-post-types').html(excluded_post_types_text);\n\n\t\t\t\tif ('0' === $exclude_post_types_warning.css('opacity')) {\n\t\t\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideDown(200).animate({ opacity: 1 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideUp(200).animate({ opacity: 0 });\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn WPMDBCommon;\n}();\n\nexports.default = WPMDBCommon;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///72\n");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

eval("var map = {\n\t\"./js/dismissable-notices.js\": 74,\n\t\"./js/helpers/events.js\": 75,\n\t\"./js/helpers/utils.js\": 76,\n\t\"./js/helpers/wpmdbCommon.js\": 77,\n\t\"./js/helpers/wpmdbGlobals.js\": 78,\n\t\"./js/hook.js\": 79,\n\t\"./js/import.js\": 80,\n\t\"./js/localStorage.js\": 81,\n\t\"./js/modules/MigrationProgress-controller.js\": 82,\n\t\"./js/modules/MigrationProgress-model.js\": 83,\n\t\"./js/modules/MigrationProgress-utils.js\": 84,\n\t\"./js/modules/MigrationProgress-view.js\": 85,\n\t\"./js/modules/MigrationProgressStage-model.js\": 86,\n\t\"./js/modules/MigrationProgressStage-view.js\": 87,\n\t\"./js/multisite.js\": 88,\n\t\"./js/plugin-update.js\": 89,\n\t\"./js/script.js\": 90,\n\t\"./sass/_migration-progress.scss\": 92,\n\t\"./sass/_progress-upgrade.scss\": 93,\n\t\"./sass/plugin-update-styles.scss\": 94,\n\t\"./sass/styles.scss\": 95\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 73;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjIC4vbm9kZV9tb2R1bGVzL2ltcG9ydHMtbG9hZGVyPzdkMzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI3My5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtYXAgPSB7XG5cdFwiLi9qcy9kaXNtaXNzYWJsZS1ub3RpY2VzLmpzXCI6IDc0LFxuXHRcIi4vanMvaGVscGVycy9ldmVudHMuanNcIjogNzUsXG5cdFwiLi9qcy9oZWxwZXJzL3V0aWxzLmpzXCI6IDc2LFxuXHRcIi4vanMvaGVscGVycy93cG1kYkNvbW1vbi5qc1wiOiA3Nyxcblx0XCIuL2pzL2hlbHBlcnMvd3BtZGJHbG9iYWxzLmpzXCI6IDc4LFxuXHRcIi4vanMvaG9vay5qc1wiOiA3OSxcblx0XCIuL2pzL2ltcG9ydC5qc1wiOiA4MCxcblx0XCIuL2pzL2xvY2FsU3RvcmFnZS5qc1wiOiA4MSxcblx0XCIuL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtY29udHJvbGxlci5qc1wiOiA4Mixcblx0XCIuL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtbW9kZWwuanNcIjogODMsXG5cdFwiLi9qcy9tb2R1bGVzL01pZ3JhdGlvblByb2dyZXNzLXV0aWxzLmpzXCI6IDg0LFxuXHRcIi4vanMvbW9kdWxlcy9NaWdyYXRpb25Qcm9ncmVzcy12aWV3LmpzXCI6IDg1LFxuXHRcIi4vanMvbW9kdWxlcy9NaWdyYXRpb25Qcm9ncmVzc1N0YWdlLW1vZGVsLmpzXCI6IDg2LFxuXHRcIi4vanMvbW9kdWxlcy9NaWdyYXRpb25Qcm9ncmVzc1N0YWdlLXZpZXcuanNcIjogODcsXG5cdFwiLi9qcy9tdWx0aXNpdGUuanNcIjogODgsXG5cdFwiLi9qcy9wbHVnaW4tdXBkYXRlLmpzXCI6IDg5LFxuXHRcIi4vanMvc2NyaXB0LmpzXCI6IDkwLFxuXHRcIi4vc2Fzcy9fbWlncmF0aW9uLXByb2dyZXNzLnNjc3NcIjogOTIsXG5cdFwiLi9zYXNzL19wcm9ncmVzcy11cGdyYWRlLnNjc3NcIjogOTMsXG5cdFwiLi9zYXNzL3BsdWdpbi11cGRhdGUtc3R5bGVzLnNjc3NcIjogOTQsXG5cdFwiLi9zYXNzL3N0eWxlcy5zY3NzXCI6IDk1XG59O1xuZnVuY3Rpb24gd2VicGFja0NvbnRleHQocmVxKSB7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpKTtcbn07XG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKSB7XG5cdHZhciBpZCA9IG1hcFtyZXFdO1xuXHRpZighKGlkICsgMSkpIC8vIGNoZWNrIGZvciBudW1iZXIgb3Igc3RyaW5nXG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJy5cIik7XG5cdHJldHVybiBpZDtcbn07XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gNzM7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjIC4vbm9kZV9tb2R1bGVzL2ltcG9ydHMtbG9hZGVyPyQ9PndpbmRvdy5qUXVlcnkgXiguKlxcLihqc3xzYXNzfHNjc3MkKSkvaVxuLy8gbW9kdWxlIGlkID0gNzNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73\n");

/***/ }),
/* 74 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($) {\n\n\t//If there's an error message visible about the mu-plugins folder not being writable\n\tif (0 < $('.wpmdb-compat-plugin-row-error').length) {\n\t\t$('[data-slug=\"wp-migrate-db-pro\"]').addClass('wpmdbpro-has-message');\n\t}\n\n\t//For the free plugin the update class needs to be present\n\t$('.wpmdbpro-custom').prev().addClass('update');\n\n\t$('.notice-link-plugins-page').click(function (e) {\n\t\te.preventDefault();\n\t\tvar self = jQuery(this);\n\n\t\twpmdb.functions.ajax_handle_dismissible_notice(wpmdb_nonces.process_notice_link, function (ele) {\n\t\t\t$(ele).closest('.wpmdbpro-custom').hide();\n\n\t\t\t// remove .wpmdb-has-message class from parent TR to add the bottom border back in\n\t\t\t$(ele).closest('tr').siblings('tr.wpmdbpro-has-message').removeClass('wpmdbpro-has-message');\n\t\t}, self);\n\n\t\t$('.wpmdbpro-custom').prev().removeClass('update');\n\t});\n})(jQuery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2Rpc21pc3NhYmxlLW5vdGljZXMuanM/NjE0OSJdLCJuYW1lcyI6WyIkIiwibGVuZ3RoIiwiYWRkQ2xhc3MiLCJwcmV2IiwiY2xpY2siLCJlIiwicHJldmVudERlZmF1bHQiLCJzZWxmIiwialF1ZXJ5Iiwid3BtZGIiLCJmdW5jdGlvbnMiLCJhamF4X2hhbmRsZV9kaXNtaXNzaWJsZV9ub3RpY2UiLCJ3cG1kYl9ub25jZXMiLCJwcm9jZXNzX25vdGljZV9saW5rIiwiZWxlIiwiY2xvc2VzdCIsImhpZGUiLCJzaWJsaW5ncyIsInJlbW92ZUNsYXNzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLENBQUMsVUFBVUEsQ0FBVixFQUFjOztBQUVkO0FBQ0EsS0FBSyxJQUFLQSxFQUFHLGdDQUFILEVBQXNDQyxNQUFoRCxFQUF5RDtBQUN4REQsSUFBRyxpQ0FBSCxFQUF1Q0UsUUFBdkMsQ0FBaUQsc0JBQWpEO0FBQ0E7O0FBRUQ7QUFDQUYsR0FBRyxrQkFBSCxFQUF3QkcsSUFBeEIsR0FBK0JELFFBQS9CLENBQXlDLFFBQXpDOztBQUVBRixHQUFHLDJCQUFILEVBQWlDSSxLQUFqQyxDQUF3QyxVQUFVQyxDQUFWLEVBQWM7QUFDckRBLElBQUVDLGNBQUY7QUFDQSxNQUFJQyxPQUFPQyxPQUFRLElBQVIsQ0FBWDs7QUFFQUMsUUFBTUMsU0FBTixDQUFnQkMsOEJBQWhCLENBQWdEQyxhQUFhQyxtQkFBN0QsRUFBa0YsVUFBVUMsR0FBVixFQUFnQjtBQUNqR2QsS0FBR2MsR0FBSCxFQUFTQyxPQUFULENBQWtCLGtCQUFsQixFQUF1Q0MsSUFBdkM7O0FBRUE7QUFDQWhCLEtBQUdjLEdBQUgsRUFBU0MsT0FBVCxDQUFrQixJQUFsQixFQUF5QkUsUUFBekIsQ0FBbUMseUJBQW5DLEVBQStEQyxXQUEvRCxDQUE0RSxzQkFBNUU7QUFDQSxHQUxELEVBS0dYLElBTEg7O0FBT0FQLElBQUcsa0JBQUgsRUFBd0JHLElBQXhCLEdBQStCZSxXQUEvQixDQUE0QyxRQUE1QztBQUNBLEVBWkQ7QUFhQSxDQXZCRCxFQXVCSVYsTUF2QkosRSIsImZpbGUiOiI3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiggJCApIHtcblxuXHQvL0lmIHRoZXJlJ3MgYW4gZXJyb3IgbWVzc2FnZSB2aXNpYmxlIGFib3V0IHRoZSBtdS1wbHVnaW5zIGZvbGRlciBub3QgYmVpbmcgd3JpdGFibGVcblx0aWYgKCAwIDwgICQoICcud3BtZGItY29tcGF0LXBsdWdpbi1yb3ctZXJyb3InICkubGVuZ3RoICkge1xuXHRcdCQoICdbZGF0YS1zbHVnPVwid3AtbWlncmF0ZS1kYi1wcm9cIl0nICkuYWRkQ2xhc3MoICd3cG1kYnByby1oYXMtbWVzc2FnZScgKTtcblx0fVxuXG5cdC8vRm9yIHRoZSBmcmVlIHBsdWdpbiB0aGUgdXBkYXRlIGNsYXNzIG5lZWRzIHRvIGJlIHByZXNlbnRcblx0JCggJy53cG1kYnByby1jdXN0b20nICkucHJldigpLmFkZENsYXNzKCAndXBkYXRlJyApO1xuXG5cdCQoICcubm90aWNlLWxpbmstcGx1Z2lucy1wYWdlJyApLmNsaWNrKCBmdW5jdGlvbiggZSApIHtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcblxuXHRcdHdwbWRiLmZ1bmN0aW9ucy5hamF4X2hhbmRsZV9kaXNtaXNzaWJsZV9ub3RpY2UoIHdwbWRiX25vbmNlcy5wcm9jZXNzX25vdGljZV9saW5rLCBmdW5jdGlvbiggZWxlICkge1xuXHRcdFx0JCggZWxlICkuY2xvc2VzdCggJy53cG1kYnByby1jdXN0b20nICkuaGlkZSgpO1xuXG5cdFx0XHQvLyByZW1vdmUgLndwbWRiLWhhcy1tZXNzYWdlIGNsYXNzIGZyb20gcGFyZW50IFRSIHRvIGFkZCB0aGUgYm90dG9tIGJvcmRlciBiYWNrIGluXG5cdFx0XHQkKCBlbGUgKS5jbG9zZXN0KCAndHInICkuc2libGluZ3MoICd0ci53cG1kYnByby1oYXMtbWVzc2FnZScgKS5yZW1vdmVDbGFzcyggJ3dwbWRicHJvLWhhcy1tZXNzYWdlJyApO1xuXHRcdH0sIHNlbGYgKTtcblxuXHRcdCQoICcud3BtZGJwcm8tY3VzdG9tJyApLnByZXYoKS5yZW1vdmVDbGFzcyggJ3VwZGF0ZScgKTtcblx0fSApO1xufSkoIGpRdWVyeSApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9qcy9kaXNtaXNzYWJsZS1ub3RpY2VzLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n");

/***/ }),
/* 75 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n$.fn.bindFirst = function (name, fn) {\n\tthis.bindNth(name, fn, 0);\n};\n\n$.fn.bindNth = function (name, fn, index) {\n\t// Bind event normally.\n\tthis.bind(name, fn);\n\t// Move to nth position.\n\tthis.changeEventOrder(name, index);\n};\n\n$.fn.changeEventOrder = function (names, newIndex) {\n\tvar that = this;\n\t// Allow for multiple events.\n\t$.each(names.split(' '), function (idx, name) {\n\t\tthat.each(function () {\n\t\t\tvar handlers = $._data(this, 'events')[name.split('.')[0]];\n\t\t\t// Validate requested position.\n\t\t\tnewIndex = Math.min(newIndex, handlers.length - 1);\n\t\t\thandlers.splice(newIndex, 0, handlers.pop());\n\t\t});\n\t});\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2hlbHBlcnMvZXZlbnRzLmpzP2QxNDMiXSwibmFtZXMiOlsiJCIsImZuIiwiYmluZEZpcnN0IiwibmFtZSIsImJpbmROdGgiLCJpbmRleCIsImJpbmQiLCJjaGFuZ2VFdmVudE9yZGVyIiwibmFtZXMiLCJuZXdJbmRleCIsInRoYXQiLCJlYWNoIiwic3BsaXQiLCJpZHgiLCJoYW5kbGVycyIsIl9kYXRhIiwiTWF0aCIsIm1pbiIsImxlbmd0aCIsInNwbGljZSIsInBvcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQUEsRUFBRUMsRUFBRixDQUFLQyxTQUFMLEdBQWlCLFVBQVVDLElBQVYsRUFBZ0JGLEVBQWhCLEVBQW9CO0FBQ3BDLE1BQUtHLE9BQUwsQ0FBYUQsSUFBYixFQUFtQkYsRUFBbkIsRUFBdUIsQ0FBdkI7QUFDQSxDQUZEOztBQUlBRCxFQUFFQyxFQUFGLENBQUtHLE9BQUwsR0FBZSxVQUFTRCxJQUFULEVBQWVGLEVBQWYsRUFBbUJJLEtBQW5CLEVBQTBCO0FBQ3hDO0FBQ0EsTUFBS0MsSUFBTCxDQUFVSCxJQUFWLEVBQWdCRixFQUFoQjtBQUNBO0FBQ0EsTUFBS00sZ0JBQUwsQ0FBc0JKLElBQXRCLEVBQTRCRSxLQUE1QjtBQUNBLENBTEQ7O0FBT0FMLEVBQUVDLEVBQUYsQ0FBS00sZ0JBQUwsR0FBd0IsVUFBVUMsS0FBVixFQUFpQkMsUUFBakIsRUFBMkI7QUFDbEQsS0FBSUMsT0FBTyxJQUFYO0FBQ0E7QUFDQVYsR0FBRVcsSUFBRixDQUFPSCxNQUFNSSxLQUFOLENBQVksR0FBWixDQUFQLEVBQXlCLFVBQVVDLEdBQVYsRUFBZVYsSUFBZixFQUFxQjtBQUM3Q08sT0FBS0MsSUFBTCxDQUFVLFlBQVk7QUFDckIsT0FBSUcsV0FBV2QsRUFBRWUsS0FBRixDQUFRLElBQVIsRUFBYyxRQUFkLEVBQXdCWixLQUFLUyxLQUFMLENBQVcsR0FBWCxFQUFnQixDQUFoQixDQUF4QixDQUFmO0FBQ0E7QUFDQUgsY0FBV08sS0FBS0MsR0FBTCxDQUFTUixRQUFULEVBQW1CSyxTQUFTSSxNQUFULEdBQWtCLENBQXJDLENBQVg7QUFDQUosWUFBU0ssTUFBVCxDQUFnQlYsUUFBaEIsRUFBMEIsQ0FBMUIsRUFBNkJLLFNBQVNNLEdBQVQsRUFBN0I7QUFDQSxHQUxEO0FBTUEsRUFQRDtBQVFBLENBWEQsQyIsImZpbGUiOiI3NS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiQuZm4uYmluZEZpcnN0ID0gZnVuY3Rpb24gKG5hbWUsIGZuKSB7XG5cdHRoaXMuYmluZE50aChuYW1lLCBmbiwgMCk7XG59O1xuXG4kLmZuLmJpbmROdGggPSBmdW5jdGlvbihuYW1lLCBmbiwgaW5kZXgpIHtcblx0Ly8gQmluZCBldmVudCBub3JtYWxseS5cblx0dGhpcy5iaW5kKG5hbWUsIGZuKTtcblx0Ly8gTW92ZSB0byBudGggcG9zaXRpb24uXG5cdHRoaXMuY2hhbmdlRXZlbnRPcmRlcihuYW1lLCBpbmRleCk7XG59O1xuXG4kLmZuLmNoYW5nZUV2ZW50T3JkZXIgPSBmdW5jdGlvbiAobmFtZXMsIG5ld0luZGV4KSB7XG5cdHZhciB0aGF0ID0gdGhpcztcblx0Ly8gQWxsb3cgZm9yIG11bHRpcGxlIGV2ZW50cy5cblx0JC5lYWNoKG5hbWVzLnNwbGl0KCcgJyksIGZ1bmN0aW9uIChpZHgsIG5hbWUpIHtcblx0XHR0aGF0LmVhY2goZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGhhbmRsZXJzID0gJC5fZGF0YSh0aGlzLCAnZXZlbnRzJylbbmFtZS5zcGxpdCgnLicpWzBdXTtcblx0XHRcdC8vIFZhbGlkYXRlIHJlcXVlc3RlZCBwb3NpdGlvbi5cblx0XHRcdG5ld0luZGV4ID0gTWF0aC5taW4obmV3SW5kZXgsIGhhbmRsZXJzLmxlbmd0aCAtIDEpO1xuXHRcdFx0aGFuZGxlcnMuc3BsaWNlKG5ld0luZGV4LCAwLCBoYW5kbGVycy5wb3AoKSk7XG5cdFx0fSk7XG5cdH0pO1xufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy93cC1taWdyYXRlLWRiLXByby9hc3NldC9zcmMvanMvaGVscGVycy9ldmVudHMuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n");

/***/ }),
/* 76 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nvar handleAjaxError = exports.handleAjaxError = function handleAjaxError(header_text, error) {\n\twpmdb.current_migration.setState(header_text, error.message, 'error');\n\twpmdb.common.migration_error = true;\n\twpmdb.functions.migration_complete_events();\n\tconsole.error('🚨 🚒', error);\n\treturn;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2hlbHBlcnMvdXRpbHMuanM/OWY0YyJdLCJuYW1lcyI6WyJoYW5kbGVBamF4RXJyb3IiLCJoZWFkZXJfdGV4dCIsImVycm9yIiwid3BtZGIiLCJjdXJyZW50X21pZ3JhdGlvbiIsInNldFN0YXRlIiwibWVzc2FnZSIsImNvbW1vbiIsIm1pZ3JhdGlvbl9lcnJvciIsImZ1bmN0aW9ucyIsIm1pZ3JhdGlvbl9jb21wbGV0ZV9ldmVudHMiLCJjb25zb2xlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLElBQU1BLDRDQUFrQixTQUFsQkEsZUFBa0IsQ0FBRUMsV0FBRixFQUFlQyxLQUFmLEVBQTBCO0FBQ3hEQyxPQUFNQyxpQkFBTixDQUF3QkMsUUFBeEIsQ0FBa0NKLFdBQWxDLEVBQStDQyxNQUFNSSxPQUFyRCxFQUE4RCxPQUE5RDtBQUNBSCxPQUFNSSxNQUFOLENBQWFDLGVBQWIsR0FBK0IsSUFBL0I7QUFDQUwsT0FBTU0sU0FBTixDQUFnQkMseUJBQWhCO0FBQ0FDLFNBQVFULEtBQVIsQ0FBZSxPQUFmLEVBQXdCQSxLQUF4QjtBQUNBO0FBQ0EsQ0FOTSxDIiwiZmlsZSI6Ijc2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGhhbmRsZUFqYXhFcnJvciA9ICggaGVhZGVyX3RleHQsIGVycm9yICkgPT4ge1xuXHR3cG1kYi5jdXJyZW50X21pZ3JhdGlvbi5zZXRTdGF0ZSggaGVhZGVyX3RleHQsIGVycm9yLm1lc3NhZ2UsICdlcnJvcicgKTtcblx0d3BtZGIuY29tbW9uLm1pZ3JhdGlvbl9lcnJvciA9IHRydWU7XG5cdHdwbWRiLmZ1bmN0aW9ucy5taWdyYXRpb25fY29tcGxldGVfZXZlbnRzKCk7XG5cdGNvbnNvbGUuZXJyb3IoICfwn5qoIPCfmpInLCBlcnJvciApO1xuXHRyZXR1cm47XG59O1xuXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2hlbHBlcnMvdXRpbHMuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///76\n");

/***/ }),
/* 77 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Wrapper for wpmdb.functions, assigned in Webpack entry file\n */\nvar WPMDBCommon = function () {\n\tfunction WPMDBCommon() {\n\t\t_classCallCheck(this, WPMDBCommon);\n\t}\n\t/**\n  * Toggle proper translated strings based on migration type selected.\n  *\n  * To show the properly translated strings for the selected push or pull\n  * migration type, we need to hide all strings then show the right\n  * translated strings based on the migration type selected.\n  *\n  * @see https://github.com/deliciousbrains/wp-migrate-db-pro/issues/764\n  *\n  * @return void\n  */\n\n\n\t_createClass(WPMDBCommon, [{\n\t\tkey: 'wpmdb_toggle_migration_action_text',\n\t\tvalue: function wpmdb_toggle_migration_action_text() {\n\t\t\tjQuery('.action-text').hide();\n\t\t\tjQuery('.action-text.' + jQuery('input[name=action]:checked').val()).show();\n\t\t}\n\n\t\t/**\n   * Return the currently selected migration type selected.\n   *\n   * @return string Will return `push`, `pull`, `savefile`, or `` for exporting as a file.\n   */\n\n\t}, {\n\t\tkey: 'wpmdb_migration_type',\n\t\tvalue: function wpmdb_migration_type() {\n\t\t\tvar action = jQuery('input[name=action]:checked');\n\t\t\tif (0 === action.length) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn action.val();\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_call_next_hook',\n\t\tvalue: function wpmdb_call_next_hook() {\n\t\t\tvar wpmdb = window.wpmdb;\n\t\t\tif (!wpmdb.common.call_stack.length) {\n\t\t\t\twpmdb.common.call_stack = wpmdb.common.hooks;\n\t\t\t}\n\n\t\t\tvar func = wpmdb.common.call_stack[0];\n\t\t\twpmdb.common.call_stack.shift();\n\t\t\tfunc.call(this);\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_add_commas',\n\t\tvalue: function wpmdb_add_commas(number_string) {\n\t\t\tnumber_string += '';\n\t\t\tvar number_parts = number_string.split('.');\n\t\t\tvar integer = number_parts[0];\n\t\t\tvar decimal = 1 < number_parts.length ? '.' + number_parts[1] : '';\n\t\t\tvar rgx = /(\\d+)(\\d{3})/;\n\t\t\twhile (rgx.test(integer)) {\n\t\t\t\tinteger = integer.replace(rgx, '$1' + ',' + '$2');\n\t\t\t}\n\t\t\treturn integer + decimal;\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_parse_json',\n\t\tvalue: function wpmdb_parse_json(maybe_json) {\n\t\t\tvar json_object = {};\n\t\t\ttry {\n\t\t\t\tjson_object = jQuery.parseJSON(maybe_json);\n\t\t\t} catch (e) {\n\n\t\t\t\t// We simply return false here because the json data itself will never just contain a value of \"false\"\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn json_object;\n\t\t}\n\n\t\t/**\n   * Global error method for detecting PHP or other errors in AJAX response\n   *\n   * @param title - the error title if not a PHP error\n   * @param code - the error code if not a PHP error\n   * @param text - the AJAX response text to sniff for errors\n   * @param jqXHR - optional AJAX object used to enrich the error message\n   *\n   * @returns {string} - html error string with view error toggle element\n   */\n\n\t}, {\n\t\tkey: 'wpmdbGetAjaxErrors',\n\t\tvalue: function wpmdbGetAjaxErrors(title, code, text, jqXHR) {\n\t\t\tvar jsonErrors = false;\n\t\t\tvar html = '';\n\n\t\t\tvar validJson = this.wpmdb_parse_json(text);\n\t\t\tif (false === validJson) {\n\t\t\t\tjsonErrors = true;\n\t\t\t\ttitle = wpmdb_strings.ajax_json_message;\n\t\t\t\tcode = '(#144)';\n\t\t\t\tvar originalText = text;\n\t\t\t\ttext = wpmdb_strings.ajax_json_errors + ' ' + code;\n\t\t\t\ttext += '<br><a class=\"show-errors-toggle\" href=\"#\">' + wpmdb_strings.view_error_messages + '</a> ';\n\t\t\t\ttext += '<div class=\"migration-php-errors\">' + originalText + '</div>';\n\t\t\t}\n\n\t\t\t// Only add local connection issue if php errors (#144) or jqXHR has been provided\n\t\t\tif (jsonErrors || 'undefined' !== jqXHR) {\n\t\t\t\thtml += '<strong>' + title + '</strong>' + ' &mdash; ';\n\t\t\t}\n\n\t\t\t// Only add extra error details if not php errors (#144) and jqXHR has been provided\n\t\t\tif (!jsonErrors && 'undefined' !== jqXHR) {\n\t\t\t\thtml += wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText;\n\t\t\t\thtml += '<br /><br />' + wpmdb_strings.response + ':<br />';\n\t\t\t}\n\n\t\t\t// Add code to the end of the error text if not json errors\n\t\t\tif (!jsonErrors) {\n\t\t\t\ttext += ' ' + code;\n\t\t\t}\n\n\t\t\t// Finally add the error message to the output\n\t\t\thtml += text;\n\n\t\t\treturn html;\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param str\n   * @param delimiter\n   * @returns {string}\n   */\n\n\t}, {\n\t\tkey: 'preg_quote',\n\t\tvalue: function preg_quote(str, delimiter) {\n\n\t\t\t//  discuss at: http://phpjs.org/functions/preg_quote/\n\t\t\t// original by: booeyOH\n\t\t\t// improved by: Ates Goral (http://magnetiq.com)\n\t\t\t// improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n\t\t\t// improved by: Brett Zamir (http://brett-zamir.me)\n\t\t\t// bugfixed by: Onno Marsman\n\t\t\t//   example 1: preg_quote(\"$40\");\n\t\t\t//   returns 1: '\\\\$40'\n\t\t\t//   example 2: preg_quote(\"*RRRING* Hello?\");\n\t\t\t//   returns 2: '\\\\*RRRING\\\\* Hello\\\\?'\n\t\t\t//   example 3: preg_quote(\"\\\\.+*?[^]$(){}=!<>|:\");\n\t\t\t//   returns 3: '\\\\\\\\\\\\.\\\\+\\\\*\\\\?\\\\[\\\\^\\\\]\\\\$\\\\(\\\\)\\\\{\\\\}\\\\=\\\\!\\\\<\\\\>\\\\|\\\\:'\n\n\t\t\treturn String(str).replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&');\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param table_prefix\n   * @param desired_table\n   * @param given_table\n   * @returns {boolean}\n   */\n\n\t}, {\n\t\tkey: 'table_is',\n\t\tvalue: function table_is(table_prefix, desired_table, given_table) {\n\t\t\tif ((table_prefix + desired_table).toLowerCase() === given_table.toLowerCase()) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar escaped_given_table = this.preg_quote(given_table);\n\t\t\tvar regex = new RegExp(table_prefix + '([0-9]+)_' + desired_table, 'i');\n\t\t\tvar results = regex.exec(escaped_given_table);\n\t\t\treturn null !== results;\n\t\t}\n\n\t\t/**\n   * @TODO convert to functions object\n   * @param table_prefix\n   * @param table_name\n   * @returns {*}\n   */\n\n\t}, {\n\t\tkey: 'subsite_for_table',\n\t\tvalue: function subsite_for_table(table_prefix, table_name) {\n\t\t\tvar escaped_table_name = this.preg_quote(table_name);\n\t\t\tvar regex = new RegExp(table_prefix + '([0-9]+)_', 'i');\n\t\t\tvar results = regex.exec(escaped_table_name);\n\n\t\t\tif (null === results) {\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\treturn results[1];\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'convertKBSizeToHR',\n\t\tvalue: function convertKBSizeToHR(size, dec, kbSize, retArray) {\n\t\t\tvar retVal, units;\n\t\t\tkbSize = kbSize || 1000;\n\t\t\tdec = dec || 2;\n\n\t\t\tsize = parseFloat(size);\n\n\t\t\tif (kbSize > Math.abs(size)) {\n\t\t\t\tretVal = [size.toFixed(0), 'KB'];\n\t\t\t} else {\n\t\t\t\tunits = ['MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\t\t\t\tvar u = -1;\n\t\t\t\tdo {\n\t\t\t\t\tsize /= kbSize;\n\t\t\t\t\t++u;\n\t\t\t\t} while (Math.abs(size) >= kbSize && u < units.length - 1);\n\t\t\t\tretVal = [Math.round(size * Math.pow(10, dec)) / Math.pow(10, dec), units[u]];\n\t\t\t}\n\n\t\t\tif (!retArray) {\n\t\t\t\tretVal = retVal[0] + ' ' + retVal[1];\n\t\t\t}\n\t\t\treturn retVal;\n\t\t}\n\t}, {\n\t\tkey: 'convertKBSizeToHRFixed',\n\t\tvalue: function convertKBSizeToHRFixed(size, dec, kbSize) {\n\t\t\tdec = dec || 2;\n\t\t\tvar hrSizeArray = this.convertKBSizeToHR(size, dec, kbSize, true);\n\t\t\tif ('KB' !== hrSizeArray[1]) {\n\t\t\t\treturn hrSizeArray[0].toFixed(2) + ' ' + hrSizeArray[1];\n\t\t\t}\n\t\t\treturn hrSizeArray[0] + ' ' + hrSizeArray[1];\n\t\t}\n\t}, {\n\t\tkey: 'ajax_handle_dismissible_notice',\n\t\tvalue: function ajax_handle_dismissible_notice(nonce, callback, ele) {\n\t\t\tjQuery.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_process_notice_link',\n\t\t\t\t\tnonce: nonce,\n\t\t\t\t\tnotice: jQuery(ele).data('notice'),\n\t\t\t\t\ttype: jQuery(ele).data('type'),\n\t\t\t\t\treminder: jQuery(ele).data('reminder')\n\t\t\t\t},\n\t\t\t\tbeforeSend: callback(ele)\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'get_spinner_url',\n\t\tvalue: function get_spinner_url() {\n\t\t\tvar admin_url = ajaxurl.replace('/admin-ajax.php', ''),\n\t\t\t    spinner_url = admin_url + '/images/spinner';\n\n\t\t\tif (2 < window.devicePixelRatio) {\n\t\t\t\tspinner_url += '-2x';\n\t\t\t}\n\t\t\tspinner_url += '.gif';\n\n\t\t\treturn spinner_url;\n\t\t}\n\t}, {\n\t\tkey: 'exclude_post_types_warning',\n\t\tvalue: function exclude_post_types_warning() {\n\t\t\tvar excluded_post_types = $('#select-post-types').val();\n\t\t\tvar excluded_post_types_text = '';\n\t\t\tvar $exclude_post_types_warning = $('.exclude-post-types-warning');\n\n\t\t\tif (excluded_post_types) {\n\t\t\t\texcluded_post_types_text = '<code>' + excluded_post_types.join('</code>, <code>') + '</code>';\n\t\t\t\t$('.excluded-post-types').html(excluded_post_types_text);\n\n\t\t\t\tif ('0' === $exclude_post_types_warning.css('opacity')) {\n\t\t\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideDown(200).animate({ opacity: 1 });\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideUp(200).animate({ opacity: 0 });\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn WPMDBCommon;\n}();\n\nexports.default = WPMDBCommon;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///77\n");

/***/ }),
/* 78 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar $ = window.jQuery;\nvar ajaxurl = window.ajaxurl;\nvar wpmdb_strings = window.wpmdb_strings;\nvar wpmdb_data = window.wpmdb_data;\n\nvar WPMDBGlobals = function () {\n\tfunction WPMDBGlobals() {\n\t\t_classCallCheck(this, WPMDBGlobals);\n\n\t\tthis.show_ssl_notice = false;\n\t\tthis.doing_save_profile = false;\n\t\tthis.doing_ajax = false;\n\t\tthis.profile_name_edited = false;\n\t\tthis.migration_intent = null;\n\t\tthis.doing_licence_registration_ajax = false;\n\t\tthis.migration_paused = false;\n\t\tthis.last_replace_switch = wpmdb.functions.wpmdb_migration_type();\n\t\tthis.connection_established = false;\n\t\tthis.profile_name_edited = false;\n\t\tthis.checked_licence = false;\n\t\tthis.show_prefix_notice = false;\n\t\tthis.show_ssl_notice = false;\n\t\tthis.force_reconnect = false;\n\t\tthis.migration_selection = '';\n\t\tthis.show_version_notice = false;\n\t\tthis.migration_completed = false;\n\t\tthis.currently_migrating = false;\n\t\tthis.dump_filename = '';\n\t\tthis.dump_path = '';\n\t\tthis.migration_intent = '';\n\t\tthis.remote_site = null;\n\t\tthis.secret_key = null;\n\t\tthis.form_data = null;\n\t\tthis.stage = null;\n\t\tthis.elapsed_interval = null;\n\t\tthis.completed_msg = null;\n\t\tthis.tables_to_migrate = [];\n\t\tthis.migration_paused = false;\n\t\tthis.previous_progress_title = '';\n\t\tthis.previous_progress_text_primary = '';\n\t\tthis.previous_progress_text_secondary = '';\n\t\tthis.cancelling_text = '';\n\t\tthis.paused_text = '';\n\t\tthis.migration_cancelled = false;\n\t\tthis.flag_skip_delay = false;\n\t\tthis.delay_between_requests = 0;\n\t\tthis.fade_duration = 400;\n\t\tthis.pause_before_finalize = false;\n\t\tthis.is_auto_pause_before_finalize = false;\n\t\tthis.$connection_info_box = $('.connection-info-wrapper');\n\t\tthis.$push_select = window.wpmdb.$push_select = $('#select-tables').clone();\n\t\tthis.$pull_select = window.wpmdb.$pull_select = $('#select-tables').clone();\n\t\tthis.$push_post_type_select = $('#select-post-types').clone();\n\t\tthis.$pull_post_type_select = $('#select-post-types').clone();\n\t\tthis.$push_select_backup = $('#select-backup').clone();\n\t\tthis.$pull_select_backup = $('#select-backup').clone();\n\n\t\tthis.spinner_url = window.spinner_url = wpmdb.functions.get_spinner_url();\n\t\tthis.ajax_spinner = window.ajax_spinner = '<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"ajax-spinner general-spinner\" />';\n\t}\n\n\t_createClass(WPMDBGlobals, [{\n\t\tkey: 'pad',\n\t\tvalue: function pad(n, width, z) {\n\t\t\tz = z || '0';\n\t\t\tn = n + '';\n\t\t\treturn n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n\t\t}\n\t}, {\n\t\tkey: 'is_int',\n\t\tvalue: function is_int(n) {\n\t\t\tn = parseInt(n);\n\t\t\treturn 'number' === typeof n && 0 === n % 1;\n\t\t}\n\t}, {\n\t\tkey: 'get_intersect',\n\t\tvalue: function get_intersect(arr1, arr2) {\n\t\t\tvar r = [],\n\t\t\t    o = {},\n\t\t\t    l = arr2.length,\n\t\t\t    i,\n\t\t\t    v;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\to[arr2[i]] = true;\n\t\t\t}\n\t\t\tl = arr1.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tv = arr1[i];\n\t\t\t\tif (v in o) {\n\t\t\t\t\tr.push(v);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\t}, {\n\t\tkey: 'pin_replace_url',\n\t\tvalue: function pin_replace_url(pin) {\n\t\t\tif (true === pin && 1 > $('.replace-row.pin').length && 1 === $('#old-url').length) {\n\t\t\t\t$('#old-url').parents('.replace-row').addClass('pin');\n\t\t\t}\n\n\t\t\tif (false === pin && 0 < $('.replace-row.pin').length) {\n\t\t\t\t$('.replace-row.pin').removeClass('pin');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Core plugin wrapper for the common AJAX error detecting method\n   *\n   * @param text\n   * @param code\n   * @param jqXHR\n   *\n   * @returns {string}\n   */\n\n\t}, {\n\t\tkey: 'get_ajax_errors',\n\t\tvalue: function get_ajax_errors(text, code, jqXHR) {\n\t\t\treturn wpmdb.functions.wpmdbGetAjaxErrors(wpmdb_strings.connection_local_server_problem, code, text, jqXHR);\n\t\t}\n\n\t\t// updates the debug log when the user switches to the help tab\n\n\t}, {\n\t\tkey: 'refresh_debug_log',\n\t\tvalue: function refresh_debug_log() {\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_get_log',\n\t\t\t\t\tnonce: wpmdb_data.nonces.get_log\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.update_log_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.debug-log-textarea').val(data);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'get_query_var',\n\t\tvalue: function get_query_var(name) {\n\t\t\tname = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n\t\t\tvar regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)'),\n\t\t\t    results = regex.exec(location.search);\n\t\t\treturn null === results ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_ssl_warning',\n\t\tvalue: function maybe_show_ssl_warning(url, key, remote_scheme) {\n\t\t\tvar scheme = url.substr(0, url.indexOf(':'));\n\t\t\tvar $ssl_notice = $('.ssl-notice');\n\n\t\t\tif (!this.show_ssl_notice) {\n\t\t\t\t$ssl_notice.hide();\n\t\t\t}\n\n\t\t\tif (remote_scheme !== scheme && url.indexOf('https') !== -1) {\n\t\t\t\t$ssl_notice.show();\n\t\t\t\tthis.show_ssl_notice = true;\n\t\t\t\turl = url.replace('https', 'http');\n\t\t\t\t$('.pull-push-connection-info').val(url + '\\n' + key);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.show_ssl_notice = false;\n\t\t}\n\t}, {\n\t\tkey: 'validate_url',\n\t\tvalue: function validate_url(url) {\n\t\t\treturn (/^([a-z]([a-z]|\\d|\\+|-|\\.)*):(\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?((\\[(|(v[\\da-f]{1,}\\.(([a-z]|\\d|-|\\.|_|~)|[!\\$&'\\(\\)\\*\\+,;=]|:)+))\\])|((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=])*)(:\\d*)?)(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*|(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)|((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)|((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)){0})(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(url)\n\t\t\t);\n\t\t}\n\t}, {\n\t\tkey: 'refresh_table_selects',\n\t\tvalue: function refresh_table_selects() {\n\t\t\tif (undefined !== wpmdb_data && undefined !== wpmdb_data.this_tables && undefined !== wpmdb_data.this_table_sizes_hr) {\n\t\t\t\tthis.$push_select = this.create_table_select(wpmdb_data.this_tables, wpmdb_data.this_table_sizes_hr, $(wpmdb.$push_select).val());\n\t\t\t}\n\n\t\t\tif (undefined !== wpmdb.common.connection_data && undefined !== wpmdb.common.connection_data.tables && undefined !== wpmdb.common.connection_data.table_sizes_hr) {\n\t\t\t\tthis.$pull_select = this.create_table_select(wpmdb.common.connection_data.tables, wpmdb.common.connection_data.table_sizes_hr, $(wpmdb.$pull_select).val());\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'save_active_profile',\n\t\tvalue: function save_active_profile() {\n\t\t\tvar profile;\n\t\t\t$('.save-settings-button').blur();\n\n\t\t\tif (this.doing_save_profile) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (true === this.maybe_show_select_table_notice()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar create_new_profile = false;\n\n\t\t\tif ($('#create_new').is(':checked')) {\n\t\t\t\tcreate_new_profile = true;\n\t\t\t}\n\t\t\tvar profile_name = $('.create-new-profile').val();\n\n\t\t\tthis.doing_save_profile = true;\n\t\t\tprofile = $($('#migrate-form')[0].elements).not('.auth-credentials').serialize();\n\n\t\t\t$('.save-settings-button').attr('disabled', 'disabled').after('<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"save-profile-ajax-spinner general-spinner\" />');\n\n\t\t\tthis.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_save_profile',\n\t\t\t\t\tprofile: profile,\n\t\t\t\t\tnonce: wpmdb_data.nonces.save_profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\talert(wpmdb_strings.save_profile_problem);\n\t\t\t\t\t$('.save-settings-button').removeAttr('disabled');\n\t\t\t\t\t$('.save-profile-ajax-spinner').remove();\n\t\t\t\t\t$('.save-settings-button').after('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t\tthis.doing_save_profile = false;\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tvar updated_profile_id = parseInt($('#migrate-form input[name=save_migration_profile_option]:checked').val(), 10) + 1;\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t$('.save-settings-button').removeAttr('disabled');\n\t\t\t\t\t$('.save-profile-ajax-spinner').remove();\n\t\t\t\t\t$('.save-settings-button').after('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t\tthis.doing_save_profile = false;\n\t\t\t\t\t$('.create-new-profile').val('');\n\n\t\t\t\t\tif (create_new_profile) {\n\t\t\t\t\t\tvar new_profile_key = parseInt(data, 10);\n\t\t\t\t\t\tvar new_profile_id = new_profile_key + 1;\n\t\t\t\t\t\tvar new_li = $('<li><span class=\"delete-profile\" data-profile-id=\"' + new_profile_id + '\"></span><label for=\"profile-' + new_profile_id + '\"><input id=\"profile-' + new_profile_id + '\" value=\"' + new_profile_key + '\" name=\"save_migration_profile_option\" type=\"radio\"></label></li>');\n\t\t\t\t\t\tnew_li.find('label').append(document.createTextNode(' ' + profile_name));\n\t\t\t\t\t\tupdated_profile_id = new_profile_id;\n\n\t\t\t\t\t\t$('#create_new').parents('li').before(new_li);\n\t\t\t\t\t\t$('#profile-' + new_profile_id).attr('checked', 'checked');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Push updated profile id to history if available\n\t\t\t\t\tvar updated_url = window.location.href.replace('#migrate', '').replace(/&wpmdb-profile=-?\\d+/, '') + '&wpmdb-profile=' + updated_profile_id;\n\t\t\t\t\tvar updated_profile_name = $('#migrate-form input[name=save_migration_profile_option]:checked').parent().text().trim();\n\n\t\t\t\t\tif ('function' === typeof window.history.pushState) {\n\t\t\t\t\t\tif ($('#migrate-form .crumbs').length) {\n\t\t\t\t\t\t\t$('#migrate-form .crumbs .crumb:last').text(updated_profile_name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar $crumbs = $('<div class=\"crumbs\" />').append('<a class=\"crumb\" href=\"' + wpmdb_data.this_plugin_base + '\"> Saved Profiles </a>').append('<span class=\"crumb\">' + updated_profile_name + '</span>');\n\t\t\t\t\t\t\t$('#migrate-form').prepend($crumbs);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.history.pushState({ updated_profile_id: updated_profile_id }, null, updated_url);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'cancel_migration',\n\t\tvalue: function cancel_migration(event) {\n\t\t\tthis.migration_cancelled = true;\n\t\t\tthis.cancelling_text = wpmdb_strings.cancelling_migration;\n\t\t\t$('.migration-controls').css({ visibility: 'hidden' });\n\n\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\tthis.cancelling_text = wpmdb_strings.cancelling_find_replace;\n\t\t\t}\n\n\t\t\twpmdb.current_migration.setState(this.cancelling_text, wpmdb_strings.completing_current_request, 'cancelling');\n\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\tthis.migration_paused = false;\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Set checkbox\n   *\n   * @param string checkbox_wrap\n   */\n\n\t}, {\n\t\tkey: 'set_checkbox',\n\t\tvalue: function set_checkbox(checkbox_wrap) {\n\t\t\tvar $switch = $('#' + checkbox_wrap);\n\t\t\tvar $checkbox = $switch.find('input[type=checkbox]');\n\n\t\t\t$switch.toggleClass('on').find('span').toggleClass('checked');\n\t\t\tvar switch_on = $switch.find('span.on').hasClass('checked');\n\t\t\t$checkbox.attr('checked', switch_on).trigger('change');\n\t\t}\n\n\t\t// save file (export) / push / pull special conditions\n\n\t}, {\n\t\tkey: 'move_connection_info_box',\n\t\tvalue: function move_connection_info_box() {\n\t\t\tvar $connection_status = $('.connection-status');\n\t\t\tvar $directory_permission_notice = $('.directory-permission-notice');\n\t\t\tvar $compatibility_older_mysql = $('.compatibility-older-mysql');\n\t\t\tvar $mst_required = $('.mst-required');\n\t\t\tvar $keep_active_plugins = $('.keep-active-plugins');\n\t\t\tvar $step_two = $('.step-two');\n\t\t\tvar $backup_options = $('.backup-options');\n\t\t\tvar new_migration_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar profile_name, table_prefix, backup_table_prefix, uploads_dir, upload_dir_long, write_permission;\n\n\t\t\t$connection_status.hide();\n\t\t\t$directory_permission_notice.hide();\n\t\t\t$step_two.show();\n\t\t\t$backup_options.show();\n\t\t\t$keep_active_plugins.show();\n\t\t\t$compatibility_older_mysql.hide();\n\t\t\t$mst_required.hide();\n\n\t\t\twpmdb.functions.wpmdb_toggle_migration_action_text();\n\n\t\t\t$('.migrate-tab').attr('class', 'migrate-tab content-tab').addClass(wpmdb.functions.wpmdb_migration_type());\n\n\t\t\t$.wpmdb.do_action('move_connection_info_box', {\n\t\t\t\tmigration_type: new_migration_type,\n\t\t\t\tlast_migration_type: this.last_replace_switch\n\t\t\t});\n\n\t\t\tif (-1 !== $.inArray(new_migration_type, ['push', 'pull'])) {\n\t\t\t\tvar $pull_push_connection_info = $('.pull-push-connection-info');\n\t\t\t\tvar connection_info = $.trim($pull_push_connection_info.val()).split('\\n');\n\t\t\t\tvar $migration_list_li = $('.' + new_migration_type + '-list li');\n\n\t\t\t\t$migration_list_li.append(this.$connection_info_box);\n\t\t\t\tthis.$connection_info_box.show(function () {\n\t\t\t\t\tvar connection_textarea = $(this).find('.pull-push-connection-info');\n\t\t\t\t\tif (!connection_textarea.val()) {\n\t\t\t\t\t\tconnection_textarea.focus();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reconnect if the migration type was just changed\n\t\t\t\tif (new_migration_type !== this.last_replace_switch && 2 === connection_info.length) {\n\t\t\t\t\twpmdb.force_reconnect = true;\n\t\t\t\t\t$migration_list_li.append(this.$connection_info_box);\n\t\t\t\t\t$pull_push_connection_info.removeClass('temp-disabled').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\t\t\t\t\twpmdb.functions.connection_box_changed();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (this.connection_established) {\n\t\t\t\t\t$connection_status.hide();\n\t\t\t\t\t$step_two.show();\n\n\t\t\t\t\twpmdb.functions.wpmdb_toggle_migration_action_text();\n\n\t\t\t\t\tif ('pull' === new_migration_type) {\n\t\t\t\t\t\ttable_prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t\t\tbackup_table_prefix = wpmdb_data.site_details.prefix;\n\t\t\t\t\t\tuploads_dir = wpmdb_data.this_uploads_dir;\n\t\t\t\t\t\tupload_dir_long = wpmdb_data.this_upload_dir_long;\n\t\t\t\t\t\twrite_permission = wpmdb_data.write_permission;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttable_prefix = wpmdb_data.this_prefix;\n\t\t\t\t\t\tbackup_table_prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t\t\tuploads_dir = wpmdb.common.connection_data.uploads_dir;\n\t\t\t\t\t\tupload_dir_long = wpmdb.common.connection_data.upload_dir_long;\n\t\t\t\t\t\twrite_permission = wpmdb.common.connection_data.write_permissions;\n\t\t\t\t\t}\n\n\t\t\t\t\t$('.table_prefix').html(table_prefix);\n\t\t\t\t\t$('.backup-table-prefix').html(backup_table_prefix);\n\t\t\t\t\t$('.uploads-dir').html(uploads_dir);\n\n\t\t\t\t\tthis.maybe_show_backup_disabled_msg(upload_dir_long, write_permission);\n\n\t\t\t\t\tif (false === this.profile_name_edited) {\n\t\t\t\t\t\tprofile_name = this.get_domain_name(wpmdb.common.connection_data.url);\n\t\t\t\t\t\t$('.create-new-profile').val(profile_name);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$connection_status.show();\n\t\t\t\t\t$step_two.hide();\n\t\t\t\t}\n\t\t\t} else if (-1 !== $.inArray(new_migration_type, ['find_replace', 'savefile'])) {\n\t\t\t\t$connection_status.hide();\n\t\t\t\t$step_two.show();\n\t\t\t\t$('.table-prefix').html(wpmdb_data.this_prefix);\n\t\t\t\tif (false === this.profile_name_edited) {\n\t\t\t\t\t$('.create-new-profile').val('');\n\t\t\t\t}\n\n\t\t\t\t$keep_active_plugins.hide();\n\n\t\t\t\tif ('savefile' === new_migration_type) {\n\t\t\t\t\t$backup_options.hide();\n\t\t\t\t\t$compatibility_older_mysql.show();\n\n\t\t\t\t\tif ('false' === wpmdb_data.write_permission) {\n\t\t\t\t\t\t$directory_permission_notice.show();\n\t\t\t\t\t\t$step_two.hide();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\tvar $old_replace_col = $('.old-replace-col').eq(1);\n\t\t\t\t\t\t$old_replace_col.parent().removeClass('pin').find('.replace-remove-row').show();\n\t\t\t\t\t\t$old_replace_col.find('input').removeAttr('readonly');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.maybe_show_backup_disabled_msg(wpmdb_data.this_upload_dir_long, wpmdb_data.write_permission);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.maybe_show_mixed_cased_table_name_warning();\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_backup_disabled_msg',\n\t\tvalue: function maybe_show_backup_disabled_msg(upload_dir, write_permission) {\n\t\t\tvar $create_backup = $('#create-backup');\n\t\t\tvar $create_backup_label = $('#create-backup-label');\n\t\t\tvar $backup_option_disabled = $('.backup-option-disabled');\n\n\t\t\t$create_backup.removeAttr('disabled');\n\t\t\t$create_backup_label.removeClass('disabled');\n\t\t\t$backup_option_disabled.hide();\n\n\t\t\tif ('false' === write_permission) {\n\t\t\t\t$create_backup.prop('checked', false);\n\t\t\t\t$create_backup.attr('disabled', 'disabled');\n\t\t\t\t$create_backup_label.addClass('disabled');\n\t\t\t\t$backup_option_disabled.show();\n\t\t\t\t$('.upload-directory-location').html(upload_dir);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'change_replace_values',\n\t\tvalue: function change_replace_values() {\n\t\t\tvar old_url = null;\n\t\t\tvar old_path = null;\n\t\t\tif (null !== wpmdb.common.previous_connection_data && 'object' === _typeof(wpmdb.common.previous_connection_data) && wpmdb.common.previous_connection_data.url !== wpmdb.common.connection_data.url) {\n\t\t\t\told_url = this.remove_protocol(wpmdb.common.previous_connection_data.url);\n\t\t\t\told_path = wpmdb.common.previous_connection_data.path;\n\t\t\t}\n\n\t\t\tif ('push' === wpmdb.functions.wpmdb_migration_type() || 'savefile' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\tif ('pull' === this.last_replace_switch) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\t$('.old-replace-col input', this).val($('.replace-right-col input', this).val());\n\t\t\t\t\t\t$('.replace-right-col input', this).val(old_val);\n\t\t\t\t\t});\n\t\t\t\t} else if ('push' === this.last_replace_switch && 'push' === wpmdb.functions.wpmdb_migration_type() && null !== old_url && null !== old_path) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.replace-right-col input', this).val();\n\t\t\t\t\t\tif (old_val === old_path) {\n\t\t\t\t\t\t\t$('.replace-right-col input', this).val(wpmdb.common.connection_data.path);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old_val === old_url) {\n\t\t\t\t\t\t\t$('.replace-right-col input', this).val(this.remove_protocol(wpmdb.common.connection_data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$.wpmdb.do_action('wpmdb_update_push_table_select');\n\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t$('.exclude-post-types-warning').after(this.$push_post_type_select);\n\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t$('#select-backup').remove();\n\t\t\t\t$('.backup-tables-wrap').prepend(this.$push_select_backup);\n\t\t\t} else if ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\tif ('' === this.last_replace_switch || 'push' === this.last_replace_switch || 'savefile' === this.last_replace_switch) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\t$('.old-replace-col input', this).val($('.replace-right-col input', this).val());\n\t\t\t\t\t\t$('.replace-right-col input', this).val(old_val);\n\t\t\t\t\t});\n\t\t\t\t} else if ('pull' === this.last_replace_switch && 'pull' === wpmdb.functions.wpmdb_migration_type() && null !== old_url && null !== old_path) {\n\t\t\t\t\t$('.replace-row').each(function () {\n\t\t\t\t\t\tvar old_val = $('.old-replace-col input', this).val();\n\t\t\t\t\t\tif (old_val === old_path) {\n\t\t\t\t\t\t\t$('.old-replace-col input', this).val(wpmdb.common.connection_data.path);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old_val === old_url) {\n\t\t\t\t\t\t\t$('.old-replace-col input', this).val(this.remove_protocol(wpmdb.common.connection_data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t$('.exclude-post-types-warning').after(this.$pull_post_type_select);\n\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t$('#select-backup').remove();\n\t\t\t\t$('.backup-tables-wrap').prepend(this.$pull_select_backup);\n\t\t\t}\n\t\t\tthis.last_replace_switch = wpmdb.functions.wpmdb_migration_type();\n\t\t}\n\t}, {\n\t\tkey: 'switch_to_plugin_tab',\n\t\tvalue: function switch_to_plugin_tab(hash, skip_addons_check) {\n\t\t\t$('.nav-tab').removeClass('nav-tab-active');\n\t\t\t$('.nav-tab.' + hash).addClass('nav-tab-active');\n\t\t\t$('.content-tab').hide();\n\t\t\t$('.' + hash + '-tab').show();\n\n\t\t\tif ('settings' === hash) {\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('p.licence-status').append('Checking License... ').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ('help' === hash) {\n\t\t\t\tthis.refresh_debug_log();\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('.support-content p').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ('addons' === hash && true !== skip_addons_check) {\n\t\t\t\tif (true === this.should_check_licence()) {\n\t\t\t\t\t$('.addons-content p').append(this.ajax_spinner);\n\t\t\t\t\tthis.check_licence();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'hide_overlay',\n\t\tvalue: function hide_overlay() {\n\t\t\t$('#overlay').removeClass('show').addClass('hide');\n\t\t\t$('#overlay > div').removeClass('show').addClass('hide');\n\t\t\twpmdb.current_migration.$proVersion.find('iframe').remove();\n\t\t\tsetTimeout(function () {\n\t\t\t\t$('#overlay').remove();\n\t\t\t}, 500);\n\t\t\tthis.migration_completed = false;\n\t\t}\n\t}, {\n\t\tkey: 'check_licence',\n\t\tvalue: function check_licence(licence) {\n\t\t\tvar update_licence_content = !this.doing_licence_registration_ajax;\n\t\t\tthis.checked_licence = true;\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_check_licence',\n\t\t\t\t\tlicence: licence,\n\t\t\t\t\tcontext: 'all',\n\t\t\t\t\tnonce: wpmdb_data.nonces.check_licence\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.license_check_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\n\t\t\t\t\tvar $support_content = $('.support-content');\n\t\t\t\t\tvar $addons_content = $('.addons-content');\n\t\t\t\t\tvar $licence_content = $('.licence-status:not(.notification-message)');\n\t\t\t\t\tvar licence_msg, support_msg, addons_msg;\n\n\t\t\t\t\tif ('undefined' !== typeof data.dbrains_api_down) {\n\t\t\t\t\t\tsupport_msg = data.dbrains_api_down + data.message;\n\t\t\t\t\t\taddons_msg = data.dbrains_api_down;\n\t\t\t\t\t} else if ('undefined' !== typeof data.errors) {\n\n\t\t\t\t\t\tif ('undefined' !== typeof data.errors.subscription_expired) {\n\t\t\t\t\t\t\tlicence_msg = data.errors.subscription_expired.licence;\n\t\t\t\t\t\t\tsupport_msg = data.errors.subscription_expired.support;\n\t\t\t\t\t\t\taddons_msg = data.errors.subscription_expired.addons;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar msg = '';\n\t\t\t\t\t\t\tfor (var key in data.errors) {\n\t\t\t\t\t\t\t\tmsg += data.errors[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsupport_msg = msg;\n\t\t\t\t\t\t\taddons_msg = msg;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ('undefined' !== typeof data.addon_content) {\n\t\t\t\t\t\t\taddons_msg += '\\n' + data.addon_content;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsupport_msg = data.message;\n\t\t\t\t\t\taddons_msg = data.addon_content;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (update_licence_content) {\n\t\t\t\t\t\t$licence_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t\tif ('undefined' === typeof licence_msg) {\n\t\t\t\t\t\t\t\t$(this).css({ visibility: 'hidden', display: 'block' }).slideUp();\n\t\t\t\t\t\t\t\tlicence_msg = '';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$(this).empty().html(licence_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t$support_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t$(this).empty().html(support_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t});\n\t\t\t\t\t$addons_content.stop().fadeOut(this.fade_duration, function () {\n\t\t\t\t\t\t$(this).empty().html(addons_msg).stop().fadeIn(this.fade_duration);\n\t\t\t\t\t});\n\n\t\t\t\t\tif ($('#plugin-compatibility').is(':not(:checked)')) {\n\t\t\t\t\t\t$('#compatibility-header').click();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'should_check_licence',\n\t\tvalue: function should_check_licence() {\n\t\t\treturn false === this.checked_licence && '1' === wpmdb_data.has_licence && 'true' === wpmdb_data.is_pro;\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_mixed_cased_table_name_warning',\n\t\tvalue: function maybe_show_mixed_cased_table_name_warning() {\n\t\t\tif ('undefined' === typeof wpmdb.common.connection_data || false === wpmdb.common.connection_data) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar migration_intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar tables_to_migrate = wpmdb.functions.get_tables_to_migrate(null, null);\n\n\t\t\t$('.mixed-case-table-name-notice').hide();\n\n\t\t\tif (null === tables_to_migrate) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttables_to_migrate = tables_to_migrate.join('');\n\n\t\t\t// The table names are all lowercase, no need to display the warning.\n\t\t\tif (tables_to_migrate === tables_to_migrate.toLowerCase()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * Do not display the warning if the remote lower_case_table_names does not equal \"1\" (i.e the only problematic setting)\n    * Applies to push/export migrations.\n    */\n\t\t\tif ('1' !== wpmdb.common.connection_data.lower_case_table_names && ('push' === migration_intent || 'savefile' === migration_intent)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * Do not display the warning if the local lower_case_table_names does not equal \"1\" (i.e the only problematic setting)\n    * Only applies to pull migrations.\n    */\n\t\t\tif ('1' !== wpmdb_data.lower_case_table_names && 'pull' === migration_intent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n    * At this stage we've determined:\n    * 1. The source database contains at least one table that contains an uppercase character.\n    * 2. The destination environment has lower_case_table_names set to 1.\n    * 3. The source database table containing the uppercase letter will be converted to lowercase during the migration.\n    */\n\n\t\t\tif ('push' === migration_intent || 'savefile' === migration_intent) {\n\t\t\t\t$('.mixed-case-table-name-notice.push').show();\n\t\t\t} else {\n\t\t\t\t$('.mixed-case-table-name-notice.pull').show();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'enable_pro_licence',\n\t\tvalue: function enable_pro_licence(data, licence_key) {\n\t\t\t$('.licence-input, .register-licence').remove();\n\t\t\t$('.licence-not-entered').prepend(data.masked_licence);\n\t\t\t$('.support-content').empty().html('<p>' + wpmdb_strings.fetching_license + '<img src=\"' + this.spinner_url + '\" alt=\"\" class=\"ajax-spinner general-spinner\" /></p>');\n\t\t\tthis.check_licence(licence_key);\n\n\t\t\t$('.migrate-selection label').removeClass('disabled');\n\t\t\t$('.migrate-selection input').removeAttr('disabled');\n\t\t}\n\t}, {\n\t\tkey: 'get_domain_name',\n\t\tvalue: function get_domain_name(url) {\n\t\t\tvar temp_url = url;\n\t\t\tvar domain = temp_url.replace(/\\/\\/(.*)@/, '//').replace('http://', '').replace('https://', '').replace('www.', '');\n\t\t\treturn domain;\n\t\t}\n\t}, {\n\t\tkey: 'update_domain_placeholder',\n\t\tvalue: function update_domain_placeholder(label, url, stage) {\n\t\t\tvar domain = this.get_domain_name(url);\n\n\t\t\tif ('completed' === stage) {\n\t\t\t\treturn label.replace(/\\%s\\s?/, '<span class=domain-label>' + domain + '</span>&nbsp;');\n\t\t\t}\n\n\t\t\treturn label.replace(/\\%s(\\S*)\\s?/, '<span class=domain-label>' + domain + '$1</span>&nbsp;');\n\t\t}\n\t}, {\n\t\tkey: 'get_migration_status_label',\n\t\tvalue: function get_migration_status_label(url, intent, stage) {\n\t\t\tvar migrating_stage_label = '';\n\t\t\tvar completed_stage_label = '';\n\n\t\t\tswitch (intent) {\n\t\t\t\tcase 'push':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.push_migration_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.push_migration_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'pull':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.pull_migration_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.pull_migration_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'find_replace':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.find_replace_label_migrating;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.find_replace_label_completed;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'savefile':\n\t\t\t\t\tmigrating_stage_label = wpmdb_strings.exporting_please_wait;\n\t\t\t\t\tcompleted_stage_label = wpmdb_strings.exporting_complete;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tvar label = migrating_stage_label;\n\n\t\t\tif ('completed' === stage) {\n\t\t\t\tlabel = completed_stage_label;\n\t\t\t}\n\n\t\t\tif ('push' === intent || 'pull' === intent) {\n\t\t\t\tlabel = this.update_domain_placeholder(label, url, stage);\n\t\t\t}\n\n\t\t\tlabel = $.wpmdb.apply_filters('wpmdb_get_migration_status_label', label, {\n\t\t\t\tintent: intent,\n\t\t\t\tstage: stage\n\t\t\t});\n\n\t\t\treturn label;\n\t\t}\n\t}, {\n\t\tkey: 'disable_export_type_controls',\n\t\tvalue: function disable_export_type_controls() {\n\t\t\t$('.option-group').each(function (index) {\n\t\t\t\t$('input', this).attr('disabled', 'disabled');\n\t\t\t\t$('label', this).css('cursor', 'default');\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'enable_export_type_controls',\n\t\tvalue: function enable_export_type_controls() {\n\t\t\t$('.option-group').each(function (index) {\n\t\t\t\t$('input', this).removeAttr('disabled');\n\t\t\t\t$('label', this).css('cursor', 'pointer');\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'set_slider_value',\n\t\tvalue: function set_slider_value(parent_selector, value, unit, display) {\n\t\t\tvar display_value = value;\n\n\t\t\tif (undefined !== display) {\n\t\t\t\tdisplay_value = display;\n\t\t\t}\n\n\t\t\t$('.slider', parent_selector).slider('value', parseInt(value));\n\t\t\t$('.amount', parent_selector).html(wpmdb.functions.wpmdb_add_commas(display_value) + ' ' + unit);\n\t\t}\n\t}, {\n\t\tkey: 'set_pause_resume_button',\n\t\tvalue: function set_pause_resume_button(event, instance) {\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\tthis.migration_paused = false;\n\t\t\t\tthis.doing_ajax = true;\n\n\t\t\t\twpmdb.current_migration.setState(this.previous_progress_title, this.previous_progress_text_primary, 'active');\n\t\t\t\t$('.pause-resume').html(wpmdb_strings.pause);\n\n\t\t\t\t// Resume the timer\n\t\t\t\twpmdb.current_migration.resumeTimer();\n\n\t\t\t\twpmdb.functions.execute_next_step(instance);\n\t\t\t} else {\n\t\t\t\tthis.migration_paused = true;\n\t\t\t\tthis.doing_ajax = false;\n\t\t\t\tthis.paused_text = wpmdb_strings.migration_paused;\n\t\t\t\tthis.previous_progress_title = $('.progress-title').html();\n\t\t\t\tthis.previous_progress_text_primary = $('.progress-text', '.progress-wrapper-primary').html();\n\t\t\t\tthis.previous_progress_text_secondary = $('.progress-text', '.progress-wrapper-secondary ').html();\n\n\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\tthis.paused_text = wpmdb_strings.find_replace_paused;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.setState(this.paused_text, wpmdb_strings.completing_current_request, null);\n\t\t\t\t$('body').off('click', '.pause-resume'); // Is re-bound at execute_next_step when migration is finally paused\n\t\t\t\t$('body').off('click', '.cancel'); // Is re-bound at execute_next_step when migration is finally paused\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Filter temporary tables out of wpmdb.functions.create_table_select().\n   *\n   * @param exclude\n   * @param table_name\n   * @returns {bool}\n   */\n\n\t}, {\n\t\tkey: 'filter_temp_tables',\n\t\tvalue: function filter_temp_tables(exclude, table_name) {\n\t\t\tvar temp_prefix = wpmdb_data.this_temp_prefix;\n\n\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type() && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.temp_prefix) {\n\t\t\t\ttemp_prefix = wpmdb.common.connection_data.temp_prefix;\n\t\t\t}\n\n\t\t\tif (temp_prefix === table_name.substring(0, temp_prefix.length)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn exclude;\n\t\t}\n\t}, {\n\t\tkey: 'get_table_prefix',\n\t\tvalue: function get_table_prefix(value, args) {\n\t\t\treturn $('.table-select-wrap .table-prefix').text();\n\t\t}\n\t}, {\n\t\tkey: 'lock_replace_url',\n\t\tvalue: function lock_replace_url(lock) {\n\t\t\tif (true === lock) {\n\t\t\t\t$('.replace-row.pin .replace-right-col input[type=\"text\"]').attr('readonly', 'readonly');\n\t\t\t\t$('.replace-row.pin .arrow-col').addClass('disabled');\n\t\t\t} else {\n\t\t\t\t$('.replace-row.pin .replace-right-col input[type=\"text\"]').removeAttr('readonly');\n\t\t\t\t$('.replace-row.pin .arrow-col').removeClass('disabled');\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'set_connection_data',\n\t\tvalue: function set_connection_data(data) {\n\t\t\twindow.wpmdb.common.previous_connection_data = wpmdb.common.connection_data;\n\t\t\twindow.wpmdb.common.connection_data = data;\n\t\t\t$.wpmdb.do_action('wpmdb_connection_data_updated', data);\n\t\t}\n\n\t\t/**\n   * Returns formatted info for the Max Request Size slider.\n   *\n   * @param value\n   * @return object\n   */\n\n\t}, {\n\t\tkey: 'get_max_request_display_info',\n\t\tvalue: function get_max_request_display_info(value) {\n\t\t\tvar display_info = {};\n\n\t\t\tdisplay_info.unit = 'MB';\n\t\t\tdisplay_info.amount = (value / 1024).toFixed(2);\n\n\t\t\treturn display_info;\n\t\t}\n\t}, {\n\t\tkey: 'establish_remote_connection_from_saved_profile',\n\t\tvalue: function establish_remote_connection_from_saved_profile() {\n\t\t\tvar action = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar connection_info = $.trim($('.pull-push-connection-info').val()).split('\\n');\n\t\t\tif ('undefined' === typeof wpmdb_default_profile || true === wpmdb_default_profile || 'savefile' === action || 'find_replace' === action || 'import' === action || this.doing_ajax || !wpmdb_data.is_pro) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.doing_ajax = true;\n\t\t\tthis.disable_export_type_controls();\n\n\t\t\t$('.connection-status').html(wpmdb_strings.establishing_remote_connection);\n\t\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t\t$('.connection-status').append(this.ajax_spinner);\n\n\t\t\tvar intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\t// Hack to keep object scope\n\t\t\tvar self = this;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_verify_connection_to_remote_site',\n\t\t\t\t\turl: connection_info[0],\n\t\t\t\t\tkey: connection_info[1],\n\t\t\t\t\tintent: intent,\n\t\t\t\t\tnonce: wpmdb_data.nonces.verify_connection_to_remote_site,\n\t\t\t\t\tconvert_post_type_selection: wpmdb_convert_post_type_selection,\n\t\t\t\t\tprofile: wpmdb_data.profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.connection-status').html(this.get_ajax_errors(jqXHR.responseText, '(#102)', jqXHR));\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tself.doing_ajax = false;\n\t\t\t\t\tself.enable_export_type_controls();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tself.doing_ajax = false;\n\t\t\t\t\tself.enable_export_type_controls();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (true === self.maybe_show_mst_warning(data)) {\n\t\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.maybe_show_ssl_warning(connection_info[0], connection_info[1], data.scheme);\n\t\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\n\t\t\t\t\t$('.pull-push-connection-info').addClass('temp-disabled');\n\t\t\t\t\t$('.pull-push-connection-info').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\n\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t$('.step-two').show();\n\t\t\t\t\tself.connection_established = true;\n\t\t\t\t\tself.set_connection_data(data);\n\t\t\t\t\tself.move_connection_info_box();\n\n\t\t\t\t\tself.maybe_show_mixed_cased_table_name_warning();\n\n\t\t\t\t\tvar loaded_tables = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_tables) {\n\t\t\t\t\t\tloaded_tables = wpmdb_loaded_tables;\n\t\t\t\t\t}\n\n\t\t\t\t\tself.$pull_select = wpmdb.functions.create_table_select(wpmdb.common.connection_data.tables, wpmdb.common.connection_data.table_sizes_hr, loaded_tables);\n\t\t\t\t\tvar loaded_post_types = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_post_types) {\n\t\t\t\t\t\tif ('undefined' !== typeof data.select_post_types) {\n\t\t\t\t\t\t\t$('#exclude-post-types').attr('checked', 'checked');\n\t\t\t\t\t\t\t$('.post-type-select-wrap').show();\n\t\t\t\t\t\t\tloaded_post_types = data.select_post_types;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tloaded_post_types = wpmdb_loaded_post_types;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.post_types, function (index, value) {\n\t\t\t\t\t\tvar selected = $.inArray(value, loaded_post_types);\n\t\t\t\t\t\tif (-1 !== selected || true === wpmdb_convert_exclude_revisions && 'revision' !== value) {\n\t\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$($post_type_select).append('<option' + selected + 'value=\"' + value + '\">' + value + '</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tself.$pull_post_type_select = $post_type_select;\n\n\t\t\t\t\tvar loaded_tables_backup = '';\n\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_tables_backup) {\n\t\t\t\t\t\tloaded_tables_backup = wpmdb_loaded_tables_backup;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $table_select_backup = document.createElement('select');\n\t\t\t\t\t$($table_select_backup).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_backup[]',\n\t\t\t\t\t\tid: 'select-backup',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.tables, function (index, value) {\n\t\t\t\t\t\tvar selected = $.inArray(value, loaded_tables_backup);\n\t\t\t\t\t\tif (-1 !== selected) {\n\t\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselected = ' ';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$($table_select_backup).append('<option' + selected + 'value=\"' + value + '\">' + value + ' (' + wpmdb.common.connection_data.table_sizes_hr[value] + ')</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tself.$push_select_backup = $table_select_backup;\n\n\t\t\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t\t$('.exclude-post-types-warning').after(self.$pull_post_type_select);\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(self.$pull_select_backup);\n\t\t\t\t\t\t$('.table-prefix').html(data.prefix);\n\t\t\t\t\t\t$('.uploads-dir').html(wpmdb_data.this_uploads_dir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(self.$push_select_backup);\n\t\t\t\t\t}\n\n\t\t\t\t\t$.wpmdb.do_action('verify_connection_to_remote_site', wpmdb.common.connection_data);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * Main method that shows migration progress in the UI\n   * @param current_row\n   * @param primary_keys\n   * @param iterator\n   */\n\n\t}, {\n\t\tkey: 'migrate_table_recursive',\n\t\tvalue: function migrate_table_recursive(current_row, primary_keys, iterator) {\n\t\t\tvar i = iterator || 0;\n\n\t\t\tif (i >= this.tables_to_migrate.length) {\n\n\t\t\t\tif ('upload' === this.stage && wpmdb.current_migration.model.getStageItems('find_replace').length) {\n\t\t\t\t\tthis.stage = 'find_replace';\n\t\t\t\t\tthis.tables_to_migrate = wpmdb.current_migration.model.getStageItems('find_replace', 'name');\n\t\t\t\t\tthis.tables_to_migrate = this.tables_to_migrate.map(function (table) {\n\t\t\t\t\t\treturn '_mig_' + table;\n\t\t\t\t\t});\n\t\t\t\t\ti = 0;\n\t\t\t\t} else if ('backup' === this.stage) {\n\n\t\t\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\t\t\tthis.stage = 'migrate';\n\t\t\t\t\t} else if ('import' === this.migration_intent) {\n\t\t\t\t\t\tthis.stage = 'upload';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.stage = this.migration_intent;\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.current_migration.model.setActiveStage(this.stage);\n\n\t\t\t\t\tif ('find_replace' !== this.stage && 'migrate' !== this.stage) {\n\t\t\t\t\t\twpmdb.functions.wpmdb_call_next_hook();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ti = 0;\n\n\t\t\t\t\t// should get from model\n\t\t\t\t\tthis.tables_to_migrate = wpmdb.functions.get_tables_to_migrate(null, null);\n\t\t\t\t} else {\n\t\t\t\t\t$('.progress-label').removeClass('label-visible');\n\n\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_before_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.wpmdb_flush);\n\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_after_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete_events);\n\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar last_table = 0;\n\t\t\tif (i === this.tables_to_migrate.length - 1) {\n\t\t\t\tlast_table = 1;\n\t\t\t}\n\n\t\t\tvar gzip = 0;\n\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull']) && 1 === parseInt(wpmdb.common.connection_data.gzip)) {\n\t\t\t\tgzip = 1;\n\t\t\t}\n\n\t\t\tvar request_data = {\n\t\t\t\taction: 'wpmdb_migrate_table',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\ttable: this.tables_to_migrate[i],\n\t\t\t\tstage: this.stage,\n\t\t\t\tcurrent_row: current_row,\n\t\t\t\tlast_table: last_table,\n\t\t\t\tprimary_keys: primary_keys,\n\t\t\t\tgzip: gzip,\n\t\t\t\tnonce: wpmdb_data.nonces.migrate_table\n\t\t\t};\n\n\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\trequest_data.bottleneck = wpmdb.common.connection_data.bottleneck;\n\t\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t\t}\n\n\t\t\tif (wpmdb.common.connection_data && wpmdb.common.connection_data.path_current_site && wpmdb.common.connection_data.domain) {\n\t\t\t\trequest_data.path_current_site = wpmdb.common.connection_data.path_current_site;\n\t\t\t\trequest_data.domain_current_site = wpmdb.common.connection_data.domain;\n\t\t\t}\n\n\t\t\tthis.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\ttimeout: 0,\n\t\t\t\tdata: request_data,\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tvar progress_text = wpmdb_strings.table_process_problem + ' ' + this.tables_to_migrate[i] + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText;\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, progress_text, 'error');\n\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tdata = $.trim(data);\n\t\t\t\t\tvar row_information = wpmdb.functions.wpmdb_parse_json(data);\n\t\t\t\t\tvar error_text = '';\n\n\t\t\t\t\tif (false === row_information || null === row_information) {\n\n\t\t\t\t\t\t// should update model\n\t\t\t\t\t\tif ('' === data || null === data) {\n\t\t\t\t\t\t\terror_text = wpmdb_strings.table_process_problem_empty_response + ' ' + this.tables_to_migrate[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\terror_text = this.get_ajax_errors(data, null, null);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, error_text, 'error');\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('undefined' !== typeof row_information.wpmdb_error && 1 === row_information.wpmdb_error) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, row_information.body, 'error');\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar item_name = this.tables_to_migrate[i];\n\t\t\t\t\tif ('import' === this.migration_intent && 'find_replace' === this.stage) {\n\t\t\t\t\t\titem_name = item_name.replace(wpmdb_data.this_temp_prefix, '');\n\t\t\t\t\t}\n\n\t\t\t\t\t//successful iteration\n\t\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\t\twpmdb.current_migration.model.getStageModel(this.stage).setItemRowsTransferred(item_name, row_information.current_row);\n\n\t\t\t\t\t// We need the returned file name for delivery or display to the user.\n\t\t\t\t\tif (1 === last_table && 'savefile' === this.migration_intent) {\n\t\t\t\t\t\tif ('undefined' !== typeof row_information.dump_filename) {\n\t\t\t\t\t\t\tthis.dump_filename = row_information.dump_filename;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ('undefined' !== typeof row_information.dump_path) {\n\t\t\t\t\t\t\tthis.dump_path = row_information.dump_path;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (-1 === parseInt(row_information.current_row)) {\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\trow_information.current_row = '';\n\t\t\t\t\t\trow_information.primary_keys = '';\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\tfn: wpmdb.functions.migrate_table_recursive,\n\t\t\t\t\t\targs: [row_information.current_row, row_information.primary_keys, i]\n\t\t\t\t\t};\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'migration_complete_events',\n\t\tvalue: function migration_complete_events() {\n\t\t\tif (false === wpmdb.common.migration_error) {\n\t\t\t\tif ('' === wpmdb.common.non_fatal_errors) {\n\t\t\t\t\tif ('savefile' !== this.migration_intent && true === $('#save_computer').is(':checked')) {\n\t\t\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.completed_msg = this.completed_msg + '&nbsp;<div class=\"dashicons dashicons-yes\"></div>';\n\n\t\t\t\t\tif (true === this.migration_cancelled) {\n\t\t\t\t\t\tvar cancel_success = wpmdb_strings.migration_cancelled_success;\n\n\t\t\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\t\t\tcancel_success = wpmdb_strings.find_replace_cancelled_success;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, cancel_success, 'cancelled');\n\t\t\t\t\t} else {\n\t\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, '', 'complete');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.completed_with_some_errors, wpmdb.common.non_fatal_errors, 'error');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$('.migration-controls').addClass('hidden');\n\n\t\t\t// reset migration variables so consecutive migrations work correctly\n\t\t\twpmdb.common.hooks = [];\n\t\t\twpmdb.common.call_stack = [];\n\t\t\twpmdb.common.migration_error = false;\n\t\t\tthis.currently_migrating = false;\n\t\t\tthis.migration_completed = true;\n\t\t\tthis.migration_paused = false;\n\t\t\tthis.migration_cancelled = false;\n\t\t\tthis.doing_ajax = false;\n\t\t\twpmdb.common.non_fatal_errors = '';\n\t\t\tthis.tables_to_migrate = [];\n\n\t\t\t$('.progress-label').remove();\n\t\t\t$('.migration-progress-ajax-spinner').remove();\n\t\t\t$('.close-progress-content').show();\n\t\t\t$('#overlay').css('cursor', 'pointer');\n\t\t\twpmdb.current_migration.model.setMigrationComplete();\n\t\t}\n\t}, {\n\t\tkey: 'migration_complete',\n\t\tvalue: function migration_complete() {\n\n\t\t\t$('.migration-controls').addClass('hidden');\n\n\t\t\tif ('savefile' === this.migration_intent) {\n\t\t\t\tthis.currently_migrating = false;\n\t\t\t\tvar migrate_complete_text = wpmdb_strings.migration_complete;\n\t\t\t\tif ($('#save_computer').is(':checked')) {\n\t\t\t\t\tvar url = wpmdb_data.this_download_url + encodeURIComponent(this.dump_filename);\n\t\t\t\t\tif ($('#gzip_file').is(':checked')) {\n\t\t\t\t\t\turl += '&gzip=1';\n\t\t\t\t\t}\n\t\t\t\t\twindow.location = url;\n\t\t\t\t} else {\n\t\t\t\t\tmigrate_complete_text = wpmdb_strings.completed_dump_located_at + ' ' + this.dump_path;\n\t\t\t\t}\n\n\t\t\t\tif (false === wpmdb.common.migration_error) {\n\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\twpmdb.current_migration.setState(this.completed_msg, migrate_complete_text, 'complete');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// rename temp tables, delete old tables\n\n\t\t\t\twpmdb.current_migration.setState(null, wpmdb_strings.finalizing_migration, 'finalizing');\n\n\t\t\t\tvar request_data = {\n\t\t\t\t\taction: 'wpmdb_finalize_migration',\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\ttables: this.tables_to_migrate.join(','),\n\t\t\t\t\tnonce: wpmdb_data.nonces.finalize_migration\n\t\t\t\t};\n\n\t\t\t\tif (-1 !== $.inArray(this.migration_intent, ['push', 'pull'])) {\n\t\t\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t\t\t}\n\n\t\t\t\tthis.doing_ajax = true;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: request_data,\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.finalize_tables_problem, 'error');\n\n\t\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'wpmdb_flush',\n\t\tvalue: function wpmdb_flush() {\n\t\t\tif ('savefile' !== this.migration_intent) {\n\t\t\t\twpmdb.current_migration.setText(wpmdb_strings.flushing);\n\t\t\t\tthis.doing_ajax = true;\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'wpmdb_flush',\n\t\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\t\tnonce: wpmdb_data.nonces.flush\n\t\t\t\t\t},\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.flush_problem, 'error');\n\n\t\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'execute_next_step',\n\t\tvalue: function execute_next_step() {\n\n\t\t\t// if delay is set, set a timeout for delay to recall this function, then return\n\t\t\tif (0 < this.delay_between_requests && false === this.flag_skip_delay) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tthis.flag_skip_delay = true;\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}, this.delay_between_requests);\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.flag_skip_delay = false;\n\t\t\t}\n\n\t\t\tif (true === this.migration_paused) {\n\t\t\t\t$('.migration-progress-ajax-spinner').hide();\n\n\t\t\t\t// Pause the timer\n\t\t\t\twpmdb.current_migration.pauseTimer();\n\n\t\t\t\tvar pause_text = '';\n\t\t\t\tif (true === this.is_auto_pause_before_finalize) {\n\t\t\t\t\tpause_text = wpmdb_strings.paused_before_finalize;\n\t\t\t\t\tthis.is_auto_pause_before_finalize = false;\n\n\t\t\t\t\tif ('find_replace' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\tpause_text = wpmdb_strings.find_replace_paused_before_finalize;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpause_text = wpmdb_strings.paused;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.setState(null, pause_text, 'paused');\n\n\t\t\t\t// Re-bind Pause/Resume button to Resume when we are finally Paused\n\t\t\t\t$('body').on('click', '.pause-resume', function (event) {\n\t\t\t\t\tthis.set_pause_resume_button(event);\n\t\t\t\t});\n\t\t\t\t$('body').on('click', '.cancel', function (event) {\n\t\t\t\t\tthis.cancel_migration(event);\n\t\t\t\t});\n\t\t\t\t$('.pause-resume').html(wpmdb_strings.resume);\n\t\t\t} else if (true === this.migration_cancelled) {\n\t\t\t\tthis.migration_intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\t\tvar progress_msg;\n\n\t\t\t\tif ('savefile' === this.migration_intent) {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_sql;\n\t\t\t\t} else if ('pull' === this.migration_intent) {\n\t\t\t\t\tif ('backup' === this.stage) {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_backup;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_temp_tables;\n\t\t\t\t\t}\n\t\t\t\t} else if ('push' === this.migration_intent) {\n\t\t\t\t\tif ('backup' === this.stage) {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_sql;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_temp_tables;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twpmdb.current_migration.setText(progress_msg);\n\n\t\t\t\tvar request_data = {\n\t\t\t\t\taction: 'wpmdb_cancel_migration',\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\tnonce: wpmdb_data.nonces.cancel_migration\n\t\t\t\t};\n\n\t\t\t\tthis.doing_ajax = true;\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tdataType: 'text',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: request_data,\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, wpmdb_strings.manually_remove_temp_files + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText, 'error');\n\t\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\t\tdata = $.trim(data);\n\n\t\t\t\t\t\tif ('push' === this.migration_intent && '1' !== data || 'push' !== this.migration_intent && '' !== data) {\n\n\t\t\t\t\t\t\tif ('undefined' !== typeof data && 'undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t\t\tdata = data.wpmdb_error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, data, 'error');\n\t\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.completed_msg = wpmdb_strings.migration_cancelled;\n\n\t\t\t\t\t\tif ('find_replace' === this.migration_intent) {\n\t\t\t\t\t\t\tthis.completed_msg = wpmdb_strings.find_replace_cancelled;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\twpmdb.current_migration.setStatus('cancelled');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twpmdb.common.next_step_in_migration.fn.apply(null, wpmdb.common.next_step_in_migration.args);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_prefix_notice',\n\t\tvalue: function maybe_show_prefix_notice(prefix) {\n\t\t\tvar $prefix_notice = $('.prefix-notice');\n\n\t\t\t$prefix_notice.hide();\n\n\t\t\tif (prefix !== wpmdb_data.this_prefix) {\n\t\t\t\t$('.remote-prefix').html(prefix);\n\t\t\t\tthis.show_prefix_notice = true;\n\t\t\t\t$prefix_notice.show();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_mst_warning',\n\t\tvalue: function maybe_show_mst_warning(data) {\n\t\t\tvar migration_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar show_mst_warning = false;\n\n\t\t\tif (-1 !== $.inArray(migration_type, ['push', 'pull']) && 'undefined' !== typeof data.site_details) {\n\t\t\t\tif (wpmdb_data.site_details.is_multisite !== data.site_details.is_multisite) {\n\t\t\t\t\tif ('undefined' === typeof wpmdb.mst || 'undefined' === typeof data.mst_available || '1' !== data.mst_available) {\n\t\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ('import' === migration_type) {\n\t\t\t\tif ('undefined' !== typeof data.multisite && 'undefined' !== typeof data.subsite_export) {\n\t\t\t\t\tif ('false' === wpmdb_data.site_details.is_multisite && 'true' === data.multisite && 'true' !== data.subsite_export || 'true' === wpmdb_data.site_details.is_multisite && 'false' === data.multisite) {\n\t\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tshow_mst_warning = $.wpmdb.apply_filters('wpmdb_show_mst_warning', show_mst_warning);\n\n\t\t\tif (show_mst_warning) {\n\t\t\t\t$('.mst-required').show();\n\t\t\t}\n\n\t\t\treturn show_mst_warning;\n\t\t}\n\t}, {\n\t\tkey: 'maybe_show_select_table_notice',\n\t\tvalue: function maybe_show_select_table_notice() {\n\n\t\t\t// check that they've selected some tables to migrate\n\t\t\tif ($('#migrate-selected').is(':checked') && null === $('#select-tables').val()) {\n\t\t\t\tif ('import' !== wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\talert(wpmdb_strings.please_select_one_table);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif ($('#import-find-replace').is(':checked') && $('#select-tables').is(':visible')) {\n\t\t\t\t\t\talert(wpmdb_strings.please_select_one_table_import);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check that they've selected some tables to backup\n\t\t\tif ('savefile' !== wpmdb.functions.wpmdb_migration_type() && $('#backup-manual-select').is(':checked') && null === $('#select-backup').val()) {\n\t\t\t\talert(wpmdb_strings.please_select_one_table_backup);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}, {\n\t\tkey: 'remove_protocol',\n\t\tvalue: function remove_protocol(url) {\n\t\t\treturn url.replace(/^https?:/i, '');\n\t\t}\n\t}, {\n\t\tkey: 'create_table_select',\n\t\tvalue: function create_table_select(tables, table_sizes_hr, selected_tables) {\n\t\t\tvar $table_select = document.createElement('select');\n\t\t\t$($table_select).attr({\n\t\t\t\tmultiple: 'multiple',\n\t\t\t\tname: 'select_tables[]',\n\t\t\t\tid: 'select-tables',\n\t\t\t\tclass: 'multiselect'\n\t\t\t});\n\n\t\t\tif (0 < tables.length) {\n\t\t\t\t$.each(tables, function (index, table) {\n\t\t\t\t\tif ($.wpmdb.apply_filters('wpmdb_exclude_table', false, table)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar selected = ' ';\n\t\t\t\t\tif (undefined !== selected_tables && null !== selected_tables && 0 < selected_tables.length && -1 !== $.inArray(table, selected_tables)) {\n\t\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\t}\n\n\t\t\t\t\tvar size = '';\n\t\t\t\t\tif (0 !== table_sizes_hr.length) {\n\t\t\t\t\t\tsize = ' (' + table_sizes_hr[table] + ')';\n\t\t\t\t\t}\n\n\t\t\t\t\t$($table_select).append('<option' + selected + 'value=\"' + table + '\">' + table + size + '</option>');\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn $table_select;\n\t\t}\n\n\t\t/**\n   * Returns tables selected for migration.\n   *\n   * @returns {array}\n   *\n   * Also handler for wpmdb_get_tables_to_migrate filter, disregards input values as it is the primary source.\n   */\n\n\t}, {\n\t\tkey: 'get_tables_to_migrate',\n\t\tvalue: function get_tables_to_migrate() {\n\t\t\tvar tables = [];\n\t\t\tvar mig_type = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar table_intent = $('input[name=table_migrate_option]:checked').val();\n\n\t\t\t// Grab tables as per what the user has selected from the multiselect box or all prefixed tables.\n\t\t\tif ('migrate_select' === table_intent) {\n\t\t\t\ttables = $('#select-tables').val();\n\t\t\t} else {\n\t\t\t\tif ('pull' !== mig_type && 'undefined' !== typeof wpmdb_data.this_prefixed_tables) {\n\t\t\t\t\ttables = wpmdb_data.this_prefixed_tables;\n\t\t\t\t} else if ('pull' === mig_type && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.prefixed_tables) {\n\t\t\t\t\ttables = wpmdb.common.connection_data.prefixed_tables;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn tables;\n\t\t}\n\t}, {\n\t\tkey: 'update_migrate_button_text',\n\t\tvalue: function update_migrate_button_text() {\n\t\t\tvar migration_intent = wpmdb.functions.wpmdb_migration_type();\n\t\t\tvar save_string = $('#save-migration-profile').is(':checked') ? '_save' : '';\n\t\t\tvar migrate_string = 'migrate_button_' + ('savefile' === migration_intent ? 'export' : migration_intent) + save_string;\n\t\t\t$('.migrate-db .button-primary').val(wpmdb_strings[migrate_string]);\n\t\t}\n\n\t\t// fired when the connection info box changes (e.g. gets pasted into)\n\n\t}, {\n\t\tkey: 'connection_box_changed',\n\t\tvalue: function connection_box_changed() {\n\t\t\tvar $this = $('.pull-push-connection-info');\n\n\t\t\tif (-1 === $.inArray(wpmdb.functions.wpmdb_migration_type(), ['push', 'pull']) || (this.doing_ajax || $($this).hasClass('temp-disabled')) && false === wpmdb.force_reconnect) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twpmdb.force_reconnect = false;\n\t\t\tvar data = $('.pull-push-connection-info').val();\n\n\t\t\tvar connection_info = $.trim(data).split('\\n');\n\t\t\tvar error = false;\n\t\t\tvar error_message = '';\n\n\t\t\tif ('' === connection_info) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_missing;\n\t\t\t}\n\n\t\t\t// attempt to format the connection info from a single line\n\t\t\tif (1 === connection_info.length && !error) {\n\t\t\t\tvar connection_words = $.trim(data).split(' ');\n\t\t\t\tif (2 === connection_words.length) {\n\t\t\t\t\tconnection_info = connection_words;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (2 !== connection_info.length && !error) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_incorrect;\n\t\t\t}\n\n\t\t\tif (!error && !this.validate_url(connection_info[0])) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_url_invalid;\n\t\t\t}\n\n\t\t\tvar key_length = 0;\n\n\t\t\tif ('undefined' !== typeof connection_info[1]) {\n\t\t\t\tkey_length = connection_info[1].length;\n\t\t\t}\n\n\t\t\tif (!error && 32 !== key_length && 40 !== key_length) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_key_invalid;\n\t\t\t}\n\n\t\t\tif (!error && connection_info[0] === wpmdb_data.connection_info[0]) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_local_url;\n\t\t\t}\n\n\t\t\tif (!error && connection_info[1] === wpmdb_data.connection_info[1]) {\n\t\t\t\terror = true;\n\t\t\t\terror_message = wpmdb_strings.connection_info_local_key;\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\t$('.connection-status').html(error_message);\n\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar new_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\n\t\t\t// If connection info is a single line\n\t\t\tif (1 === $.trim(data).split('\\n').length) {\n\n\t\t\t\t// Repopulate the input with the info on two lines\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t}\n\n\t\t\tif (false === wpmdb_data.openssl_available) {\n\t\t\t\tconnection_info[0] = connection_info[0].replace('https://', 'http://');\n\t\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t}\n\n\t\t\tthis.show_prefix_notice = false;\n\t\t\tthis.doing_ajax = true;\n\t\t\tthis.disable_export_type_controls();\n\n\t\t\tif ($('.basic-access-auth-wrapper').is(':visible')) {\n\t\t\t\tconnection_info[0] = connection_info[0].replace(/\\/\\/(.*)@/, '//');\n\t\t\t\tconnection_info[0] = connection_info[0].replace('//', '//' + encodeURIComponent($.trim($('.auth-username').val())) + ':' + encodeURIComponent($.trim($('.auth-password').val())) + '@');\n\t\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t\t$('.basic-access-auth-wrapper').hide();\n\t\t\t}\n\n\t\t\t$('.step-two').hide();\n\t\t\t$('.ssl-notice').hide();\n\t\t\t$('.prefix-notice').hide();\n\t\t\t$('.connection-status').show();\n\n\t\t\t$('.connection-status').html(wpmdb_strings.establishing_remote_connection);\n\t\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t\t$('.connection-status').append(this.ajax_spinner);\n\n\t\t\tvar intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\tthis.profile_name_edited = false;\n\n\t\t\treturn $.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_verify_connection_to_remote_site',\n\t\t\t\t\turl: connection_info[0],\n\t\t\t\t\tkey: connection_info[1],\n\t\t\t\t\tintent: intent,\n\t\t\t\t\tnonce: wpmdb_data.nonces.verify_connection_to_remote_site\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.connection-status').html(this.get_ajax_errors(jqXHR.responseText, '(#100)', jqXHR));\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tthis.enable_export_type_controls();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tthis.doing_ajax = false;\n\t\t\t\t\tthis.enable_export_type_controls();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!$('.pull-push-connection-info').hasClass('temp-disabled') && !$('.connect-button').is(':visible')) {\n\t\t\t\t\t\t\t$('.pull-push-connection-info').removeAttr('readonly');\n\t\t\t\t\t\t\t$('.connect-button').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (true === this.maybe_show_mst_warning(data)) {\n\t\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.maybe_show_ssl_warning(connection_info[0], connection_info[1], data.scheme);\n\n\t\t\t\t\tvar profile_name = this.get_domain_name(data.url);\n\t\t\t\t\t$('.create-new-profile').val(profile_name);\n\n\t\t\t\t\t$('.pull-push-connection-info').addClass('temp-disabled');\n\t\t\t\t\t$('.pull-push-connection-info').attr('readonly', 'readonly');\n\t\t\t\t\t$('.connect-button').hide();\n\n\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\t$('.step-two').show();\n\n\t\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\n\t\t\t\t\tthis.connection_established = true;\n\t\t\t\t\tthis.set_connection_data(data);\n\t\t\t\t\tthis.move_connection_info_box();\n\t\t\t\t\tthis.change_replace_values();\n\n\t\t\t\t\tthis.maybe_show_mixed_cased_table_name_warning();\n\n\t\t\t\t\tthis.refresh_table_selects(null, null, this);\n\n\t\t\t\t\tthis.$push_select_backup = $(this.$pull_select).clone();\n\t\t\t\t\t$(this.$push_select_backup).attr({\n\t\t\t\t\t\tname: 'select_backup[]',\n\t\t\t\t\t\tid: 'select-backup'\n\t\t\t\t\t});\n\n\t\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t});\n\n\t\t\t\t\t$.each(wpmdb.common.connection_data.post_types, function (index, value) {\n\t\t\t\t\t\t$($post_type_select).append('<option value=\"' + value + '\">' + value + '</option>');\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.$pull_post_type_select = $post_type_select;\n\n\t\t\t\t\t$('#new-path-missing-warning, #new-url-missing-warning').hide();\n\n\t\t\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t\t$('#new-url').val(this.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t\t$('#new-path').val(wpmdb_data.this_path);\n\t\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t\t$('#new-domain').val(wpmdb_data.this_domain);\n\t\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('#old-url').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t$('#old-path').val(data.path);\n\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t\t$('.exclude-post-types-warning').after(this.$pull_post_type_select);\n\t\t\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t\t\t$('.table-prefix').html(data.prefix);\n\t\t\t\t\t\t$('.backup-table-prefix').html(wpmdb_data.site_details.prefix);\n\t\t\t\t\t\t$('.uploads-dir').html(wpmdb_data.this_uploads_dir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('#new-url').val(this.remove_protocol(data.url));\n\t\t\t\t\t\t$('#new-path').val(data.path);\n\n\t\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(this.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_push_table_select');\n\t\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t\t$('.backup-tables-wrap').prepend(this.$push_select_backup);\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\tfn: $.wpmdb.do_action,\n\t\t\t\t\t\targs: ['verify_connection_to_remote_site', wpmdb.common.connection_data]\n\t\t\t\t\t};\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}]);\n\n\treturn WPMDBGlobals;\n}();\n\nexports.default = WPMDBGlobals;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///78\n");

/***/ }),
/* 79 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($) {\n\n\t$.wpmdb = {\n\t\t/**\n   * Implement a WordPress-link Hook System for Javascript\n   * TODO: Change 'tag' to 'args', allow number (priority), string (tag), object (priority+tag)\n   */\n\t\thooks: { action: {}, filter: {} },\n\t\tadd_action: function add_action(action, callable, tag, self) {\n\t\t\tjQuery.wpmdb.add_hook('action', action, callable, tag, self);\n\t\t},\n\t\tadd_filter: function add_filter(action, callable, tag, self) {\n\t\t\tjQuery.wpmdb.add_hook('filter', action, callable, tag, self);\n\t\t},\n\t\tdo_action: function do_action(action, args) {\n\t\t\tjQuery.wpmdb.do_hook('action', action, null, args);\n\t\t},\n\t\tapply_filters: function apply_filters(action, value, args) {\n\t\t\treturn jQuery.wpmdb.do_hook('filter', action, value, args);\n\t\t},\n\t\tremove_action: function remove_action(action, tag) {\n\t\t\tjQuery.wpmdb.remove_hook('action', action, tag);\n\t\t},\n\t\tremove_filter: function remove_filter(action, tag) {\n\t\t\tjQuery.wpmdb.remove_hook('filter', action, tag);\n\t\t},\n\t\tadd_hook: function add_hook(hook_type, action, callable, tag, self) {\n\t\t\tif (undefined === jQuery.wpmdb.hooks[hook_type][action]) {\n\t\t\t\tjQuery.wpmdb.hooks[hook_type][action] = [];\n\t\t\t}\n\t\t\tvar hooks = jQuery.wpmdb.hooks[hook_type][action];\n\t\t\tif (undefined === tag) {\n\t\t\t\ttag = action + '_' + hooks.length;\n\t\t\t}\n\t\t\tjQuery.wpmdb.hooks[hook_type][action].push({ tag: tag, callable: callable, instance: self });\n\t\t},\n\t\tdo_hook: function do_hook(hook_type, action, value, args) {\n\t\t\tif (undefined !== jQuery.wpmdb.hooks[hook_type][action]) {\n\t\t\t\tvar hooks = jQuery.wpmdb.hooks[hook_type][action];\n\t\t\t\tfor (var i = 0; i < hooks.length; i++) {\n\t\t\t\t\tif ('action' === hook_type) {\n\n\t\t\t\t\t\t// .call (value of this, arg1, arg2) https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call\n\t\t\t\t\t\thooks[i].callable.call(hooks[i].instance, args, hooks[i].instance);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = hooks[i].callable.call(hooks[i].instance, value, args, hooks[i].instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ('filter' === hook_type) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t},\n\t\tremove_hook: function remove_hook(hook_type, action, tag) {\n\t\t\tif (undefined !== jQuery.wpmdb.hooks[hook_type][action]) {\n\t\t\t\tvar hooks = jQuery.wpmdb.hooks[hook_type][action];\n\t\t\t\tfor (var i = hooks.length - 1; 0 < i; i--) {\n\t\t\t\t\tif (undefined === tag || tag === hooks[i].tag) {\n\t\t\t\t\t\thooks.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n})(jQuery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2hvb2suanM/ZThjMCJdLCJuYW1lcyI6WyIkIiwid3BtZGIiLCJob29rcyIsImFjdGlvbiIsImZpbHRlciIsImFkZF9hY3Rpb24iLCJjYWxsYWJsZSIsInRhZyIsInNlbGYiLCJqUXVlcnkiLCJhZGRfaG9vayIsImFkZF9maWx0ZXIiLCJkb19hY3Rpb24iLCJhcmdzIiwiZG9faG9vayIsImFwcGx5X2ZpbHRlcnMiLCJ2YWx1ZSIsInJlbW92ZV9hY3Rpb24iLCJyZW1vdmVfaG9vayIsInJlbW92ZV9maWx0ZXIiLCJob29rX3R5cGUiLCJ1bmRlZmluZWQiLCJsZW5ndGgiLCJwdXNoIiwiaW5zdGFuY2UiLCJpIiwiY2FsbCIsInNwbGljZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYzs7QUFFZEEsR0FBRUMsS0FBRixHQUFVO0FBQ1Q7Ozs7QUFJQUMsU0FBTyxFQUFFQyxRQUFRLEVBQVYsRUFBY0MsUUFBUSxFQUF0QixFQUxFO0FBTVRDLGNBQVksb0JBQVVGLE1BQVYsRUFBa0JHLFFBQWxCLEVBQTRCQyxHQUE1QixFQUFpQ0MsSUFBakMsRUFBd0M7QUFDbkRDLFVBQU9SLEtBQVAsQ0FBYVMsUUFBYixDQUF1QixRQUF2QixFQUFpQ1AsTUFBakMsRUFBeUNHLFFBQXpDLEVBQW1EQyxHQUFuRCxFQUF3REMsSUFBeEQ7QUFDQSxHQVJRO0FBU1RHLGNBQVksb0JBQVVSLE1BQVYsRUFBa0JHLFFBQWxCLEVBQTRCQyxHQUE1QixFQUFpQ0MsSUFBakMsRUFBd0M7QUFDbkRDLFVBQU9SLEtBQVAsQ0FBYVMsUUFBYixDQUF1QixRQUF2QixFQUFpQ1AsTUFBakMsRUFBeUNHLFFBQXpDLEVBQW1EQyxHQUFuRCxFQUF3REMsSUFBeEQ7QUFDQSxHQVhRO0FBWVRJLGFBQVcsbUJBQVVULE1BQVYsRUFBa0JVLElBQWxCLEVBQXlCO0FBQ25DSixVQUFPUixLQUFQLENBQWFhLE9BQWIsQ0FBc0IsUUFBdEIsRUFBZ0NYLE1BQWhDLEVBQXdDLElBQXhDLEVBQThDVSxJQUE5QztBQUNBLEdBZFE7QUFlVEUsaUJBQWUsdUJBQVVaLE1BQVYsRUFBa0JhLEtBQWxCLEVBQXlCSCxJQUF6QixFQUFnQztBQUM5QyxVQUFPSixPQUFPUixLQUFQLENBQWFhLE9BQWIsQ0FBc0IsUUFBdEIsRUFBZ0NYLE1BQWhDLEVBQXdDYSxLQUF4QyxFQUErQ0gsSUFBL0MsQ0FBUDtBQUNBLEdBakJRO0FBa0JUSSxpQkFBZSx1QkFBVWQsTUFBVixFQUFrQkksR0FBbEIsRUFBd0I7QUFDdENFLFVBQU9SLEtBQVAsQ0FBYWlCLFdBQWIsQ0FBMEIsUUFBMUIsRUFBb0NmLE1BQXBDLEVBQTRDSSxHQUE1QztBQUNBLEdBcEJRO0FBcUJUWSxpQkFBZSx1QkFBVWhCLE1BQVYsRUFBa0JJLEdBQWxCLEVBQXdCO0FBQ3RDRSxVQUFPUixLQUFQLENBQWFpQixXQUFiLENBQTBCLFFBQTFCLEVBQW9DZixNQUFwQyxFQUE0Q0ksR0FBNUM7QUFDQSxHQXZCUTtBQXdCVEcsWUFBVSxrQkFBVVUsU0FBVixFQUFxQmpCLE1BQXJCLEVBQTZCRyxRQUE3QixFQUF1Q0MsR0FBdkMsRUFBNENDLElBQTVDLEVBQW1EO0FBQzVELE9BQUthLGNBQWNaLE9BQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsQ0FBbkIsRUFBK0Q7QUFDOURNLFdBQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsSUFBNEMsRUFBNUM7QUFDQTtBQUNELE9BQUlELFFBQVFPLE9BQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsQ0FBWjtBQUNBLE9BQUtrQixjQUFjZCxHQUFuQixFQUF5QjtBQUN4QkEsVUFBTUosU0FBUyxHQUFULEdBQWVELE1BQU1vQixNQUEzQjtBQUNBO0FBQ0RiLFVBQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsRUFBMENvQixJQUExQyxDQUFnRCxFQUFFaEIsS0FBS0EsR0FBUCxFQUFZRCxVQUFVQSxRQUF0QixFQUFnQ2tCLFVBQVVoQixJQUExQyxFQUFoRDtBQUNBLEdBakNRO0FBa0NUTSxXQUFTLGlCQUFVTSxTQUFWLEVBQXFCakIsTUFBckIsRUFBNkJhLEtBQTdCLEVBQW9DSCxJQUFwQyxFQUEyQztBQUNuRCxPQUFLUSxjQUFjWixPQUFPUixLQUFQLENBQWFDLEtBQWIsQ0FBb0JrQixTQUFwQixFQUFpQ2pCLE1BQWpDLENBQW5CLEVBQStEO0FBQzlELFFBQUlELFFBQVFPLE9BQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsQ0FBWjtBQUNBLFNBQU0sSUFBSXNCLElBQUksQ0FBZCxFQUFpQkEsSUFBSXZCLE1BQU1vQixNQUEzQixFQUFtQ0csR0FBbkMsRUFBeUM7QUFDeEMsU0FBSyxhQUFhTCxTQUFsQixFQUE4Qjs7QUFFN0I7QUFDQWxCLFlBQU91QixDQUFQLEVBQVduQixRQUFYLENBQW9Cb0IsSUFBcEIsQ0FBMEJ4QixNQUFPdUIsQ0FBUCxFQUFXRCxRQUFyQyxFQUErQ1gsSUFBL0MsRUFBcURYLE1BQU91QixDQUFQLEVBQVdELFFBQWhFO0FBQ0EsTUFKRCxNQUlPO0FBQ05SLGNBQVFkLE1BQU91QixDQUFQLEVBQVduQixRQUFYLENBQW9Cb0IsSUFBcEIsQ0FBMEJ4QixNQUFPdUIsQ0FBUCxFQUFXRCxRQUFyQyxFQUErQ1IsS0FBL0MsRUFBc0RILElBQXRELEVBQTREWCxNQUFPdUIsQ0FBUCxFQUFXRCxRQUF2RSxDQUFSO0FBQ0E7QUFDRDtBQUNEO0FBQ0QsT0FBSyxhQUFhSixTQUFsQixFQUE4QjtBQUM3QixXQUFPSixLQUFQO0FBQ0E7QUFDRCxHQWxEUTtBQW1EVEUsZUFBYSxxQkFBVUUsU0FBVixFQUFxQmpCLE1BQXJCLEVBQTZCSSxHQUE3QixFQUFtQztBQUMvQyxPQUFLYyxjQUFjWixPQUFPUixLQUFQLENBQWFDLEtBQWIsQ0FBb0JrQixTQUFwQixFQUFpQ2pCLE1BQWpDLENBQW5CLEVBQStEO0FBQzlELFFBQUlELFFBQVFPLE9BQU9SLEtBQVAsQ0FBYUMsS0FBYixDQUFvQmtCLFNBQXBCLEVBQWlDakIsTUFBakMsQ0FBWjtBQUNBLFNBQU0sSUFBSXNCLElBQUl2QixNQUFNb0IsTUFBTixHQUFlLENBQTdCLEVBQWdDLElBQUlHLENBQXBDLEVBQXVDQSxHQUF2QyxFQUE2QztBQUM1QyxTQUFLSixjQUFjZCxHQUFkLElBQXFCQSxRQUFRTCxNQUFPdUIsQ0FBUCxFQUFXbEIsR0FBN0MsRUFBbUQ7QUFDbERMLFlBQU15QixNQUFOLENBQWNGLENBQWQsRUFBaUIsQ0FBakI7QUFDQTtBQUNEO0FBQ0Q7QUFDRDtBQTVEUSxFQUFWO0FBK0RBLENBakVELEVBaUVJaEIsTUFqRUosRSIsImZpbGUiOiI3OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiggJCApIHtcblxuXHQkLndwbWRiID0ge1xuXHRcdC8qKlxuXHRcdCAqIEltcGxlbWVudCBhIFdvcmRQcmVzcy1saW5rIEhvb2sgU3lzdGVtIGZvciBKYXZhc2NyaXB0XG5cdFx0ICogVE9ETzogQ2hhbmdlICd0YWcnIHRvICdhcmdzJywgYWxsb3cgbnVtYmVyIChwcmlvcml0eSksIHN0cmluZyAodGFnKSwgb2JqZWN0IChwcmlvcml0eSt0YWcpXG5cdFx0ICovXG5cdFx0aG9va3M6IHsgYWN0aW9uOiB7fSwgZmlsdGVyOiB7fSB9LFxuXHRcdGFkZF9hY3Rpb246IGZ1bmN0aW9uKCBhY3Rpb24sIGNhbGxhYmxlLCB0YWcsIHNlbGYgKSB7XG5cdFx0XHRqUXVlcnkud3BtZGIuYWRkX2hvb2soICdhY3Rpb24nLCBhY3Rpb24sIGNhbGxhYmxlLCB0YWcsIHNlbGYgKTtcblx0XHR9LFxuXHRcdGFkZF9maWx0ZXI6IGZ1bmN0aW9uKCBhY3Rpb24sIGNhbGxhYmxlLCB0YWcsIHNlbGYgKSB7XG5cdFx0XHRqUXVlcnkud3BtZGIuYWRkX2hvb2soICdmaWx0ZXInLCBhY3Rpb24sIGNhbGxhYmxlLCB0YWcsIHNlbGYgKTtcblx0XHR9LFxuXHRcdGRvX2FjdGlvbjogZnVuY3Rpb24oIGFjdGlvbiwgYXJncyApIHtcblx0XHRcdGpRdWVyeS53cG1kYi5kb19ob29rKCAnYWN0aW9uJywgYWN0aW9uLCBudWxsLCBhcmdzICk7XG5cdFx0fSxcblx0XHRhcHBseV9maWx0ZXJzOiBmdW5jdGlvbiggYWN0aW9uLCB2YWx1ZSwgYXJncyApIHtcblx0XHRcdHJldHVybiBqUXVlcnkud3BtZGIuZG9faG9vayggJ2ZpbHRlcicsIGFjdGlvbiwgdmFsdWUsIGFyZ3MgKTtcblx0XHR9LFxuXHRcdHJlbW92ZV9hY3Rpb246IGZ1bmN0aW9uKCBhY3Rpb24sIHRhZyApIHtcblx0XHRcdGpRdWVyeS53cG1kYi5yZW1vdmVfaG9vayggJ2FjdGlvbicsIGFjdGlvbiwgdGFnICk7XG5cdFx0fSxcblx0XHRyZW1vdmVfZmlsdGVyOiBmdW5jdGlvbiggYWN0aW9uLCB0YWcgKSB7XG5cdFx0XHRqUXVlcnkud3BtZGIucmVtb3ZlX2hvb2soICdmaWx0ZXInLCBhY3Rpb24sIHRhZyApO1xuXHRcdH0sXG5cdFx0YWRkX2hvb2s6IGZ1bmN0aW9uKCBob29rX3R5cGUsIGFjdGlvbiwgY2FsbGFibGUsIHRhZywgc2VsZiApIHtcblx0XHRcdGlmICggdW5kZWZpbmVkID09PSBqUXVlcnkud3BtZGIuaG9va3NbIGhvb2tfdHlwZSBdWyBhY3Rpb24gXSApIHtcblx0XHRcdFx0alF1ZXJ5LndwbWRiLmhvb2tzWyBob29rX3R5cGUgXVsgYWN0aW9uIF0gPSBbXTtcblx0XHRcdH1cblx0XHRcdHZhciBob29rcyA9IGpRdWVyeS53cG1kYi5ob29rc1sgaG9va190eXBlIF1bIGFjdGlvbiBdO1xuXHRcdFx0aWYgKCB1bmRlZmluZWQgPT09IHRhZyApIHtcblx0XHRcdFx0dGFnID0gYWN0aW9uICsgJ18nICsgaG9va3MubGVuZ3RoO1xuXHRcdFx0fVxuXHRcdFx0alF1ZXJ5LndwbWRiLmhvb2tzWyBob29rX3R5cGUgXVsgYWN0aW9uIF0ucHVzaCggeyB0YWc6IHRhZywgY2FsbGFibGU6IGNhbGxhYmxlLCBpbnN0YW5jZTogc2VsZiB9ICk7XG5cdFx0fSxcblx0XHRkb19ob29rOiBmdW5jdGlvbiggaG9va190eXBlLCBhY3Rpb24sIHZhbHVlLCBhcmdzICkge1xuXHRcdFx0aWYgKCB1bmRlZmluZWQgIT09IGpRdWVyeS53cG1kYi5ob29rc1sgaG9va190eXBlIF1bIGFjdGlvbiBdICkge1xuXHRcdFx0XHR2YXIgaG9va3MgPSBqUXVlcnkud3BtZGIuaG9va3NbIGhvb2tfdHlwZSBdWyBhY3Rpb24gXTtcblx0XHRcdFx0Zm9yICggdmFyIGkgPSAwOyBpIDwgaG9va3MubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCAnYWN0aW9uJyA9PT0gaG9va190eXBlICkge1xuXG5cdFx0XHRcdFx0XHQvLyAuY2FsbCAodmFsdWUgb2YgdGhpcywgYXJnMSwgYXJnMikgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRnVuY3Rpb24vY2FsbFxuXHRcdFx0XHRcdFx0aG9va3NbIGkgXS5jYWxsYWJsZS5jYWxsKCBob29rc1sgaSBdLmluc3RhbmNlLCBhcmdzLCBob29rc1sgaSBdLmluc3RhbmNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHZhbHVlID0gaG9va3NbIGkgXS5jYWxsYWJsZS5jYWxsKCBob29rc1sgaSBdLmluc3RhbmNlLCB2YWx1ZSwgYXJncywgaG9va3NbIGkgXS5pbnN0YW5jZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCAnZmlsdGVyJyA9PT0gaG9va190eXBlICkge1xuXHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRyZW1vdmVfaG9vazogZnVuY3Rpb24oIGhvb2tfdHlwZSwgYWN0aW9uLCB0YWcgKSB7XG5cdFx0XHRpZiAoIHVuZGVmaW5lZCAhPT0galF1ZXJ5LndwbWRiLmhvb2tzWyBob29rX3R5cGUgXVsgYWN0aW9uIF0gKSB7XG5cdFx0XHRcdHZhciBob29rcyA9IGpRdWVyeS53cG1kYi5ob29rc1sgaG9va190eXBlIF1bIGFjdGlvbiBdO1xuXHRcdFx0XHRmb3IgKCB2YXIgaSA9IGhvb2tzLmxlbmd0aCAtIDE7IDAgPCBpOyBpLS0gKSB7XG5cdFx0XHRcdFx0aWYgKCB1bmRlZmluZWQgPT09IHRhZyB8fCB0YWcgPT09IGhvb2tzWyBpIF0udGFnICkge1xuXHRcdFx0XHRcdFx0aG9va3Muc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG59KSggalF1ZXJ5ICk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL2hvb2suanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79\n");

/***/ }),
/* 80 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($, wpmdb) {\n\n\tvar import_selected = false;\n\tvar $import_select = $('#select-tables').clone();\n\tvar tables_to_search = [];\n\tvar tables_to_import = [];\n\tvar unrecognized_import_file = false;\n\tvar import_prefix = '';\n\tvar import_info = {};\n\tvar ajax_spinner = '<img src=\"' + wpmdb.functions.get_spinner_url() + '\" alt=\"\" class=\"ajax-spinner general-spinner\" />';\n\n\t/**\n  * Returns the migration status label for imports\n  *\n  * @param string label\n  * @param object args\n  *\n  * @returns {string}\n  */\n\tfunction import_migration_status_label(label, args) {\n\t\tif ('import' === args.intent) {\n\t\t\tif ('completed' === args.stage) {\n\t\t\t\tlabel = wpmdb_strings.import_label_completed;\n\t\t\t} else {\n\t\t\t\tlabel = wpmdb_strings.import_label_migrating;\n\t\t\t}\n\t\t}\n\n\t\treturn label;\n\t}\n\t$.wpmdb.add_filter('wpmdb_get_migration_status_label', import_migration_status_label);\n\n\t/**\n  * Updates the connection info box for imports\n  *\n  * @param object args\n  */\n\tfunction import_connection_info_box(args) {\n\t\tvar $import_file_status = $('.import-file-status');\n\n\t\tif ('import' === args.migration_type) {\n\n\t\t\tif (!import_selected) {\n\t\t\t\t$('.step-two').hide();\n\n\t\t\t\tif ($import_file_status.hasClass('profile-loaded')) {\n\t\t\t\t\t$import_file_status.attr('class', 'import-file-status profile-loaded notification-message success-notice');\n\t\t\t\t\t$import_file_status.html(wpmdb_strings.import_profile_loaded);\n\t\t\t\t} else {\n\t\t\t\t\t$import_file_status.html(wpmdb_strings.please_select_sql_file);\n\t\t\t\t}\n\n\t\t\t\t$import_file_status.show();\n\t\t\t} else {\n\t\t\t\tif (unrecognized_import_file) {\n\t\t\t\t\t$('.unrecognized-import-file-notice').show();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmaybe_show_find_replace_options();\n\n\t\t\t$('.mst-options').hide();\n\t\t\t$('.import-find-replace-option, .import-active-plugin-option').show();\n\t\t} else {\n\t\t\t$('.find-replace-rows, .table-options, .advanced-options, .exclude-post-types-options, label[for=\"backup-selected\"]').show();\n\t\t\t$('.import-find-replace-option, .find-replace-options, .import-file-status, .import-active-plugin-option, .unrecognized-import-file-notice').hide();\n\n\t\t\tif ('search_all_imported' === $('input[name=table_migrate_option]:checked').val()) {\n\t\t\t\t$('input[name=table_migrate_option][value=migrate_only_with_prefix]').prop('checked', true);\n\t\t\t}\n\t\t}\n\t}\n\t$.wpmdb.add_action('move_connection_info_box', import_connection_info_box);\n\n\t/**\n  * Starts the upload process for the import\n  *\n  * @param stage\n  */\n\tfunction maybe_initiate_import(stage) {\n\t\tif ('import' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\tif ('backup' === stage) {\n\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migrate_table_recursive);\n\t\t\t}\n\n\t\t\twpmdb.common.hooks.push(wpmdb.functions.upload_file_recursive);\n\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\twpmdb.functions.execute_next_step();\n\t\t}\n\t}\n\t$.wpmdb.add_action('wpmdb_migration_initiated', maybe_initiate_import);\n\n\t/**\n  * Restores the import select when changing migration types\n  */\n\tfunction update_import_table_select() {\n\t\t$('#select-tables').remove();\n\t\t$('.select-tables-wrap').prepend($import_select);\n\t\t$('#select-tables').change();\n\t}\n\t$.wpmdb.add_action('wpmdb_update_import_table_select', update_import_table_select);\n\n\t/**\n  * Updates the selected tables for the \"Backup tables that will be replaced during the import\" option\n  *\n  * @param tables_to_backup\n  *\n  * @return array\n  */\n\tfunction backup_selected_for_import(tables_to_backup) {\n\t\tif ('import' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\ttables_to_backup = tables_to_import;\n\t\t}\n\n\t\treturn tables_to_backup;\n\t}\n\t$.wpmdb.add_filter('wpmdb_backup_selected_tables', backup_selected_for_import);\n\n\t/**\n  * Adds the import migration stage\n  *\n  * object args\n  */\n\tfunction add_import_stage(args) {\n\t\tif ('import' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\twpmdb.current_migration.model.addStage('upload', [], 'local', {\n\t\t\t\tstrings: {\n\t\t\t\t\tstage_title: wpmdb_strings.upload\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twpmdb.current_migration.model.addStage('import', [], 'local', {\n\t\t\t\tstrings: {\n\t\t\t\t\tstage_title: wpmdb_strings.migrate_button_import\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif ($('#import-find-replace').is(':checked')) {\n\t\t\t\ttables_to_search = args.tables_to_migrate;\n\t\t\t\twpmdb.current_migration.model.addStage('find_replace', [], 'local', {\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tmigrated: wpmdb_strings.searched,\n\t\t\t\t\t\tstage_title: wpmdb_strings.migrate_button_find_replace\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t$.wpmdb.add_action('wpmdb_add_migration_stages', add_import_stage);\n\n\t/**\n  * Adds any info necessary to begin an import\n  *\n  * @param object request_data\n  *\n  * @return {object}\n  */\n\tfunction initiate_import_request_data(request_data) {\n\t\tif ('import' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\trequest_data.import_info = import_info;\n\t\t}\n\n\t\treturn request_data;\n\t}\n\t$.wpmdb.add_filter('wpmdb_initiate_migration_request_data', initiate_import_request_data);\n\n\t/**\n  * Gets more information about the import file and loads step-two\n  *\n  * @param event\n  */\n\tfunction get_import_info(event) {\n\t\tvar files = event.target.files; // FileList object\n\t\tvar file = files[0];\n\t\tvar reader = new FileReader();\n\t\tvar $import_file_status = $('.import-file-status');\n\t\tvar $backup_selected_option = $('label[for=\"backup-selected\"]');\n\t\tvar $prefix_notice = $('.prefix-notice');\n\t\tvar $unrecognized_file_notice = $('.unrecognized-import-file-notice');\n\t\tvar $step_two = $('.step-two');\n\t\tvar $old_url = $('#old-url');\n\t\tvar $old_path = $('#old-path');\n\t\tvar $new_url = $('#new-url');\n\t\tvar $new_path = $('#new-path');\n\n\t\t$import_file_status.hide().attr('class', 'import-file-status');\n\t\t$prefix_notice.hide();\n\t\t$unrecognized_file_notice.hide();\n\t\t$step_two.hide();\n\t\t$('.mst-required ').hide();\n\n\t\tif (!files.length) {\n\t\t\tif (import_selected) {\n\t\t\t\t$step_two.hide();\n\t\t\t\t$import_file_status.text(wpmdb_strings.please_select_sql_file).show();\n\t\t\t\timport_selected = false;\n\t\t\t}\n\t\t\treturn;\n\t\t} else {\n\n\t\t\tif ('.sql' === file.name.slice(-4) || '.sql.gz' === file.name.slice(-7)) {\n\t\t\t\timport_selected = true;\n\t\t\t} else {\n\t\t\t\t$import_file_status.addClass('notification-message error-notice migration-error').text(wpmdb_strings.invalid_sql_file).show();\n\t\t\t\t$step_two.hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\timport_prefix = '';\n\n\t\t$import_file_status.text(wpmdb_strings.parsing_sql_file).append(ajax_spinner).show();\n\n\t\treader.onloadend = function (event) {\n\t\t\tif (event.target.readyState !== FileReader.DONE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_get_import_info',\n\t\t\t\t\tfile_data: event.target.result,\n\t\t\t\t\tnonce: wpmdb_data.nonces.import_file\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tconsole.log(jqXHR, textStatus, errorThrown);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\t$import_file_status.hide();\n\n\t\t\t\t\tif (true === wpmdb.functions.maybe_show_mst_warning(data)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$step_two.show();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$import_file_status.text(data.body).addClass('notification-message error-notice migration-error').show();\n\t\t\t\t\t\t$step_two.hide();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar localStorage_form_data = wpmdb.functions.get_localStorage_form_data();\n\t\t\t\t\t\timport_info = data;\n\n\t\t\t\t\t\tif ('undefined' !== typeof data.prefix) {\n\t\t\t\t\t\t\timport_prefix = data.prefix;\n\t\t\t\t\t\t\t$('.table-prefix').text(data.prefix);\n\t\t\t\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ('undefined' !== typeof data.tables) {\n\t\t\t\t\t\t\ttables_to_import = data.tables;\n\t\t\t\t\t\t\t$backup_selected_option.show();\n\n\t\t\t\t\t\t\t// Update the find & replace values\n\t\t\t\t\t\t\tif (!localStorage_form_data) {\n\t\t\t\t\t\t\t\t$old_url.val(wpmdb.functions.remove_protocol(data.URL));\n\t\t\t\t\t\t\t\t$old_path.val(data.path);\n\t\t\t\t\t\t\t\t$new_url.val(wpmdb.functions.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t\t\t\t$new_path.val(wpmdb_data.this_path);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Update the select with tables that will be imported\n\t\t\t\t\t\t\tvar loaded_tables = [];\n\t\t\t\t\t\t\tvar loaded_post_types = [];\n\n\t\t\t\t\t\t\tif (localStorage_form_data) {\n\t\t\t\t\t\t\t\tloaded_tables = localStorage_form_data.select_tables;\n\t\t\t\t\t\t\t\tloaded_post_types = localStorage_form_data.select_post_types;\n\t\t\t\t\t\t\t\twpmdb.functions.remove_localStorage_form_data();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif ('migrate_only_with_prefix' === $('input[name=table_migrate_option]:checked').val() && !$import_file_status.hasClass('profile-loaded')) {\n\t\t\t\t\t\t\t\t\t$('input[name=table_migrate_option][value=search_all_imported]').prop('checked', true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (false === wpmdb_default_profile && 'undefined' !== typeof wpmdb_loaded_tables) {\n\t\t\t\t\t\t\t\tloaded_tables = wpmdb_loaded_tables;\n\t\t\t\t\t\t\t\tloaded_post_types = wpmdb_loaded_post_types;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$import_select = wpmdb.functions.create_table_select(data.tables, [], loaded_tables);\n\t\t\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_import_table_select');\n\n\t\t\t\t\t\t\tif ('undefined' !== typeof data.post_types) {\n\t\t\t\t\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$.each(data.post_types, function (index, value) {\n\t\t\t\t\t\t\t\t\tvar selected = $.inArray(value, loaded_post_types);\n\t\t\t\t\t\t\t\t\tif (-1 !== selected || true === wpmdb_convert_exclude_revisions && 'revision' !== value) {\n\t\t\t\t\t\t\t\t\t\tselected = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tselected = false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar opt = document.createElement('option');\n\t\t\t\t\t\t\t\t\topt.value = value;\n\t\t\t\t\t\t\t\t\topt.text = value;\n\t\t\t\t\t\t\t\t\topt.selected = selected;\n\t\t\t\t\t\t\t\t\t$post_type_select.add(opt, null);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t\t\t\t$('.exclude-post-types-warning').after($post_type_select);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (unrecognized_import_file) {\n\t\t\t\t\t\t\t\tunrecognized_import_file = false;\n\t\t\t\t\t\t\t\tmaybe_show_find_replace_options();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$unrecognized_file_notice.show();\n\t\t\t\t\t\t\t$backup_selected_option.hide();\n\t\t\t\t\t\t\t$('.table-options').hide();\n\t\t\t\t\t\t\tunrecognized_import_file = true;\n\n\t\t\t\t\t\t\t$new_url.val($old_url.val());\n\t\t\t\t\t\t\t$new_path.val($old_path.val());\n\t\t\t\t\t\t\t$old_url.val('');\n\t\t\t\t\t\t\t$old_path.val('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tvar blob = file.slice(0, 1024 * 1000);\n\t\treader.readAsDataURL(blob);\n\t}\n\t$('#import-file').on('change', get_import_info);\n\n\t/**\n  * Displays the find and replace options for imports\n  */\n\tfunction maybe_show_find_replace_options() {\n\t\tvar find_replace_rows = $('.find-replace-rows');\n\t\treturn $('#import-find-replace').is(':checked') ? find_replace_rows.show() : find_replace_rows.hide();\n\t}\n\t$('#import-find-replace').on('click', maybe_show_find_replace_options);\n\n\tfunction maybe_show_table_options() {\n\t\tif (!unrecognized_import_file) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(function () {\n\t\t\tif ($('.find-replace-options-toggle .expand-collapse-arrow').hasClass('collapsed')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$('.table-options').hide();\n\t\t}, 1);\n\t}\n\t$('.find-replace-options-toggle').on('click', maybe_show_table_options);\n\n\t/**\n  * Updates both `keep_active_plugins` checkboxes when one is changed.\n  */\n\tfunction update_keep_active_plugins_option() {\n\t\t$('input[name=keep_active_plugins]').prop('checked', $(this).is(':checked'));\n\t}\n\t$('input[name=keep_active_plugins]').on('click', update_keep_active_plugins_option);\n\n\t/**\n  * Recursively upload an import file\n  *\n  * @param int start\n  */\n\twpmdb.functions.upload_file_recursive = function (start) {\n\t\tstart = 'undefined' === typeof start ? 0 : start;\n\n\t\tvar file = document.getElementById('import-file').files[0];\n\t\tvar slice_size = 1000 * 1024; // 1 MB\n\t\tvar next_slice = start + slice_size + 1;\n\t\tvar reader = new FileReader();\n\n\t\tif (0 === start) {\n\t\t\twpmdb.current_migration.model.addStageItem('upload', file.name, file.size / 1000, Math.ceil(file.size / slice_size));\n\t\t}\n\n\t\treader.onloadend = function (event) {\n\t\t\tif (event.target.readyState !== FileReader.DONE) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_upload_file',\n\t\t\t\t\tfile_data: event.target.result,\n\t\t\t\t\tfile: file.name,\n\t\t\t\t\tfile_type: file.type,\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\tstage: 'import',\n\t\t\t\t\timport_info: import_info,\n\t\t\t\t\tnonce: wpmdb_data.nonces.import_file\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tconsole.log(jqXHR, textStatus, errorThrown);\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\twpmdb.current_migration.setText();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data.body, 'error');\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar size_done = start + slice_size;\n\n\t\t\t\t\twpmdb.current_migration.setText(wpmdb_strings.uploading_file_to_server);\n\t\t\t\t\twpmdb.current_migration.model.getStageModel('upload').setItemRowsTransferred(file.name, Math.ceil(size_done / slice_size));\n\n\t\t\t\t\tif (next_slice < file.size) {\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\t\tfn: wpmdb.functions.upload_file_recursive,\n\t\t\t\t\t\t\targs: [next_slice]\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\t\tfn: wpmdb.functions.upload_import_successful,\n\t\t\t\t\t\t\targs: [file]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tvar blob = file.slice(start, next_slice);\n\t\treader.readAsDataURL(blob);\n\t};\n\n\t/**\n  * Prepares the import stage\n  *\n  * @param file\n  */\n\twpmdb.functions.upload_import_successful = function (file) {\n\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: ajaxurl,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_prepare_import_file',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\tnonce: wpmdb_data.nonces.import_file\n\t\t\t},\n\t\t\tdataType: 'json',\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log(jqXHR, textStatus, errorThrown);\n\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t},\n\t\t\tsuccess: function success(response) {\n\t\t\t\tvar item_name = file.name;\n\t\t\t\tvar migration_text = wpmdb_strings.importing_file_to_db;\n\n\t\t\t\tif ('.gz' === item_name.slice(-3)) {\n\t\t\t\t\titem_name = file.name.slice(0, -3);\n\t\t\t\t}\n\n\t\t\t\tmigration_text = migration_text.replace(/\\%s\\s?/, item_name);\n\t\t\t\twpmdb.current_migration.setText(migration_text);\n\n\t\t\t\twpmdb.current_migration.model.addStageItem('import', item_name, response.import_size / 1000, response.num_chunks);\n\t\t\t\twpmdb.current_migration.model.setActiveStage('import');\n\n\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\tfn: wpmdb.functions.import_file_recursive,\n\t\t\t\t\targs: [{\n\t\t\t\t\t\timport_filename: response.import_file,\n\t\t\t\t\t\titem_name: item_name,\n\t\t\t\t\t\tchunk: 0,\n\t\t\t\t\t\tcurrent_query: ''\n\t\t\t\t\t}]\n\t\t\t\t};\n\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n  * Recursively imports chunks to the database\n  *\n  * @param object args\n  */\n\twpmdb.functions.import_file_recursive = function (args) {\n\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: ajaxurl,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_import_file',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\tchunk: args.chunk,\n\t\t\t\tcurrent_query: args.current_query,\n\t\t\t\timport_file: args.import_filename,\n\t\t\t\tnonce: wpmdb_data.nonces.import_file\n\t\t\t},\n\t\t\tdataType: 'json',\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log(jqXHR, textStatus, errorThrown);\n\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t},\n\t\t\tsuccess: function success(response) {\n\t\t\t\tif ('undefined' !== typeof response.wpmdb_error && 1 === response.wpmdb_error) {\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, response.body, 'error');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.model.getStageModel('import').setItemRowsTransferred(args.item_name, response.chunk);\n\n\t\t\t\tif (response.chunk >= response.num_chunks) {\n\n\t\t\t\t\twpmdb.current_migration.model.getStageModel('import').setItemRowsTransferred(args.item_name, ++response.chunk);\n\n\t\t\t\t\tif ($('#import-find-replace').is(':checked')) {\n\n\t\t\t\t\t\tif (unrecognized_import_file) {\n\t\t\t\t\t\t\t$.each(response.table_sizes, function (table, size) {\n\t\t\t\t\t\t\t\tif (table.startsWith(wpmdb_data.this_temp_prefix) && wpmdb_data.alter_table_name !== table) {\n\t\t\t\t\t\t\t\t\tvar table_name = table.replace(wpmdb_data.this_temp_prefix, '');\n\t\t\t\t\t\t\t\t\twpmdb.current_migration.model.addStageItem('find_replace', table_name, response.table_sizes[table], response.table_rows[table]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar table_migrate_option = $('input[name=table_migrate_option]:checked').val();\n\n\t\t\t\t\t\t\tif ('migrate_only_with_prefix' === table_migrate_option) {\n\t\t\t\t\t\t\t\ttables_to_search = tables_to_import.filter(function (table) {\n\t\t\t\t\t\t\t\t\treturn import_prefix === table.substring(0, import_prefix.length);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if ('search_all_imported' === table_migrate_option) {\n\t\t\t\t\t\t\t\ttables_to_search = tables_to_import;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$.each(tables_to_search, function (key, table) {\n\t\t\t\t\t\t\t\tvar imported_table = wpmdb_data.this_temp_prefix + table;\n\t\t\t\t\t\t\t\tif (response.table_sizes.hasOwnProperty(imported_table)) {\n\t\t\t\t\t\t\t\t\twpmdb.current_migration.model.addStageItem('find_replace', table, response.table_sizes[imported_table], response.table_rows[imported_table]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttables_to_search = [];\n\n\t\t\t\t\t\twpmdb.current_migration.model.setActiveStage('find_replace');\n\t\t\t\t\t\tvar tables_to_migrate = wpmdb.functions.get_tables_to_migrate();\n\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\t\tfn: wpmdb.functions.migrate_table_recursive,\n\t\t\t\t\t\t\targs: ['-1', '', tables_to_migrate.length]\n\t\t\t\t\t\t};\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$('.progress-label').removeClass('label-visible');\n\t\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_before_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete);\n\t\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.wpmdb_flush);\n\t\t\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_after_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete_events);\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\tfn: wpmdb.functions.import_file_recursive,\n\t\t\t\t\t\targs: [{\n\t\t\t\t\t\t\timport_filename: args.import_filename,\n\t\t\t\t\t\t\titem_name: args.item_name,\n\t\t\t\t\t\t\tchunk: response.chunk,\n\t\t\t\t\t\t\tcurrent_query: response.current_query\n\t\t\t\t\t\t}]\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\t\t});\n\t};\n\n\twpmdb.functions.get_tables_to_import = function () {\n\t\treturn tables_to_import;\n\t};\n})(jQuery, wpmdb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80\n");

/***/ }),
/* 81 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($, wpmdb) {\n\n\t$(document).ready(function () {\n\n\t\twpmdb.functions.localStorage_available = function () {\n\t\t\ttry {\n\t\t\t\tlocalStorage.setItem('wpmdb_test', 'wpmdb_test');\n\t\t\t\tlocalStorage.removeItem('wpmdb_test', 'wpmdb_test');\n\t\t\t\treturn true;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\twpmdb.functions.maybe_reload_page = function () {\n\t\t\tvar migration_type = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\tif (!wpmdb.functions.localStorage_available() || 'cancelled' === wpmdb.current_migration.status || true === wpmdb.common.migration_error || -1 === $.inArray(migration_type, ['pull', 'import', 'find_replace'])) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ('true' === wpmdb_data.is_multisite && $('#mst-select-subsite').is(':checked') && wpmdb_data.this_domain !== $('#mst-selected-subsite option:selected').text()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tables_to_migrate = wpmdb.functions.get_tables_to_migrate();\n\n\t\t\tif ('import' === migration_type) {\n\t\t\t\ttables_to_migrate = wpmdb.functions.get_tables_to_import();\n\t\t\t}\n\n\t\t\tif (-1 === $.inArray(wpmdb_data.this_prefix + 'options', tables_to_migrate) && -1 === $.inArray(wpmdb_data.this_prefix + 'usermeta', tables_to_migrate)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twpmdb.functions.set_localStorage_form_data();\n\t\t\tlocation.reload();\n\t\t};\n\n\t\twpmdb.functions.set_localStorage_form_data = function () {\n\t\t\tvar data = {};\n\n\t\t\t$.each($('#migrate-form').serializeArray(), function (index, field) {\n\t\t\t\tif ('[]' === field.name.substr(-2)) {\n\t\t\t\t\tvar field_name = field.name.slice(0, -2);\n\t\t\t\t\tif ('undefined' === typeof data[field_name]) {\n\t\t\t\t\t\tdata[field_name] = [];\n\t\t\t\t\t}\n\t\t\t\t\tdata[field_name].push(field.value);\n\t\t\t\t} else {\n\t\t\t\t\tdata[field.name] = field.value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlocalStorage.setItem('wpmdb_migrate_form', JSON.stringify(data));\n\t\t};\n\n\t\twpmdb.functions.get_localStorage_form_data = function () {\n\t\t\tvar form_data = localStorage.getItem('wpmdb_migrate_form');\n\n\t\t\tif (null === form_data) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tform_data = JSON.parse(form_data);\n\t\t\t} catch (err) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn form_data;\n\t\t};\n\n\t\twpmdb.functions.remove_localStorage_form_data = function () {\n\t\t\tlocalStorage.removeItem('wpmdb_migrate_form');\n\t\t};\n\n\t\twpmdb.functions.load_data_from_localStorage = function () {\n\t\t\tvar form_data = wpmdb.functions.get_localStorage_form_data();\n\n\t\t\tif (!form_data) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$.each(form_data, function (name, value) {\n\t\t\t\tvar $input = $('[name=\"' + name + '\"]');\n\t\t\t\tvar input_type = $input.attr('type');\n\n\t\t\t\tif ('action' === name) {\n\t\t\t\t\twpmdb.migration_selection = value;\n\t\t\t\t\t$('#' + value).prop('checked', true);\n\t\t\t\t} else {\n\t\t\t\t\tif ('radio' === input_type) {\n\t\t\t\t\t\t$('[name=\"' + name + '\"][value=\"' + value + '\"]').prop('checked', true);\n\t\t\t\t\t} else if ('checkbox' === input_type) {\n\t\t\t\t\t\t$input.prop('checked', true);\n\n\t\t\t\t\t\tif ($input.parent().hasClass('checkbox-label')) {\n\t\t\t\t\t\t\t$input.parent().next().show();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$input.val(value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('.option-group input[type=radio]').change();\n\t\t\t$('.' + wpmdb.migration_selection + '-list ul').show();\n\n\t\t\t$.when(wpmdb.functions.connection_box_changed()).done(function () {\n\t\t\t\tif ('migrate_select' === $('input[name=table_migrate_option]:checked').val()) {\n\t\t\t\t\tif ('undefined' !== typeof form_data.select_tables) {\n\t\t\t\t\t\t$('#select-tables').val(form_data.select_tables);\n\t\t\t\t\t}\n\n\t\t\t\t\t$('.table-options .expandable-content, .select-tables-wrap').show();\n\t\t\t\t\t$('.table-options .expand-collapse-arrow').removeClass('collapsed');\n\t\t\t\t} else {\n\t\t\t\t\t$('.select-tables-wrap').hide();\n\t\t\t\t}\n\n\t\t\t\tif ('backup_manual_select' === $('input[name=backup_option]:checked').val()) {\n\t\t\t\t\tif ('undefined' !== typeof form_data.select_backup) {\n\t\t\t\t\t\t$('#select-backup').val(form_data.select_backup);\n\t\t\t\t\t}\n\n\t\t\t\t\t$('.backup-tables-wrap').show();\n\t\t\t\t}\n\n\t\t\t\tif ('undefined' !== typeof form_data.select_post_types) {\n\t\t\t\t\t$('#select-post-types').val(form_data.select_post_types);\n\t\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t}\n\n\t\t\t\tif ('undefined' !== typeof form_data.replace_old) {\n\n\t\t\t\t\t$('.replace-row').not('.original-repeatable-field').remove();\n\n\t\t\t\t\tvar n = 1;\n\t\t\t\t\t$.each(form_data.replace_old, function (index, value) {\n\t\t\t\t\t\tif (!$('.replace-row:nth-child(' + n + ')').length) {\n\t\t\t\t\t\t\t$('.replace-row').last().after($('.original-repeatable-field').clone().removeClass('original-repeatable-field'));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('.replace-row:nth-child(' + n + ') [name=\"replace_old[]\"]').val(value);\n\t\t\t\t\t\t$('.replace-row:nth-child(' + n + ') [name=\"replace_new[]\"]').val(form_data.replace_new[index]);\n\t\t\t\t\t\tn++;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twpmdb.functions.update_migrate_button_text();\n\n\t\t\tif ('import' !== wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\twpmdb.functions.remove_localStorage_form_data();\n\t\t\t}\n\t\t};\n\t\twpmdb.functions.load_data_from_localStorage();\n\t});\n})(jQuery, wpmdb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///81\n");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar $ = jQuery;\nvar MigrationProgressModel = __webpack_require__(49);\nvar MigrationProgressView = __webpack_require__(51);\nvar $overlayOriginal = $('<div id=\"overlay\" class=\"hide\"></div>');\nvar $progressContentOriginal = $('.progress-content').clone().addClass('hide');\nvar $proVersion = $('.pro-version').addClass('hide');\n\n$overlayOriginal.append($proVersion);\n\nvar MigrationProgressController = {\n\tmigration: {\n\t\tmodel: {},\n\t\tview: {},\n\t\t$progress: {},\n\t\t$wrapper: {},\n\t\t$overlay: {},\n\t\tstatus: 'active',\n\t\ttitle: '',\n\t\ttext: '',\n\t\ttimerCount: 0,\n\t\telapsedInterval: 0,\n\t\tcurrentStageNum: 0,\n\t\tcounterDisplay: false,\n\t\toriginalTitle: document.title,\n\t\tsetTitle: function setTitle(title) {\n\t\t\tthis.$progress.find('.progress-title').html(title);\n\t\t\tthis.title = title;\n\t\t},\n\t\tsetStatus: function setStatus(status) {\n\t\t\tthis.$progress.removeClass(this.status).addClass('error' === status ? 'wpmdb-error' : status);\n\n\t\t\t// Possible statuses include: 'error', 'paused', 'complete', 'cancelling'\n\t\t\tif ('error' === status) {\n\t\t\t\tthis.$progress.find('.progress-text').addClass('migration-error');\n\t\t\t}\n\n\t\t\tthis.status = status;\n\n\t\t\tthis.updateTitleElem();\n\t\t},\n\t\tsetText: function setText(text) {\n\t\t\tif ('string' !== typeof text) {\n\t\t\t\ttext = '';\n\t\t\t}\n\n\t\t\tif (0 >= text.indexOf('wpmdb_error')) {\n\t\t\t\ttext = this.decodeErrorObject(text);\n\t\t\t}\n\n\t\t\tthis.$progress.find('.progress-text').html(text);\n\t\t\tthis.text = text;\n\t\t},\n\t\tsetState: function setState(title, text, status) {\n\t\t\tif (null !== title) {\n\t\t\t\tthis.setTitle(title);\n\t\t\t}\n\t\t\tif (null !== text) {\n\t\t\t\tthis.setText(text);\n\t\t\t}\n\t\t\tif (null !== status) {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t},\n\t\tstartTimer: function startTimer() {\n\t\t\tthis.timerCount = 0;\n\t\t\tthis.counterDisplay = $('.timer');\n\t\t\tthis.elapsedInterval = setInterval(this.incrementTimer, 1000);\n\t\t},\n\t\tpauseTimer: function pauseTimer() {\n\t\t\tclearInterval(this.elapsedInterval);\n\t\t},\n\t\tresumeTimer: function resumeTimer() {\n\t\t\tthis.elapsedInterval = setInterval(this.incrementTimer, 1000);\n\t\t},\n\t\tincrementTimer: function incrementTimer() {\n\t\t\twpmdb.current_migration.timerCount = wpmdb.current_migration.timerCount + 1;\n\t\t\twpmdb.current_migration.displayCount();\n\t\t},\n\t\tdisplayCount: function displayCount() {\n\t\t\tvar hours = Math.floor(this.timerCount / 3600) % 24;\n\t\t\tvar minutes = Math.floor(this.timerCount / 60) % 60;\n\t\t\tvar seconds = this.timerCount % 60;\n\t\t\tvar display = this.pad(hours, 2, 0) + ':' + this.pad(minutes, 2, 0) + ':' + this.pad(seconds, 2, 0);\n\t\t\tthis.counterDisplay.html(display);\n\t\t},\n\t\tupdateTitleElem: function updateTitleElem() {\n\t\t\tvar activeStage = this.model.get('activeStageName');\n\t\t\tvar stageModel = this.model.getStageModel(activeStage);\n\t\t\tvar percentDone = Math.max(0, stageModel.getTotalProgressPercent());\n\t\t\tvar numStages = this.model.get('stages').length;\n\t\t\tvar currentStage = this.currentStageNum;\n\t\t\tvar currentStatus = this.status;\n\t\t\tvar progressText = wpmdb_strings.title_progress;\n\n\t\t\tif ('complete' === stageModel.get('status') && 0 === stageModel.get('totalSize')) {\n\t\t\t\tpercentDone = 100;\n\t\t\t}\n\n\t\t\tprogressText = progressText.replace('%1$s', percentDone + '%');\n\t\t\tprogressText = progressText.replace('%2$s', currentStage);\n\t\t\tprogressText = progressText.replace('%3$s', numStages);\n\n\t\t\tif (1 === numStages) {\n\t\t\t\tprogressText = percentDone + '%';\n\t\t\t}\n\n\t\t\tif (wpmdb_strings['title_' + currentStatus]) {\n\t\t\t\tprogressText = wpmdb_strings['title_' + currentStatus];\n\t\t\t}\n\n\t\t\tprogressText = progressText + ' - ' + this.originalTitle;\n\n\t\t\tdocument.title = progressText;\n\t\t},\n\t\trestoreTitleElem: function restoreTitleElem() {\n\t\t\tdocument.title = this.originalTitle;\n\t\t},\n\t\tpad: function pad(num, width, padChar) {\n\t\t\tpadChar = padChar || '0';\n\t\t\tnum = num + '';\n\t\t\treturn num.length >= width ? num : new Array(width - num.length + 1).join(padChar) + num;\n\t\t},\n\n\t\t// fixes error objects that have been mangled by html encoding\n\t\tdecodeErrorObject: function decodeErrorObject(input) {\n\t\t\tvar inputDecoded = input.replace(/\\{&quot;/g, '{#q!#').replace(/\\&quot;}/g, '#q!#}').replace(/,&quot;/g, ',#q!#').replace(/&quot;:/g, '#q!#:').replace(/:&quot;/g, ':#q!#').replace(/&quot;/g, '\\\\\"').replace(/#q!#/g, '\"').replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n\t\t\ttry {\n\t\t\t\tinputDecoded = JSON.parse(inputDecoded);\n\t\t\t} catch (e) {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t\treturn 'object' === (typeof inputDecoded === 'undefined' ? 'undefined' : _typeof(inputDecoded)) && 'undefined' !== typeof inputDecoded.body ? inputDecoded : input;\n\t\t},\n\t\tfixProgressStageWidthForScrollBar: function fixProgressStageWidthForScrollBar() {\n\t\t\tvar scrollBarWidth = Math.abs(this.$wrapper[0].offsetWidth - this.$wrapper[0].clientWidth);\n\t\t\tvar visibleProgressItems = this.$wrapper.find('.active .progress-items');\n\t\t\tvar leftPad = parseInt(visibleProgressItems.css('padding-left'), 10);\n\t\t\tvar rightPad = parseInt(visibleProgressItems.css('padding-right'), 10);\n\n\t\t\tif (0 !== scrollBarWidth || 0 === scrollBarWidth && rightPad !== leftPad) {\n\t\t\t\tvisibleProgressItems.css('padding-right', leftPad - scrollBarWidth + 'px');\n\t\t\t}\n\t\t}\n\t},\n\tnewMigration: function newMigration(settings) {\n\t\t$('#overlay').remove();\n\t\t$('.progress-content').remove();\n\t\tthis.migration.$overlay = $overlayOriginal.clone();\n\n\t\t$('#wpwrap').append(this.migration.$overlay);\n\n\t\tthis.migration.model = new MigrationProgressModel(settings);\n\t\tthis.migration.view = new MigrationProgressView({\n\t\t\tmodel: this.migration.model\n\t\t});\n\n\t\tthis.migration.$progress = $progressContentOriginal.clone();\n\t\tthis.migration.$wrapper = this.migration.view.$el;\n\t\tthis.migration.$progress.find('.migration-progress-stages').replaceWith(this.migration.$wrapper);\n\n\t\tthis.migration.$proVersion = this.migration.$overlay.find('.pro-version');\n\t\tvar proVersionIFrame = this.migration.$proVersion.find('iframe').remove().clone();\n\n\t\tthis.migration.$overlay.prepend(this.migration.$progress);\n\n\t\t// timeout needed so class is added after elements are appended to dom and transition runs.\n\t\tvar self = this;\n\t\tsetTimeout(function () {\n\t\t\tself.migration.$overlay.add(self.migration.$progress).add(self.migration.$proVersion).removeClass('hide').addClass('show');\n\t\t\tif (self.migration.$proVersion.length) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tself.migration.$proVersion.find('.iframe').append(proVersionIFrame);\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t}, 0);\n\n\t\tthis.migration.currentStageNum = 0;\n\n\t\tthis.migration.$proVersion.on('click', '.close-pro-version', function () {\n\t\t\tself.migration.$proVersion.find('iframe').remove();\n\t\t\tself.migration.$proVersion.addClass('hide remove');\n\t\t\tsetTimeout(function () {\n\t\t\t\tself.migration.$proVersion.remove();\n\t\t\t}, 500);\n\t\t});\n\n\t\tthis.migration.model.on('migrationComplete', function () {\n\t\t\tself.utils.updateProgTableVisibilitySetting();\n\t\t\tself.utils.updatePauseBeforeFinalizeSetting();\n\t\t\tself.migration.pauseTimer();\n\t\t});\n\n\t\t$(window).on('resize', _.debounce(this.migration.fixProgressStageWidthForScrollBar.bind(this.migration), 100));\n\t\tthis.migration.model.on('change:activeStage', this.migration.fixProgressStageWidthForScrollBar.bind(this.migration));\n\n\t\treturn this.migration;\n\t},\n\tutils: __webpack_require__(53)\n};\n\nmodule.exports = MigrationProgressController;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtY29udHJvbGxlci5qcz81NjJmIl0sIm5hbWVzIjpbIiQiLCJqUXVlcnkiLCJNaWdyYXRpb25Qcm9ncmVzc01vZGVsIiwicmVxdWlyZSIsIk1pZ3JhdGlvblByb2dyZXNzVmlldyIsIiRvdmVybGF5T3JpZ2luYWwiLCIkcHJvZ3Jlc3NDb250ZW50T3JpZ2luYWwiLCJjbG9uZSIsImFkZENsYXNzIiwiJHByb1ZlcnNpb24iLCJhcHBlbmQiLCJNaWdyYXRpb25Qcm9ncmVzc0NvbnRyb2xsZXIiLCJtaWdyYXRpb24iLCJtb2RlbCIsInZpZXciLCIkcHJvZ3Jlc3MiLCIkd3JhcHBlciIsIiRvdmVybGF5Iiwic3RhdHVzIiwidGl0bGUiLCJ0ZXh0IiwidGltZXJDb3VudCIsImVsYXBzZWRJbnRlcnZhbCIsImN1cnJlbnRTdGFnZU51bSIsImNvdW50ZXJEaXNwbGF5Iiwib3JpZ2luYWxUaXRsZSIsImRvY3VtZW50Iiwic2V0VGl0bGUiLCJmaW5kIiwiaHRtbCIsInNldFN0YXR1cyIsInJlbW92ZUNsYXNzIiwidXBkYXRlVGl0bGVFbGVtIiwic2V0VGV4dCIsImluZGV4T2YiLCJkZWNvZGVFcnJvck9iamVjdCIsInNldFN0YXRlIiwic3RhcnRUaW1lciIsInNldEludGVydmFsIiwiaW5jcmVtZW50VGltZXIiLCJwYXVzZVRpbWVyIiwiY2xlYXJJbnRlcnZhbCIsInJlc3VtZVRpbWVyIiwid3BtZGIiLCJjdXJyZW50X21pZ3JhdGlvbiIsImRpc3BsYXlDb3VudCIsImhvdXJzIiwiTWF0aCIsImZsb29yIiwibWludXRlcyIsInNlY29uZHMiLCJkaXNwbGF5IiwicGFkIiwiYWN0aXZlU3RhZ2UiLCJnZXQiLCJzdGFnZU1vZGVsIiwiZ2V0U3RhZ2VNb2RlbCIsInBlcmNlbnREb25lIiwibWF4IiwiZ2V0VG90YWxQcm9ncmVzc1BlcmNlbnQiLCJudW1TdGFnZXMiLCJsZW5ndGgiLCJjdXJyZW50U3RhZ2UiLCJjdXJyZW50U3RhdHVzIiwicHJvZ3Jlc3NUZXh0Iiwid3BtZGJfc3RyaW5ncyIsInRpdGxlX3Byb2dyZXNzIiwicmVwbGFjZSIsInJlc3RvcmVUaXRsZUVsZW0iLCJudW0iLCJ3aWR0aCIsInBhZENoYXIiLCJBcnJheSIsImpvaW4iLCJpbnB1dCIsImlucHV0RGVjb2RlZCIsIkpTT04iLCJwYXJzZSIsImUiLCJib2R5IiwiZml4UHJvZ3Jlc3NTdGFnZVdpZHRoRm9yU2Nyb2xsQmFyIiwic2Nyb2xsQmFyV2lkdGgiLCJhYnMiLCJvZmZzZXRXaWR0aCIsImNsaWVudFdpZHRoIiwidmlzaWJsZVByb2dyZXNzSXRlbXMiLCJsZWZ0UGFkIiwicGFyc2VJbnQiLCJjc3MiLCJyaWdodFBhZCIsIm5ld01pZ3JhdGlvbiIsInNldHRpbmdzIiwicmVtb3ZlIiwiJGVsIiwicmVwbGFjZVdpdGgiLCJwcm9WZXJzaW9uSUZyYW1lIiwicHJlcGVuZCIsInNlbGYiLCJzZXRUaW1lb3V0IiwiYWRkIiwib24iLCJ1dGlscyIsInVwZGF0ZVByb2dUYWJsZVZpc2liaWxpdHlTZXR0aW5nIiwidXBkYXRlUGF1c2VCZWZvcmVGaW5hbGl6ZVNldHRpbmciLCJ3aW5kb3ciLCJfIiwiZGVib3VuY2UiLCJiaW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUlBLElBQUlDLE1BQVI7QUFDQSxJQUFJQyx5QkFBeUIsbUJBQUFDLENBQVMsRUFBVCxDQUE3QjtBQUNBLElBQUlDLHdCQUF3QixtQkFBQUQsQ0FBUyxFQUFULENBQTVCO0FBQ0EsSUFBSUUsbUJBQW1CTCxFQUFHLHVDQUFILENBQXZCO0FBQ0EsSUFBSU0sMkJBQTJCTixFQUFHLG1CQUFILEVBQXlCTyxLQUF6QixHQUFpQ0MsUUFBakMsQ0FBMkMsTUFBM0MsQ0FBL0I7QUFDQSxJQUFJQyxjQUFjVCxFQUFHLGNBQUgsRUFBb0JRLFFBQXBCLENBQThCLE1BQTlCLENBQWxCOztBQUVBSCxpQkFBaUJLLE1BQWpCLENBQXlCRCxXQUF6Qjs7QUFFQSxJQUFJRSw4QkFBOEI7QUFDakNDLFlBQVc7QUFDVkMsU0FBTyxFQURHO0FBRVZDLFFBQU0sRUFGSTtBQUdWQyxhQUFXLEVBSEQ7QUFJVkMsWUFBVSxFQUpBO0FBS1ZDLFlBQVUsRUFMQTtBQU1WQyxVQUFRLFFBTkU7QUFPVkMsU0FBTyxFQVBHO0FBUVZDLFFBQU0sRUFSSTtBQVNWQyxjQUFZLENBVEY7QUFVVkMsbUJBQWlCLENBVlA7QUFXVkMsbUJBQWlCLENBWFA7QUFZVkMsa0JBQWdCLEtBWk47QUFhVkMsaUJBQWVDLFNBQVNQLEtBYmQ7QUFjVlEsWUFBVSxrQkFBVVIsS0FBVixFQUFrQjtBQUMzQixRQUFLSixTQUFMLENBQWVhLElBQWYsQ0FBcUIsaUJBQXJCLEVBQXlDQyxJQUF6QyxDQUErQ1YsS0FBL0M7QUFDQSxRQUFLQSxLQUFMLEdBQWFBLEtBQWI7QUFDQSxHQWpCUztBQWtCVlcsYUFBVyxtQkFBVVosTUFBVixFQUFtQjtBQUM3QixRQUFLSCxTQUFMLENBQ0VnQixXQURGLENBQ2UsS0FBS2IsTUFEcEIsRUFFRVYsUUFGRixDQUVjLFlBQVlVLE1BQWQsR0FBeUIsYUFBekIsR0FBeUNBLE1BRnJEOztBQUlBO0FBQ0EsT0FBSyxZQUFZQSxNQUFqQixFQUEwQjtBQUN6QixTQUFLSCxTQUFMLENBQWVhLElBQWYsQ0FBcUIsZ0JBQXJCLEVBQXdDcEIsUUFBeEMsQ0FBa0QsaUJBQWxEO0FBQ0E7O0FBRUQsUUFBS1UsTUFBTCxHQUFjQSxNQUFkOztBQUVBLFFBQUtjLGVBQUw7QUFDQSxHQS9CUztBQWdDVkMsV0FBUyxpQkFBVWIsSUFBVixFQUFpQjtBQUN6QixPQUFLLGFBQWEsT0FBT0EsSUFBekIsRUFBZ0M7QUFDL0JBLFdBQU8sRUFBUDtBQUNBOztBQUVELE9BQUssS0FBS0EsS0FBS2MsT0FBTCxDQUFjLGFBQWQsQ0FBVixFQUEwQztBQUN6Q2QsV0FBTyxLQUFLZSxpQkFBTCxDQUF3QmYsSUFBeEIsQ0FBUDtBQUNBOztBQUVELFFBQUtMLFNBQUwsQ0FBZWEsSUFBZixDQUFxQixnQkFBckIsRUFBd0NDLElBQXhDLENBQThDVCxJQUE5QztBQUNBLFFBQUtBLElBQUwsR0FBWUEsSUFBWjtBQUNBLEdBM0NTO0FBNENWZ0IsWUFBVSxrQkFBVWpCLEtBQVYsRUFBaUJDLElBQWpCLEVBQXVCRixNQUF2QixFQUFnQztBQUN6QyxPQUFLLFNBQVNDLEtBQWQsRUFBc0I7QUFDckIsU0FBS1EsUUFBTCxDQUFlUixLQUFmO0FBQ0E7QUFDRCxPQUFLLFNBQVNDLElBQWQsRUFBcUI7QUFDcEIsU0FBS2EsT0FBTCxDQUFjYixJQUFkO0FBQ0E7QUFDRCxPQUFLLFNBQVNGLE1BQWQsRUFBdUI7QUFDdEIsU0FBS1ksU0FBTCxDQUFnQlosTUFBaEI7QUFDQTtBQUNELEdBdERTO0FBdURWbUIsY0FBWSxzQkFBVztBQUN0QixRQUFLaEIsVUFBTCxHQUFrQixDQUFsQjtBQUNBLFFBQUtHLGNBQUwsR0FBc0J4QixFQUFHLFFBQUgsQ0FBdEI7QUFDQSxRQUFLc0IsZUFBTCxHQUF1QmdCLFlBQWEsS0FBS0MsY0FBbEIsRUFBa0MsSUFBbEMsQ0FBdkI7QUFDQSxHQTNEUztBQTREVkMsY0FBWSxzQkFBVztBQUN0QkMsaUJBQWUsS0FBS25CLGVBQXBCO0FBQ0EsR0E5RFM7QUErRFZvQixlQUFhLHVCQUFXO0FBQ3ZCLFFBQUtwQixlQUFMLEdBQXVCZ0IsWUFBYSxLQUFLQyxjQUFsQixFQUFrQyxJQUFsQyxDQUF2QjtBQUNBLEdBakVTO0FBa0VWQSxrQkFBZ0IsMEJBQVc7QUFDMUJJLFNBQU1DLGlCQUFOLENBQXdCdkIsVUFBeEIsR0FBcUNzQixNQUFNQyxpQkFBTixDQUF3QnZCLFVBQXhCLEdBQXFDLENBQTFFO0FBQ0FzQixTQUFNQyxpQkFBTixDQUF3QkMsWUFBeEI7QUFDQSxHQXJFUztBQXNFVkEsZ0JBQWMsd0JBQVc7QUFDeEIsT0FBSUMsUUFBUUMsS0FBS0MsS0FBTCxDQUFZLEtBQUszQixVQUFMLEdBQWtCLElBQTlCLElBQXVDLEVBQW5EO0FBQ0EsT0FBSTRCLFVBQVVGLEtBQUtDLEtBQUwsQ0FBWSxLQUFLM0IsVUFBTCxHQUFrQixFQUE5QixJQUFxQyxFQUFuRDtBQUNBLE9BQUk2QixVQUFVLEtBQUs3QixVQUFMLEdBQWtCLEVBQWhDO0FBQ0EsT0FBSThCLFVBQVUsS0FBS0MsR0FBTCxDQUFVTixLQUFWLEVBQWlCLENBQWpCLEVBQW9CLENBQXBCLElBQTBCLEdBQTFCLEdBQWdDLEtBQUtNLEdBQUwsQ0FBVUgsT0FBVixFQUFtQixDQUFuQixFQUFzQixDQUF0QixDQUFoQyxHQUE0RCxHQUE1RCxHQUFrRSxLQUFLRyxHQUFMLENBQVVGLE9BQVYsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsQ0FBaEY7QUFDQSxRQUFLMUIsY0FBTCxDQUFvQkssSUFBcEIsQ0FBMEJzQixPQUExQjtBQUNBLEdBNUVTO0FBNkVWbkIsbUJBQWlCLDJCQUFXO0FBQzNCLE9BQUlxQixjQUFjLEtBQUt4QyxLQUFMLENBQVd5QyxHQUFYLENBQWdCLGlCQUFoQixDQUFsQjtBQUNBLE9BQUlDLGFBQWEsS0FBSzFDLEtBQUwsQ0FBVzJDLGFBQVgsQ0FBMEJILFdBQTFCLENBQWpCO0FBQ0EsT0FBSUksY0FBY1YsS0FBS1csR0FBTCxDQUFVLENBQVYsRUFBYUgsV0FBV0ksdUJBQVgsRUFBYixDQUFsQjtBQUNBLE9BQUlDLFlBQVksS0FBSy9DLEtBQUwsQ0FBV3lDLEdBQVgsQ0FBZ0IsUUFBaEIsRUFBMkJPLE1BQTNDO0FBQ0EsT0FBSUMsZUFBZSxLQUFLdkMsZUFBeEI7QUFDQSxPQUFJd0MsZ0JBQWdCLEtBQUs3QyxNQUF6QjtBQUNBLE9BQUk4QyxlQUFlQyxjQUFjQyxjQUFqQzs7QUFFQSxPQUFLLGVBQWVYLFdBQVdELEdBQVgsQ0FBZ0IsUUFBaEIsQ0FBZixJQUE2QyxNQUFNQyxXQUFXRCxHQUFYLENBQWdCLFdBQWhCLENBQXhELEVBQXdGO0FBQ3ZGRyxrQkFBYyxHQUFkO0FBQ0E7O0FBRURPLGtCQUFlQSxhQUFhRyxPQUFiLENBQXNCLE1BQXRCLEVBQThCVixjQUFjLEdBQTVDLENBQWY7QUFDQU8sa0JBQWVBLGFBQWFHLE9BQWIsQ0FBc0IsTUFBdEIsRUFBOEJMLFlBQTlCLENBQWY7QUFDQUUsa0JBQWVBLGFBQWFHLE9BQWIsQ0FBc0IsTUFBdEIsRUFBOEJQLFNBQTlCLENBQWY7O0FBRUEsT0FBSyxNQUFNQSxTQUFYLEVBQXVCO0FBQ3RCSSxtQkFBZVAsY0FBYyxHQUE3QjtBQUNBOztBQUVELE9BQUtRLGNBQWUsV0FBV0YsYUFBMUIsQ0FBTCxFQUFpRDtBQUNoREMsbUJBQWVDLGNBQWUsV0FBV0YsYUFBMUIsQ0FBZjtBQUNBOztBQUVEQyxrQkFBZUEsZUFBZSxLQUFmLEdBQXVCLEtBQUt2QyxhQUEzQzs7QUFFQUMsWUFBU1AsS0FBVCxHQUFpQjZDLFlBQWpCO0FBQ0EsR0F6R1M7QUEwR1ZJLG9CQUFrQiw0QkFBVztBQUM1QjFDLFlBQVNQLEtBQVQsR0FBaUIsS0FBS00sYUFBdEI7QUFDQSxHQTVHUztBQTZHVjJCLE9BQUssYUFBVWlCLEdBQVYsRUFBZUMsS0FBZixFQUFzQkMsT0FBdEIsRUFBZ0M7QUFDcENBLGFBQVVBLFdBQVcsR0FBckI7QUFDQUYsU0FBTUEsTUFBTSxFQUFaO0FBQ0EsVUFBT0EsSUFBSVIsTUFBSixJQUFjUyxLQUFkLEdBQXNCRCxHQUF0QixHQUE0QixJQUFJRyxLQUFKLENBQVdGLFFBQVFELElBQUlSLE1BQVosR0FBcUIsQ0FBaEMsRUFBb0NZLElBQXBDLENBQTBDRixPQUExQyxJQUFzREYsR0FBekY7QUFDQSxHQWpIUzs7QUFtSFY7QUFDQWxDLHFCQUFtQiwyQkFBVXVDLEtBQVYsRUFBa0I7QUFDcEMsT0FBSUMsZUFBZUQsTUFDakJQLE9BRGlCLENBQ1IsV0FEUSxFQUNLLE9BREwsRUFFakJBLE9BRmlCLENBRVIsV0FGUSxFQUVLLE9BRkwsRUFHakJBLE9BSGlCLENBR1IsVUFIUSxFQUdJLE9BSEosRUFJakJBLE9BSmlCLENBSVIsVUFKUSxFQUlJLE9BSkosRUFLakJBLE9BTGlCLENBS1IsVUFMUSxFQUtJLE9BTEosRUFNakJBLE9BTmlCLENBTVIsU0FOUSxFQU1HLEtBTkgsRUFPakJBLE9BUGlCLENBT1IsT0FQUSxFQU9DLEdBUEQsRUFRakJBLE9BUmlCLENBUVIsT0FSUSxFQVFDLEdBUkQsRUFTakJBLE9BVGlCLENBU1IsT0FUUSxFQVNDLEdBVEQsQ0FBbkI7QUFVQSxPQUFJO0FBQ0hRLG1CQUFlQyxLQUFLQyxLQUFMLENBQVlGLFlBQVosQ0FBZjtBQUNBLElBRkQsQ0FFRSxPQUFRRyxDQUFSLEVBQVk7QUFDYixXQUFPSixLQUFQO0FBQ0E7QUFDRCxVQUFTLHFCQUFvQkMsWUFBcEIseUNBQW9CQSxZQUFwQixNQUFvQyxnQkFBZ0IsT0FBT0EsYUFBYUksSUFBMUUsR0FBbUZKLFlBQW5GLEdBQWtHRCxLQUF6RztBQUNBLEdBcklTO0FBc0lWTSxxQ0FBbUMsNkNBQVc7QUFDN0MsT0FBSUMsaUJBQWlCbEMsS0FBS21DLEdBQUwsQ0FBVSxLQUFLbEUsUUFBTCxDQUFjLENBQWQsRUFBaUJtRSxXQUFqQixHQUErQixLQUFLbkUsUUFBTCxDQUFjLENBQWQsRUFBaUJvRSxXQUExRCxDQUFyQjtBQUNBLE9BQUlDLHVCQUF1QixLQUFLckUsUUFBTCxDQUFjWSxJQUFkLENBQW9CLHlCQUFwQixDQUEzQjtBQUNBLE9BQUkwRCxVQUFVQyxTQUFVRixxQkFBcUJHLEdBQXJCLENBQTBCLGNBQTFCLENBQVYsRUFBc0QsRUFBdEQsQ0FBZDtBQUNBLE9BQUlDLFdBQVdGLFNBQVVGLHFCQUFxQkcsR0FBckIsQ0FBMEIsZUFBMUIsQ0FBVixFQUF1RCxFQUF2RCxDQUFmOztBQUVBLE9BQUssTUFBTVAsY0FBTixJQUEyQixNQUFNQSxjQUFOLElBQXdCUSxhQUFhSCxPQUFyRSxFQUFpRjtBQUNoRkQseUJBQXFCRyxHQUFyQixDQUEwQixlQUExQixFQUEyQ0YsVUFBVUwsY0FBVixHQUEyQixJQUF0RTtBQUNBO0FBQ0Q7QUEvSVMsRUFEc0I7QUFrSmpDUyxlQUFjLHNCQUFVQyxRQUFWLEVBQXFCO0FBQ2xDM0YsSUFBRyxVQUFILEVBQWdCNEYsTUFBaEI7QUFDQTVGLElBQUcsbUJBQUgsRUFBeUI0RixNQUF6QjtBQUNBLE9BQUtoRixTQUFMLENBQWVLLFFBQWYsR0FBMEJaLGlCQUFpQkUsS0FBakIsRUFBMUI7O0FBRUFQLElBQUcsU0FBSCxFQUFlVSxNQUFmLENBQXVCLEtBQUtFLFNBQUwsQ0FBZUssUUFBdEM7O0FBRUEsT0FBS0wsU0FBTCxDQUFlQyxLQUFmLEdBQXVCLElBQUlYLHNCQUFKLENBQTRCeUYsUUFBNUIsQ0FBdkI7QUFDQSxPQUFLL0UsU0FBTCxDQUFlRSxJQUFmLEdBQXNCLElBQUlWLHFCQUFKLENBQTJCO0FBQ2hEUyxVQUFPLEtBQUtELFNBQUwsQ0FBZUM7QUFEMEIsR0FBM0IsQ0FBdEI7O0FBSUEsT0FBS0QsU0FBTCxDQUFlRyxTQUFmLEdBQTJCVCx5QkFBeUJDLEtBQXpCLEVBQTNCO0FBQ0EsT0FBS0ssU0FBTCxDQUFlSSxRQUFmLEdBQTBCLEtBQUtKLFNBQUwsQ0FBZUUsSUFBZixDQUFvQitFLEdBQTlDO0FBQ0EsT0FBS2pGLFNBQUwsQ0FBZUcsU0FBZixDQUF5QmEsSUFBekIsQ0FBK0IsNEJBQS9CLEVBQThEa0UsV0FBOUQsQ0FBMkUsS0FBS2xGLFNBQUwsQ0FBZUksUUFBMUY7O0FBRUEsT0FBS0osU0FBTCxDQUFlSCxXQUFmLEdBQTZCLEtBQUtHLFNBQUwsQ0FBZUssUUFBZixDQUF3QlcsSUFBeEIsQ0FBOEIsY0FBOUIsQ0FBN0I7QUFDQSxNQUFJbUUsbUJBQW1CLEtBQUtuRixTQUFMLENBQWVILFdBQWYsQ0FBMkJtQixJQUEzQixDQUFpQyxRQUFqQyxFQUE0Q2dFLE1BQTVDLEdBQXFEckYsS0FBckQsRUFBdkI7O0FBRUEsT0FBS0ssU0FBTCxDQUFlSyxRQUFmLENBQXdCK0UsT0FBeEIsQ0FBaUMsS0FBS3BGLFNBQUwsQ0FBZUcsU0FBaEQ7O0FBRUE7QUFDQSxNQUFJa0YsT0FBTyxJQUFYO0FBQ0FDLGFBQVksWUFBVztBQUN0QkQsUUFBS3JGLFNBQUwsQ0FBZUssUUFBZixDQUF3QmtGLEdBQXhCLENBQTZCRixLQUFLckYsU0FBTCxDQUFlRyxTQUE1QyxFQUF3RG9GLEdBQXhELENBQTZERixLQUFLckYsU0FBTCxDQUFlSCxXQUE1RSxFQUEwRnNCLFdBQTFGLENBQXVHLE1BQXZHLEVBQWdIdkIsUUFBaEgsQ0FBMEgsTUFBMUg7QUFDQSxPQUFLeUYsS0FBS3JGLFNBQUwsQ0FBZUgsV0FBZixDQUEyQm9ELE1BQWhDLEVBQXlDO0FBQ3hDcUMsZUFBWSxZQUFXO0FBQ3RCRCxVQUFLckYsU0FBTCxDQUFlSCxXQUFmLENBQTJCbUIsSUFBM0IsQ0FBaUMsU0FBakMsRUFBNkNsQixNQUE3QyxDQUFxRHFGLGdCQUFyRDtBQUNBLEtBRkQsRUFFRyxHQUZIO0FBR0E7QUFDRCxHQVBELEVBT0csQ0FQSDs7QUFTQSxPQUFLbkYsU0FBTCxDQUFlVyxlQUFmLEdBQWlDLENBQWpDOztBQUVBLE9BQUtYLFNBQUwsQ0FBZUgsV0FBZixDQUEyQjJGLEVBQTNCLENBQStCLE9BQS9CLEVBQXdDLG9CQUF4QyxFQUE4RCxZQUFXO0FBQ3hFSCxRQUFLckYsU0FBTCxDQUFlSCxXQUFmLENBQTJCbUIsSUFBM0IsQ0FBaUMsUUFBakMsRUFBNENnRSxNQUE1QztBQUNBSyxRQUFLckYsU0FBTCxDQUFlSCxXQUFmLENBQTJCRCxRQUEzQixDQUFxQyxhQUFyQztBQUNBMEYsY0FBWSxZQUFXO0FBQ3RCRCxTQUFLckYsU0FBTCxDQUFlSCxXQUFmLENBQTJCbUYsTUFBM0I7QUFDQSxJQUZELEVBRUcsR0FGSDtBQUdBLEdBTkQ7O0FBUUEsT0FBS2hGLFNBQUwsQ0FBZUMsS0FBZixDQUFxQnVGLEVBQXJCLENBQXlCLG1CQUF6QixFQUE4QyxZQUFXO0FBQ3hESCxRQUFLSSxLQUFMLENBQVdDLGdDQUFYO0FBQ0FMLFFBQUtJLEtBQUwsQ0FBV0UsZ0NBQVg7QUFDQU4sUUFBS3JGLFNBQUwsQ0FBZTRCLFVBQWY7QUFDQSxHQUpEOztBQU1BeEMsSUFBR3dHLE1BQUgsRUFBWUosRUFBWixDQUFnQixRQUFoQixFQUEwQkssRUFBRUMsUUFBRixDQUFZLEtBQUs5RixTQUFMLENBQWVvRSxpQ0FBZixDQUFpRDJCLElBQWpELENBQXVELEtBQUsvRixTQUE1RCxDQUFaLEVBQXFGLEdBQXJGLENBQTFCO0FBQ0EsT0FBS0EsU0FBTCxDQUFlQyxLQUFmLENBQXFCdUYsRUFBckIsQ0FBeUIsb0JBQXpCLEVBQStDLEtBQUt4RixTQUFMLENBQWVvRSxpQ0FBZixDQUFpRDJCLElBQWpELENBQXVELEtBQUsvRixTQUE1RCxDQUEvQzs7QUFFQSxTQUFPLEtBQUtBLFNBQVo7QUFDQSxFQXRNZ0M7QUF1TWpDeUYsUUFBTyxtQkFBQWxHLENBQVMsRUFBVDtBQXZNMEIsQ0FBbEM7O0FBME1BeUcsT0FBT0MsT0FBUCxHQUFpQmxHLDJCQUFqQixDIiwiZmlsZSI6IjgyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyICQgPSBqUXVlcnk7XG52YXIgTWlncmF0aW9uUHJvZ3Jlc3NNb2RlbCA9IHJlcXVpcmUoICcuL01pZ3JhdGlvblByb2dyZXNzLW1vZGVsJyApO1xudmFyIE1pZ3JhdGlvblByb2dyZXNzVmlldyA9IHJlcXVpcmUoICcuL01pZ3JhdGlvblByb2dyZXNzLXZpZXcnICk7XG52YXIgJG92ZXJsYXlPcmlnaW5hbCA9ICQoICc8ZGl2IGlkPVwib3ZlcmxheVwiIGNsYXNzPVwiaGlkZVwiPjwvZGl2PicgKTtcbnZhciAkcHJvZ3Jlc3NDb250ZW50T3JpZ2luYWwgPSAkKCAnLnByb2dyZXNzLWNvbnRlbnQnICkuY2xvbmUoKS5hZGRDbGFzcyggJ2hpZGUnICk7XG52YXIgJHByb1ZlcnNpb24gPSAkKCAnLnByby12ZXJzaW9uJyApLmFkZENsYXNzKCAnaGlkZScgKTtcblxuJG92ZXJsYXlPcmlnaW5hbC5hcHBlbmQoICRwcm9WZXJzaW9uICk7XG5cbnZhciBNaWdyYXRpb25Qcm9ncmVzc0NvbnRyb2xsZXIgPSB7XG5cdG1pZ3JhdGlvbjoge1xuXHRcdG1vZGVsOiB7fSxcblx0XHR2aWV3OiB7fSxcblx0XHQkcHJvZ3Jlc3M6IHt9LFxuXHRcdCR3cmFwcGVyOiB7fSxcblx0XHQkb3ZlcmxheToge30sXG5cdFx0c3RhdHVzOiAnYWN0aXZlJyxcblx0XHR0aXRsZTogJycsXG5cdFx0dGV4dDogJycsXG5cdFx0dGltZXJDb3VudDogMCxcblx0XHRlbGFwc2VkSW50ZXJ2YWw6IDAsXG5cdFx0Y3VycmVudFN0YWdlTnVtOiAwLFxuXHRcdGNvdW50ZXJEaXNwbGF5OiBmYWxzZSxcblx0XHRvcmlnaW5hbFRpdGxlOiBkb2N1bWVudC50aXRsZSxcblx0XHRzZXRUaXRsZTogZnVuY3Rpb24oIHRpdGxlICkge1xuXHRcdFx0dGhpcy4kcHJvZ3Jlc3MuZmluZCggJy5wcm9ncmVzcy10aXRsZScgKS5odG1sKCB0aXRsZSApO1xuXHRcdFx0dGhpcy50aXRsZSA9IHRpdGxlO1xuXHRcdH0sXG5cdFx0c2V0U3RhdHVzOiBmdW5jdGlvbiggc3RhdHVzICkge1xuXHRcdFx0dGhpcy4kcHJvZ3Jlc3Ncblx0XHRcdFx0LnJlbW92ZUNsYXNzKCB0aGlzLnN0YXR1cyApXG5cdFx0XHRcdC5hZGRDbGFzcyggKCAnZXJyb3InID09PSBzdGF0dXMgKSA/ICd3cG1kYi1lcnJvcicgOiBzdGF0dXMgKTtcblxuXHRcdFx0Ly8gUG9zc2libGUgc3RhdHVzZXMgaW5jbHVkZTogJ2Vycm9yJywgJ3BhdXNlZCcsICdjb21wbGV0ZScsICdjYW5jZWxsaW5nJ1xuXHRcdFx0aWYgKCAnZXJyb3InID09PSBzdGF0dXMgKSB7XG5cdFx0XHRcdHRoaXMuJHByb2dyZXNzLmZpbmQoICcucHJvZ3Jlc3MtdGV4dCcgKS5hZGRDbGFzcyggJ21pZ3JhdGlvbi1lcnJvcicgKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5zdGF0dXMgPSBzdGF0dXM7XG5cblx0XHRcdHRoaXMudXBkYXRlVGl0bGVFbGVtKCk7XG5cdFx0fSxcblx0XHRzZXRUZXh0OiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdGlmICggJ3N0cmluZycgIT09IHR5cGVvZiB0ZXh0ICkge1xuXHRcdFx0XHR0ZXh0ID0gJyc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggMCA+PSB0ZXh0LmluZGV4T2YoICd3cG1kYl9lcnJvcicgKSApIHtcblx0XHRcdFx0dGV4dCA9IHRoaXMuZGVjb2RlRXJyb3JPYmplY3QoIHRleHQgKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy4kcHJvZ3Jlc3MuZmluZCggJy5wcm9ncmVzcy10ZXh0JyApLmh0bWwoIHRleHQgKTtcblx0XHRcdHRoaXMudGV4dCA9IHRleHQ7XG5cdFx0fSxcblx0XHRzZXRTdGF0ZTogZnVuY3Rpb24oIHRpdGxlLCB0ZXh0LCBzdGF0dXMgKSB7XG5cdFx0XHRpZiAoIG51bGwgIT09IHRpdGxlICkge1xuXHRcdFx0XHR0aGlzLnNldFRpdGxlKCB0aXRsZSApO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBudWxsICE9PSB0ZXh0ICkge1xuXHRcdFx0XHR0aGlzLnNldFRleHQoIHRleHQgKTtcblx0XHRcdH1cblx0XHRcdGlmICggbnVsbCAhPT0gc3RhdHVzICkge1xuXHRcdFx0XHR0aGlzLnNldFN0YXR1cyggc3RhdHVzICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzdGFydFRpbWVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMudGltZXJDb3VudCA9IDA7XG5cdFx0XHR0aGlzLmNvdW50ZXJEaXNwbGF5ID0gJCggJy50aW1lcicgKTtcblx0XHRcdHRoaXMuZWxhcHNlZEludGVydmFsID0gc2V0SW50ZXJ2YWwoIHRoaXMuaW5jcmVtZW50VGltZXIsIDEwMDAgKTtcblx0XHR9LFxuXHRcdHBhdXNlVGltZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y2xlYXJJbnRlcnZhbCggdGhpcy5lbGFwc2VkSW50ZXJ2YWwgKTtcblx0XHR9LFxuXHRcdHJlc3VtZVRpbWVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuZWxhcHNlZEludGVydmFsID0gc2V0SW50ZXJ2YWwoIHRoaXMuaW5jcmVtZW50VGltZXIsIDEwMDAgKTtcblx0XHR9LFxuXHRcdGluY3JlbWVudFRpbWVyOiBmdW5jdGlvbigpIHtcblx0XHRcdHdwbWRiLmN1cnJlbnRfbWlncmF0aW9uLnRpbWVyQ291bnQgPSB3cG1kYi5jdXJyZW50X21pZ3JhdGlvbi50aW1lckNvdW50ICsgMTtcblx0XHRcdHdwbWRiLmN1cnJlbnRfbWlncmF0aW9uLmRpc3BsYXlDb3VudCgpO1xuXHRcdH0sXG5cdFx0ZGlzcGxheUNvdW50OiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBob3VycyA9IE1hdGguZmxvb3IoIHRoaXMudGltZXJDb3VudCAvIDM2MDAgKSAlIDI0O1xuXHRcdFx0dmFyIG1pbnV0ZXMgPSBNYXRoLmZsb29yKCB0aGlzLnRpbWVyQ291bnQgLyA2MCApICUgNjA7XG5cdFx0XHR2YXIgc2Vjb25kcyA9IHRoaXMudGltZXJDb3VudCAlIDYwO1xuXHRcdFx0dmFyIGRpc3BsYXkgPSB0aGlzLnBhZCggaG91cnMsIDIsIDAgKSArICc6JyArIHRoaXMucGFkKCBtaW51dGVzLCAyLCAwICkgKyAnOicgKyB0aGlzLnBhZCggc2Vjb25kcywgMiwgMCApO1xuXHRcdFx0dGhpcy5jb3VudGVyRGlzcGxheS5odG1sKCBkaXNwbGF5ICk7XG5cdFx0fSxcblx0XHR1cGRhdGVUaXRsZUVsZW06IGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGFjdGl2ZVN0YWdlID0gdGhpcy5tb2RlbC5nZXQoICdhY3RpdmVTdGFnZU5hbWUnICk7XG5cdFx0XHR2YXIgc3RhZ2VNb2RlbCA9IHRoaXMubW9kZWwuZ2V0U3RhZ2VNb2RlbCggYWN0aXZlU3RhZ2UgKTtcblx0XHRcdHZhciBwZXJjZW50RG9uZSA9IE1hdGgubWF4KCAwLCBzdGFnZU1vZGVsLmdldFRvdGFsUHJvZ3Jlc3NQZXJjZW50KCkgKTtcblx0XHRcdHZhciBudW1TdGFnZXMgPSB0aGlzLm1vZGVsLmdldCggJ3N0YWdlcycgKS5sZW5ndGg7XG5cdFx0XHR2YXIgY3VycmVudFN0YWdlID0gdGhpcy5jdXJyZW50U3RhZ2VOdW07XG5cdFx0XHR2YXIgY3VycmVudFN0YXR1cyA9IHRoaXMuc3RhdHVzO1xuXHRcdFx0dmFyIHByb2dyZXNzVGV4dCA9IHdwbWRiX3N0cmluZ3MudGl0bGVfcHJvZ3Jlc3M7XG5cblx0XHRcdGlmICggJ2NvbXBsZXRlJyA9PT0gc3RhZ2VNb2RlbC5nZXQoICdzdGF0dXMnICkgJiYgMCA9PT0gc3RhZ2VNb2RlbC5nZXQoICd0b3RhbFNpemUnICkgKSB7XG5cdFx0XHRcdHBlcmNlbnREb25lID0gMTAwO1xuXHRcdFx0fVxuXG5cdFx0XHRwcm9ncmVzc1RleHQgPSBwcm9ncmVzc1RleHQucmVwbGFjZSggJyUxJHMnLCBwZXJjZW50RG9uZSArICclJyApO1xuXHRcdFx0cHJvZ3Jlc3NUZXh0ID0gcHJvZ3Jlc3NUZXh0LnJlcGxhY2UoICclMiRzJywgY3VycmVudFN0YWdlICk7XG5cdFx0XHRwcm9ncmVzc1RleHQgPSBwcm9ncmVzc1RleHQucmVwbGFjZSggJyUzJHMnLCBudW1TdGFnZXMgKTtcblxuXHRcdFx0aWYgKCAxID09PSBudW1TdGFnZXMgKSB7XG5cdFx0XHRcdHByb2dyZXNzVGV4dCA9IHBlcmNlbnREb25lICsgJyUnO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdwbWRiX3N0cmluZ3NbICd0aXRsZV8nICsgY3VycmVudFN0YXR1cyBdICkge1xuXHRcdFx0XHRwcm9ncmVzc1RleHQgPSB3cG1kYl9zdHJpbmdzWyAndGl0bGVfJyArIGN1cnJlbnRTdGF0dXMgXTtcblx0XHRcdH1cblxuXHRcdFx0cHJvZ3Jlc3NUZXh0ID0gcHJvZ3Jlc3NUZXh0ICsgJyAtICcgKyB0aGlzLm9yaWdpbmFsVGl0bGU7XG5cblx0XHRcdGRvY3VtZW50LnRpdGxlID0gcHJvZ3Jlc3NUZXh0O1xuXHRcdH0sXG5cdFx0cmVzdG9yZVRpdGxlRWxlbTogZnVuY3Rpb24oKSB7XG5cdFx0XHRkb2N1bWVudC50aXRsZSA9IHRoaXMub3JpZ2luYWxUaXRsZTtcblx0XHR9LFxuXHRcdHBhZDogZnVuY3Rpb24oIG51bSwgd2lkdGgsIHBhZENoYXIgKSB7XG5cdFx0XHRwYWRDaGFyID0gcGFkQ2hhciB8fCAnMCc7XG5cdFx0XHRudW0gPSBudW0gKyAnJztcblx0XHRcdHJldHVybiBudW0ubGVuZ3RoID49IHdpZHRoID8gbnVtIDogbmV3IEFycmF5KCB3aWR0aCAtIG51bS5sZW5ndGggKyAxICkuam9pbiggcGFkQ2hhciApICsgbnVtO1xuXHRcdH0sXG5cblx0XHQvLyBmaXhlcyBlcnJvciBvYmplY3RzIHRoYXQgaGF2ZSBiZWVuIG1hbmdsZWQgYnkgaHRtbCBlbmNvZGluZ1xuXHRcdGRlY29kZUVycm9yT2JqZWN0OiBmdW5jdGlvbiggaW5wdXQgKSB7XG5cdFx0XHR2YXIgaW5wdXREZWNvZGVkID0gaW5wdXRcblx0XHRcdFx0LnJlcGxhY2UoIC9cXHsmcXVvdDsvZywgJ3sjcSEjJyApXG5cdFx0XHRcdC5yZXBsYWNlKCAvXFwmcXVvdDt9L2csICcjcSEjfScgKVxuXHRcdFx0XHQucmVwbGFjZSggLywmcXVvdDsvZywgJywjcSEjJyApXG5cdFx0XHRcdC5yZXBsYWNlKCAvJnF1b3Q7Oi9nLCAnI3EhIzonIClcblx0XHRcdFx0LnJlcGxhY2UoIC86JnF1b3Q7L2csICc6I3EhIycgKVxuXHRcdFx0XHQucmVwbGFjZSggLyZxdW90Oy9nLCAnXFxcXFwiJyApXG5cdFx0XHRcdC5yZXBsYWNlKCAvI3EhIy9nLCAnXCInIClcblx0XHRcdFx0LnJlcGxhY2UoIC8mZ3Q7L2csICc+JyApXG5cdFx0XHRcdC5yZXBsYWNlKCAvJmx0Oy9nLCAnPCcgKTtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGlucHV0RGVjb2RlZCA9IEpTT04ucGFyc2UoIGlucHV0RGVjb2RlZCApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdHJldHVybiBpbnB1dDtcblx0XHRcdH1cblx0XHRcdHJldHVybiAoICdvYmplY3QnID09PSB0eXBlb2YgaW5wdXREZWNvZGVkICYmICd1bmRlZmluZWQnICE9PSB0eXBlb2YgaW5wdXREZWNvZGVkLmJvZHkgKSA/IGlucHV0RGVjb2RlZCA6IGlucHV0O1xuXHRcdH0sXG5cdFx0Zml4UHJvZ3Jlc3NTdGFnZVdpZHRoRm9yU2Nyb2xsQmFyOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzY3JvbGxCYXJXaWR0aCA9IE1hdGguYWJzKCB0aGlzLiR3cmFwcGVyWzBdLm9mZnNldFdpZHRoIC0gdGhpcy4kd3JhcHBlclswXS5jbGllbnRXaWR0aCApO1xuXHRcdFx0dmFyIHZpc2libGVQcm9ncmVzc0l0ZW1zID0gdGhpcy4kd3JhcHBlci5maW5kKCAnLmFjdGl2ZSAucHJvZ3Jlc3MtaXRlbXMnICk7XG5cdFx0XHR2YXIgbGVmdFBhZCA9IHBhcnNlSW50KCB2aXNpYmxlUHJvZ3Jlc3NJdGVtcy5jc3MoICdwYWRkaW5nLWxlZnQnICksIDEwICk7XG5cdFx0XHR2YXIgcmlnaHRQYWQgPSBwYXJzZUludCggdmlzaWJsZVByb2dyZXNzSXRlbXMuY3NzKCAncGFkZGluZy1yaWdodCcgKSwgMTAgKTtcblxuXHRcdFx0aWYgKCAwICE9PSBzY3JvbGxCYXJXaWR0aCB8fCAgKCAwID09PSBzY3JvbGxCYXJXaWR0aCAmJiByaWdodFBhZCAhPT0gbGVmdFBhZCApICkge1xuXHRcdFx0XHR2aXNpYmxlUHJvZ3Jlc3NJdGVtcy5jc3MoICdwYWRkaW5nLXJpZ2h0JywgbGVmdFBhZCAtIHNjcm9sbEJhcldpZHRoICsgJ3B4JyApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0bmV3TWlncmF0aW9uOiBmdW5jdGlvbiggc2V0dGluZ3MgKSB7XG5cdFx0JCggJyNvdmVybGF5JyApLnJlbW92ZSgpO1xuXHRcdCQoICcucHJvZ3Jlc3MtY29udGVudCcgKS5yZW1vdmUoKTtcblx0XHR0aGlzLm1pZ3JhdGlvbi4kb3ZlcmxheSA9ICRvdmVybGF5T3JpZ2luYWwuY2xvbmUoKTtcblxuXHRcdCQoICcjd3B3cmFwJyApLmFwcGVuZCggdGhpcy5taWdyYXRpb24uJG92ZXJsYXkgKTtcblxuXHRcdHRoaXMubWlncmF0aW9uLm1vZGVsID0gbmV3IE1pZ3JhdGlvblByb2dyZXNzTW9kZWwoIHNldHRpbmdzICk7XG5cdFx0dGhpcy5taWdyYXRpb24udmlldyA9IG5ldyBNaWdyYXRpb25Qcm9ncmVzc1ZpZXcoIHtcblx0XHRcdG1vZGVsOiB0aGlzLm1pZ3JhdGlvbi5tb2RlbFxuXHRcdH0gKTtcblxuXHRcdHRoaXMubWlncmF0aW9uLiRwcm9ncmVzcyA9ICRwcm9ncmVzc0NvbnRlbnRPcmlnaW5hbC5jbG9uZSgpO1xuXHRcdHRoaXMubWlncmF0aW9uLiR3cmFwcGVyID0gdGhpcy5taWdyYXRpb24udmlldy4kZWw7XG5cdFx0dGhpcy5taWdyYXRpb24uJHByb2dyZXNzLmZpbmQoICcubWlncmF0aW9uLXByb2dyZXNzLXN0YWdlcycgKS5yZXBsYWNlV2l0aCggdGhpcy5taWdyYXRpb24uJHdyYXBwZXIgKTtcblxuXHRcdHRoaXMubWlncmF0aW9uLiRwcm9WZXJzaW9uID0gdGhpcy5taWdyYXRpb24uJG92ZXJsYXkuZmluZCggJy5wcm8tdmVyc2lvbicgKTtcblx0XHR2YXIgcHJvVmVyc2lvbklGcmFtZSA9IHRoaXMubWlncmF0aW9uLiRwcm9WZXJzaW9uLmZpbmQoICdpZnJhbWUnICkucmVtb3ZlKCkuY2xvbmUoKTtcblxuXHRcdHRoaXMubWlncmF0aW9uLiRvdmVybGF5LnByZXBlbmQoIHRoaXMubWlncmF0aW9uLiRwcm9ncmVzcyApO1xuXG5cdFx0Ly8gdGltZW91dCBuZWVkZWQgc28gY2xhc3MgaXMgYWRkZWQgYWZ0ZXIgZWxlbWVudHMgYXJlIGFwcGVuZGVkIHRvIGRvbSBhbmQgdHJhbnNpdGlvbiBydW5zLlxuXHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdHNlbGYubWlncmF0aW9uLiRvdmVybGF5LmFkZCggc2VsZi5taWdyYXRpb24uJHByb2dyZXNzICkuYWRkKCBzZWxmLm1pZ3JhdGlvbi4kcHJvVmVyc2lvbiApLnJlbW92ZUNsYXNzKCAnaGlkZScgKS5hZGRDbGFzcyggJ3Nob3cnICk7XG5cdFx0XHRpZiAoIHNlbGYubWlncmF0aW9uLiRwcm9WZXJzaW9uLmxlbmd0aCApIHtcblx0XHRcdFx0c2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0c2VsZi5taWdyYXRpb24uJHByb1ZlcnNpb24uZmluZCggJy5pZnJhbWUnICkuYXBwZW5kKCBwcm9WZXJzaW9uSUZyYW1lICk7XG5cdFx0XHRcdH0sIDUwMCApO1xuXHRcdFx0fVxuXHRcdH0sIDAgKTtcblxuXHRcdHRoaXMubWlncmF0aW9uLmN1cnJlbnRTdGFnZU51bSA9IDA7XG5cblx0XHR0aGlzLm1pZ3JhdGlvbi4kcHJvVmVyc2lvbi5vbiggJ2NsaWNrJywgJy5jbG9zZS1wcm8tdmVyc2lvbicsIGZ1bmN0aW9uKCkge1xuXHRcdFx0c2VsZi5taWdyYXRpb24uJHByb1ZlcnNpb24uZmluZCggJ2lmcmFtZScgKS5yZW1vdmUoKTtcblx0XHRcdHNlbGYubWlncmF0aW9uLiRwcm9WZXJzaW9uLmFkZENsYXNzKCAnaGlkZSByZW1vdmUnICk7XG5cdFx0XHRzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0c2VsZi5taWdyYXRpb24uJHByb1ZlcnNpb24ucmVtb3ZlKCk7XG5cdFx0XHR9LCA1MDAgKTtcblx0XHR9ICk7XG5cblx0XHR0aGlzLm1pZ3JhdGlvbi5tb2RlbC5vbiggJ21pZ3JhdGlvbkNvbXBsZXRlJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRzZWxmLnV0aWxzLnVwZGF0ZVByb2dUYWJsZVZpc2liaWxpdHlTZXR0aW5nKCk7XG5cdFx0XHRzZWxmLnV0aWxzLnVwZGF0ZVBhdXNlQmVmb3JlRmluYWxpemVTZXR0aW5nKCk7XG5cdFx0XHRzZWxmLm1pZ3JhdGlvbi5wYXVzZVRpbWVyKCk7XG5cdFx0fSApO1xuXG5cdFx0JCggd2luZG93ICkub24oICdyZXNpemUnLCBfLmRlYm91bmNlKCB0aGlzLm1pZ3JhdGlvbi5maXhQcm9ncmVzc1N0YWdlV2lkdGhGb3JTY3JvbGxCYXIuYmluZCggdGhpcy5taWdyYXRpb24gKSwgMTAwICkgKTtcblx0XHR0aGlzLm1pZ3JhdGlvbi5tb2RlbC5vbiggJ2NoYW5nZTphY3RpdmVTdGFnZScsIHRoaXMubWlncmF0aW9uLmZpeFByb2dyZXNzU3RhZ2VXaWR0aEZvclNjcm9sbEJhci5iaW5kKCB0aGlzLm1pZ3JhdGlvbiApICk7XG5cblx0XHRyZXR1cm4gdGhpcy5taWdyYXRpb247XG5cdH0sXG5cdHV0aWxzOiByZXF1aXJlKCAnLi9NaWdyYXRpb25Qcm9ncmVzcy11dGlscycgKVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBNaWdyYXRpb25Qcm9ncmVzc0NvbnRyb2xsZXI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtY29udHJvbGxlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///82\n");

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar MigrationProgressStageModel = __webpack_require__(50);\nvar $ = jQuery;\n\nvar MigrationProgressModel = Backbone.Model.extend({\n\tdefaults: {\n\t\t_initialStages: null,\n\t\tstages: null,\n\t\tactiveStageName: null,\n\t\tstageModels: null,\n\t\tlocalTableRows: null,\n\t\tlocalTableSizes: null,\n\t\tremoteTableRows: null,\n\t\tremoteTableSizes: null,\n\t\tmigrationStatus: 'active',\n\t\tmigrationIntent: 'savefile'\n\t},\n\tinitialize: function initialize() {\n\t\tthis.set('stageModels', {});\n\t\tthis.set('_initialStages', this.get('stages'));\n\t\tthis.set('stages', []);\n\t\t_.each(this.get('_initialStages'), function (stage, items, dataType) {\n\t\t\tthis.addStage(stage.name, items, dataType);\n\t\t}, this);\n\t},\n\taddStage: function addStage(name, items, dataType, extend) {\n\t\tvar itemsArr = [];\n\t\tvar stage;\n\n\t\t_.each(items, function (item) {\n\t\t\tvar size, rows;\n\n\t\t\tif ('remote' === dataType) {\n\t\t\t\tsize = this.get('remoteTableSizes')[item];\n\t\t\t\trows = this.get('remoteTableRows')[item];\n\t\t\t} else {\n\t\t\t\tsize = this.get('localTableSizes')[item];\n\t\t\t\trows = this.get('localTableRows')[item];\n\t\t\t}\n\n\t\t\titemsArr.push({\n\t\t\t\tname: item,\n\t\t\t\tsize: size,\n\t\t\t\trows: rows\n\t\t\t});\n\t\t}, this);\n\n\t\tstage = {\n\t\t\tname: name,\n\t\t\titems: itemsArr,\n\t\t\tdataType: dataType\n\t\t};\n\n\t\tif ('object' === (typeof extend === 'undefined' ? 'undefined' : _typeof(extend))) {\n\t\t\tstage = $.extend(stage, extend);\n\t\t}\n\n\t\tthis.addStageModel(stage);\n\n\t\tthis.trigger('stage:added', this.get('stageModels')[name]);\n\t\tthis.get('stageModels')[name].on('change', function () {\n\t\t\tthis.trigger('change');\n\t\t}, this);\n\n\t\treturn this.getStageModel(stage.name);\n\t},\n\taddStageItem: function addStageItem(stage, name, size, rows) {\n\t\tvar displayName = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n\n\t\tthis.getStageModel(stage).addItem(name, size, rows, displayName);\n\t},\n\taddStageModel: function addStageModel(stage) {\n\t\tvar stages = this.get('stages');\n\t\tvar stageModels = this.get('stageModels');\n\t\tvar newStageModel = new MigrationProgressStageModel(stage);\n\n\t\tstages.push(stage);\n\t\tstageModels[stage.name] = newStageModel;\n\n\t\tthis.set('stages', stages);\n\t\tthis.set('stageModels', stageModels);\n\t},\n\tgetStageModel: function getStageModel(name) {\n\t\treturn this.get('stageModels')[name];\n\t},\n\tgetStageItems: function getStageItems(stage, map) {\n\t\tvar stageModel = this.getStageModel(stage);\n\t\tvar items = stageModel.get('items');\n\n\t\tif (undefined === map) {\n\t\t\treturn items;\n\t\t} else {\n\t\t\treturn items.map(function (item) {\n\t\t\t\treturn item[map];\n\t\t\t});\n\t\t}\n\t},\n\tsetActiveStage: function setActiveStage(stage) {\n\t\tthis.setStageComplete();\n\t\tthis.set('activeStageName', stage);\n\t\tthis.getStageModel(stage).set('status', 'active');\n\t\tthis.trigger('change:activeStage');\n\t},\n\tsetStageComplete: function setStageComplete(stage) {\n\t\tif (!stage) {\n\t\t\tstage = this.get('activeStageName');\n\t\t}\n\t\tif (null !== stage) {\n\t\t\tthis.getStageModel(stage).set('status', 'complete');\n\t\t}\n\n\t\twpmdb.current_migration.currentStageNum = wpmdb.current_migration.currentStageNum + 1;\n\t},\n\tsetMigrationComplete: function setMigrationComplete() {\n\t\tvar lastStage = this.getStageModel(this.get('activeStageName'));\n\t\tthis.setStageComplete();\n\t\tthis.trigger('migrationComplete');\n\t\tthis.set('migrationStatus', 'complete');\n\t\tlastStage.activateTab();\n\t}\n});\n\nmodule.exports = MigrationProgressModel;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n");

/***/ }),
/* 84 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar $ = jQuery;\n\nmodule.exports = {\n\tupdateProgTableVisibilitySetting: function updateProgTableVisibilitySetting() {\n\t\tif (!wpmdb_data.prog_tables_visibility_changed) {\n\t\t\treturn;\n\t\t}\n\t\twpmdb_data.prog_tables_visibility_changed = false;\n\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcache: false,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_save_setting',\n\t\t\t\tnonce: wpmdb_data.nonces.save_setting,\n\t\t\t\tsetting: 'prog_tables_hidden',\n\t\t\t\tchecked: Boolean(wpmdb_data.prog_tables_hidden)\n\t\t\t},\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log('Could not save progress item visibility setting', errorThrown);\n\t\t\t}\n\t\t});\n\t},\n\tupdatePauseBeforeFinalizeSetting: function updatePauseBeforeFinalizeSetting() {\n\t\tif (!wpmdb_data.pause_before_finalize_changed) {\n\t\t\treturn;\n\t\t}\n\t\twpmdb_data.pause_before_finalize_changed = false;\n\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcache: false,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_save_setting',\n\t\t\t\tnonce: wpmdb_data.nonces.save_setting,\n\t\t\t\tsetting: 'pause_before_finalize',\n\t\t\t\tchecked: Boolean(wpmdb_data.pause_before_finalize)\n\t\t\t},\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tconsole.log('Could not save pause before finalize setting', errorThrown);\n\t\t\t}\n\t\t});\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3MtdXRpbHMuanM/MTBiZSJdLCJuYW1lcyI6WyIkIiwialF1ZXJ5IiwibW9kdWxlIiwiZXhwb3J0cyIsInVwZGF0ZVByb2dUYWJsZVZpc2liaWxpdHlTZXR0aW5nIiwid3BtZGJfZGF0YSIsInByb2dfdGFibGVzX3Zpc2liaWxpdHlfY2hhbmdlZCIsImFqYXgiLCJ1cmwiLCJhamF4dXJsIiwidHlwZSIsImRhdGFUeXBlIiwiY2FjaGUiLCJkYXRhIiwiYWN0aW9uIiwibm9uY2UiLCJub25jZXMiLCJzYXZlX3NldHRpbmciLCJzZXR0aW5nIiwiY2hlY2tlZCIsIkJvb2xlYW4iLCJwcm9nX3RhYmxlc19oaWRkZW4iLCJlcnJvciIsImpxWEhSIiwidGV4dFN0YXR1cyIsImVycm9yVGhyb3duIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZVBhdXNlQmVmb3JlRmluYWxpemVTZXR0aW5nIiwicGF1c2VfYmVmb3JlX2ZpbmFsaXplX2NoYW5nZWQiLCJwYXVzZV9iZWZvcmVfZmluYWxpemUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsSUFBSUMsTUFBUjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQjtBQUNoQkMsbUNBQWtDLDRDQUFXO0FBQzVDLE1BQUssQ0FBRUMsV0FBV0MsOEJBQWxCLEVBQW1EO0FBQ2xEO0FBQ0E7QUFDREQsYUFBV0MsOEJBQVgsR0FBNEMsS0FBNUM7O0FBRUFOLElBQUVPLElBQUYsQ0FBUTtBQUNQQyxRQUFLQyxPQURFO0FBRVBDLFNBQU0sTUFGQztBQUdQQyxhQUFVLE1BSEg7QUFJUEMsVUFBTyxLQUpBO0FBS1BDLFNBQU07QUFDTEMsWUFBUSxvQkFESDtBQUVMQyxXQUFPVixXQUFXVyxNQUFYLENBQWtCQyxZQUZwQjtBQUdMQyxhQUFTLG9CQUhKO0FBSUxDLGFBQVNDLFFBQVNmLFdBQVdnQixrQkFBcEI7QUFKSixJQUxDO0FBV1BDLFVBQU8sZUFBVUMsS0FBVixFQUFpQkMsVUFBakIsRUFBNkJDLFdBQTdCLEVBQTJDO0FBQ2pEQyxZQUFRQyxHQUFSLENBQWEsaURBQWIsRUFBZ0VGLFdBQWhFO0FBQ0E7QUFiTSxHQUFSO0FBZUEsRUF0QmU7QUF1QmhCRyxtQ0FBa0MsNENBQVc7QUFDNUMsTUFBSyxDQUFFdkIsV0FBV3dCLDZCQUFsQixFQUFrRDtBQUNqRDtBQUNBO0FBQ0R4QixhQUFXd0IsNkJBQVgsR0FBMkMsS0FBM0M7O0FBRUE3QixJQUFFTyxJQUFGLENBQVE7QUFDUEMsUUFBS0MsT0FERTtBQUVQQyxTQUFNLE1BRkM7QUFHUEMsYUFBVSxNQUhIO0FBSVBDLFVBQU8sS0FKQTtBQUtQQyxTQUFNO0FBQ0xDLFlBQVEsb0JBREg7QUFFTEMsV0FBT1YsV0FBV1csTUFBWCxDQUFrQkMsWUFGcEI7QUFHTEMsYUFBUyx1QkFISjtBQUlMQyxhQUFTQyxRQUFTZixXQUFXeUIscUJBQXBCO0FBSkosSUFMQztBQVdQUixVQUFPLGVBQVVDLEtBQVYsRUFBaUJDLFVBQWpCLEVBQTZCQyxXQUE3QixFQUEyQztBQUNqREMsWUFBUUMsR0FBUixDQUFhLDhDQUFiLEVBQTZERixXQUE3RDtBQUNBO0FBYk0sR0FBUjtBQWVBO0FBNUNlLENBQWpCLEMiLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJCA9IGpRdWVyeTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdHVwZGF0ZVByb2dUYWJsZVZpc2liaWxpdHlTZXR0aW5nOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICEgd3BtZGJfZGF0YS5wcm9nX3RhYmxlc192aXNpYmlsaXR5X2NoYW5nZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXHRcdHdwbWRiX2RhdGEucHJvZ190YWJsZXNfdmlzaWJpbGl0eV9jaGFuZ2VkID0gZmFsc2U7XG5cblx0XHQkLmFqYXgoIHtcblx0XHRcdHVybDogYWpheHVybCxcblx0XHRcdHR5cGU6ICdQT1NUJyxcblx0XHRcdGRhdGFUeXBlOiAndGV4dCcsXG5cdFx0XHRjYWNoZTogZmFsc2UsXG5cdFx0XHRkYXRhOiB7XG5cdFx0XHRcdGFjdGlvbjogJ3dwbWRiX3NhdmVfc2V0dGluZycsXG5cdFx0XHRcdG5vbmNlOiB3cG1kYl9kYXRhLm5vbmNlcy5zYXZlX3NldHRpbmcsXG5cdFx0XHRcdHNldHRpbmc6ICdwcm9nX3RhYmxlc19oaWRkZW4nLFxuXHRcdFx0XHRjaGVja2VkOiBCb29sZWFuKCB3cG1kYl9kYXRhLnByb2dfdGFibGVzX2hpZGRlbiApXG5cdFx0XHR9LFxuXHRcdFx0ZXJyb3I6IGZ1bmN0aW9uKCBqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24gKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCAnQ291bGQgbm90IHNhdmUgcHJvZ3Jlc3MgaXRlbSB2aXNpYmlsaXR5IHNldHRpbmcnLCBlcnJvclRocm93biApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblx0dXBkYXRlUGF1c2VCZWZvcmVGaW5hbGl6ZVNldHRpbmc6IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggISB3cG1kYl9kYXRhLnBhdXNlX2JlZm9yZV9maW5hbGl6ZV9jaGFuZ2VkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHR3cG1kYl9kYXRhLnBhdXNlX2JlZm9yZV9maW5hbGl6ZV9jaGFuZ2VkID0gZmFsc2U7XG5cblx0XHQkLmFqYXgoIHtcblx0XHRcdHVybDogYWpheHVybCxcblx0XHRcdHR5cGU6ICdQT1NUJyxcblx0XHRcdGRhdGFUeXBlOiAndGV4dCcsXG5cdFx0XHRjYWNoZTogZmFsc2UsXG5cdFx0XHRkYXRhOiB7XG5cdFx0XHRcdGFjdGlvbjogJ3dwbWRiX3NhdmVfc2V0dGluZycsXG5cdFx0XHRcdG5vbmNlOiB3cG1kYl9kYXRhLm5vbmNlcy5zYXZlX3NldHRpbmcsXG5cdFx0XHRcdHNldHRpbmc6ICdwYXVzZV9iZWZvcmVfZmluYWxpemUnLFxuXHRcdFx0XHRjaGVja2VkOiBCb29sZWFuKCB3cG1kYl9kYXRhLnBhdXNlX2JlZm9yZV9maW5hbGl6ZSApXG5cdFx0XHR9LFxuXHRcdFx0ZXJyb3I6IGZ1bmN0aW9uKCBqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24gKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCAnQ291bGQgbm90IHNhdmUgcGF1c2UgYmVmb3JlIGZpbmFsaXplIHNldHRpbmcnLCBlcnJvclRocm93biApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy93cC1taWdyYXRlLWRiLXByby9hc3NldC9zcmMvanMvbW9kdWxlcy9NaWdyYXRpb25Qcm9ncmVzcy11dGlscy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///84\n");

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar MigrationProgressStageView = __webpack_require__(52);\nvar $ = jQuery;\n\nvar MigrationProgressView = Backbone.View.extend({\n\ttagName: 'div',\n\tclassName: 'migration-progress-stages',\n\tid: 'migration-progress-stages',\n\tself: undefined,\n\tinitialize: function initialize() {\n\t\tthis.$el.empty();\n\n\t\tthis.model.on('stage:added', function (stageModel) {\n\t\t\tthis.addStageView(stageModel);\n\t\t}, this);\n\n\t\t_.each(this.model.get('stageModels'), this.addStageView, this);\n\t},\n\taddStageView: function addStageView(stageModel) {\n\t\tvar newStageSubView = new MigrationProgressStageView({\n\t\t\tmodel: stageModel\n\t\t});\n\t\tstageModel.trigger('view:initialized', newStageSubView);\n\t\tthis.$el.append(newStageSubView.$el);\n\t\tthis.$el.parent().find('.stage-tabs').append(newStageSubView.$tabElem);\n\t}\n});\n\nmodule.exports = MigrationProgressView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3Mtdmlldy5qcz83YmMxIl0sIm5hbWVzIjpbIk1pZ3JhdGlvblByb2dyZXNzU3RhZ2VWaWV3IiwicmVxdWlyZSIsIiQiLCJqUXVlcnkiLCJNaWdyYXRpb25Qcm9ncmVzc1ZpZXciLCJCYWNrYm9uZSIsIlZpZXciLCJleHRlbmQiLCJ0YWdOYW1lIiwiY2xhc3NOYW1lIiwiaWQiLCJzZWxmIiwiaW5pdGlhbGl6ZSIsIiRlbCIsImVtcHR5IiwibW9kZWwiLCJvbiIsInN0YWdlTW9kZWwiLCJhZGRTdGFnZVZpZXciLCJfIiwiZWFjaCIsImdldCIsIm5ld1N0YWdlU3ViVmlldyIsInRyaWdnZXIiLCJhcHBlbmQiLCJwYXJlbnQiLCJmaW5kIiwiJHRhYkVsZW0iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLDZCQUE2QixtQkFBQUMsQ0FBUyxFQUFULENBQWpDO0FBQ0EsSUFBSUMsSUFBSUMsTUFBUjs7QUFFQSxJQUFJQyx3QkFBd0JDLFNBQVNDLElBQVQsQ0FBY0MsTUFBZCxDQUFzQjtBQUNqREMsVUFBUyxLQUR3QztBQUVqREMsWUFBVywyQkFGc0M7QUFHakRDLEtBQUksMkJBSDZDO0FBSWpEQyxnQkFKaUQ7QUFLakRDLGFBQVksc0JBQVc7QUFDdEIsT0FBS0MsR0FBTCxDQUFTQyxLQUFUOztBQUVBLE9BQUtDLEtBQUwsQ0FBV0MsRUFBWCxDQUFlLGFBQWYsRUFBOEIsVUFBVUMsVUFBVixFQUF1QjtBQUNwRCxRQUFLQyxZQUFMLENBQW1CRCxVQUFuQjtBQUNBLEdBRkQsRUFFRyxJQUZIOztBQUlBRSxJQUFFQyxJQUFGLENBQVEsS0FBS0wsS0FBTCxDQUFXTSxHQUFYLENBQWdCLGFBQWhCLENBQVIsRUFBeUMsS0FBS0gsWUFBOUMsRUFBNEQsSUFBNUQ7QUFDQSxFQWJnRDtBQWNqREEsZUFBYyxzQkFBVUQsVUFBVixFQUF1QjtBQUNwQyxNQUFJSyxrQkFBa0IsSUFBSXRCLDBCQUFKLENBQWdDO0FBQ3JEZSxVQUFPRTtBQUQ4QyxHQUFoQyxDQUF0QjtBQUdBQSxhQUFXTSxPQUFYLENBQW9CLGtCQUFwQixFQUF3Q0QsZUFBeEM7QUFDQSxPQUFLVCxHQUFMLENBQVNXLE1BQVQsQ0FBaUJGLGdCQUFnQlQsR0FBakM7QUFDQSxPQUFLQSxHQUFMLENBQVNZLE1BQVQsR0FBa0JDLElBQWxCLENBQXdCLGFBQXhCLEVBQXdDRixNQUF4QyxDQUFnREYsZ0JBQWdCSyxRQUFoRTtBQUNBO0FBckJnRCxDQUF0QixDQUE1Qjs7QUF3QkFDLE9BQU9DLE9BQVAsR0FBaUJ6QixxQkFBakIsQyIsImZpbGUiOiI4NS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBNaWdyYXRpb25Qcm9ncmVzc1N0YWdlVmlldyA9IHJlcXVpcmUoICcuL01pZ3JhdGlvblByb2dyZXNzU3RhZ2Utdmlldy5qcycgKTtcbnZhciAkID0galF1ZXJ5O1xuXG52YXIgTWlncmF0aW9uUHJvZ3Jlc3NWaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoIHtcblx0dGFnTmFtZTogJ2RpdicsXG5cdGNsYXNzTmFtZTogJ21pZ3JhdGlvbi1wcm9ncmVzcy1zdGFnZXMnLFxuXHRpZDogJ21pZ3JhdGlvbi1wcm9ncmVzcy1zdGFnZXMnLFxuXHRzZWxmOiB0aGlzLFxuXHRpbml0aWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHR0aGlzLiRlbC5lbXB0eSgpO1xuXG5cdFx0dGhpcy5tb2RlbC5vbiggJ3N0YWdlOmFkZGVkJywgZnVuY3Rpb24oIHN0YWdlTW9kZWwgKSB7XG5cdFx0XHR0aGlzLmFkZFN0YWdlVmlldyggc3RhZ2VNb2RlbCApO1xuXHRcdH0sIHRoaXMgKTtcblxuXHRcdF8uZWFjaCggdGhpcy5tb2RlbC5nZXQoICdzdGFnZU1vZGVscycgKSwgdGhpcy5hZGRTdGFnZVZpZXcsIHRoaXMgKTtcblx0fSxcblx0YWRkU3RhZ2VWaWV3OiBmdW5jdGlvbiggc3RhZ2VNb2RlbCApIHtcblx0XHR2YXIgbmV3U3RhZ2VTdWJWaWV3ID0gbmV3IE1pZ3JhdGlvblByb2dyZXNzU3RhZ2VWaWV3KCB7XG5cdFx0XHRtb2RlbDogc3RhZ2VNb2RlbFxuXHRcdH0gKTtcblx0XHRzdGFnZU1vZGVsLnRyaWdnZXIoICd2aWV3OmluaXRpYWxpemVkJywgbmV3U3RhZ2VTdWJWaWV3ICk7XG5cdFx0dGhpcy4kZWwuYXBwZW5kKCBuZXdTdGFnZVN1YlZpZXcuJGVsICk7XG5cdFx0dGhpcy4kZWwucGFyZW50KCkuZmluZCggJy5zdGFnZS10YWJzJyApLmFwcGVuZCggbmV3U3RhZ2VTdWJWaWV3LiR0YWJFbGVtICk7XG5cdH1cbn0gKTtcblxubW9kdWxlLmV4cG9ydHMgPSBNaWdyYXRpb25Qcm9ncmVzc1ZpZXc7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL21vZHVsZXMvTWlncmF0aW9uUHJvZ3Jlc3Mtdmlldy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///85\n");

/***/ }),
/* 86 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar $ = jQuery;\n\nvar MigrationProgressStage = Backbone.Model.extend({\n\tdefaults: {\n\t\tstatus: 'queued',\n\t\t_initialItems: null,\n\t\titems: null,\n\t\tlookupItems: null,\n\t\ttotalSize: 0,\n\t\ttotalTransferred: 0,\n\t\tdataType: 'local',\n\t\tname: '',\n\t\titemsComplete: 0,\n\t\titemsCompleteArr: [],\n\t\tstrings: null\n\t},\n\tinitialize: function initialize() {\n\t\tthis.initStrings();\n\n\t\tthis.set('_initialItems', this.get('items').slice());\n\t\tthis.set('items', []);\n\t\tthis.set('lookupItems', {});\n\t\tthis.set('itemsCompleteArr', []);\n\n\t\t_.each(this.get('_initialItems'), function (item) {\n\t\t\tthis.addItem(item.name, item.size, item.rows);\n\t\t}, this);\n\n\t\tthis.on('view:initialized', this.triggerItemViewInit);\n\n\t\tthis.on('change', function () {\n\t\t\twpmdb.current_migration.updateTitleElem();\n\t\t});\n\t},\n\tinitStrings: function initStrings() {\n\t\tvar default_strings = {\n\t\t\tstage_title: this.get('name'),\n\t\t\tmigrated: wpmdb_strings.migrated,\n\t\t\tqueued: wpmdb_strings.queued,\n\t\t\tactive: wpmdb_strings.running,\n\t\t\tcomplete: wpmdb_strings.complete,\n\t\t\thide: wpmdb_strings.hide,\n\t\t\tshow: wpmdb_strings.show,\n\t\t\titemsName: wpmdb_strings.tables\n\t\t};\n\t\tvar strings = this.get('strings');\n\n\t\tstrings = 'object' === (typeof strings === 'undefined' ? 'undefined' : _typeof(strings)) ? strings : {};\n\t\tstrings = $.extend(default_strings, strings);\n\n\t\tstrings.items_migrated = strings.itemsName + ' ' + strings.migrated;\n\t\tstrings.hide_items = strings.hide + ' ' + strings.itemsName;\n\t\tstrings.show_items = strings.show + ' ' + strings.itemsName;\n\n\t\tthis.set('strings', strings);\n\t},\n\taddItem: function addItem(name, size, rows, displayName) {\n\t\tvar items = this.get('items');\n\t\tvar item = {\n\t\t\tname: name,\n\t\t\tsize: size,\n\t\t\trows: rows || size,\n\t\t\tstageName: this.get('name'),\n\t\t\t$el: null,\n\t\t\ttransferred: 0,\n\t\t\trowsTransferred: 0,\n\t\t\tcomplete: false\n\t\t};\n\n\t\t// Only add the displayName if it's not empty\n\t\tif ('undefined' !== typeof displayName && displayName.length) {\n\t\t\titem.displayName = displayName;\n\t\t}\n\n\t\titems.push(item);\n\t\tthis.get('lookupItems')[name] = items.length - 1;\n\n\t\tthis.set('totalSize', parseInt(this.get('totalSize')) + parseInt(size));\n\t\tthis.trigger('item:added', item);\n\t},\n\ttriggerItemViewInit: function triggerItemViewInit() {\n\t\tvar items = this.get('items');\n\t\tvar self = this;\n\t\t_.each(items, function (item) {\n\t\t\tself.trigger('item:added', item);\n\t\t});\n\t},\n\tgetTotalSizeTransferred: function getTotalSizeTransferred() {\n\t\treturn this.get('totalTransferred');\n\t},\n\tcountItemsComplete: function countItemsComplete() {\n\t\treturn this.get('itemsComplete');\n\t},\n\tgetTotalProgressPercent: function getTotalProgressPercent() {\n\t\tvar transferred = this.getTotalSizeTransferred();\n\t\tvar total = this.get('totalSize');\n\t\tif (0 >= transferred || 0 >= total) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.min(100, Math.floor(transferred / total * 100));\n\t},\n\tactivateTab: function activateTab() {\n\t\tthis.trigger('activateTab');\n\t\twpmdb.current_migration.model.trigger('change:activeStage');\n\t},\n\tsetItemComplete: function setItemComplete(itemName) {\n\n\t\t// Guard: return if item has already been set complete\n\t\tvar itemsCompleteArr = this.get('itemsCompleteArr');\n\t\tif (~itemsCompleteArr.indexOf(itemName)) {\n\t\t\treturn;\n\t\t}\n\t\titemsCompleteArr.push(itemName);\n\n\t\tvar item = this.getItemByName(itemName);\n\t\tvar totalTransferred = this.get('totalTransferred');\n\t\tvar itemsComplete = this.get('itemsComplete');\n\n\t\tthis.set('itemsComplete', ++itemsComplete);\n\n\t\ttotalTransferred += item.size - item.transferred;\n\t\tthis.set('totalTransferred', totalTransferred);\n\n\t\titem.transferred = item.size;\n\t\titem.complete = true;\n\t\titem.rowsTransferred = item.rows;\n\t\tthis.trigger('change change:items', item);\n\t},\n\tsetItemRowsTransferred: function setItemRowsTransferred(itemName, numRows) {\n\t\tvar amtDone, estTransferred;\n\t\tvar item = this.getItemByName(itemName);\n\t\tvar totalTransferred = this.get('totalTransferred');\n\n\t\tif (-1 === parseInt(numRows)) {\n\t\t\tamtDone = 1;\n\t\t} else {\n\t\t\tamtDone = Math.min(1, numRows / item.rows);\n\t\t}\n\n\t\tif (1 === amtDone) {\n\t\t\tthis.setItemComplete(itemName);\n\t\t\treturn;\n\t\t}\n\n\t\testTransferred = item.size * amtDone;\n\n\t\ttotalTransferred += estTransferred - item.transferred;\n\t\tthis.set('totalTransferred', totalTransferred);\n\n\t\titem.transferred = estTransferred;\n\t\titem.rowsTransferred = numRows;\n\t\tthis.trigger('change change:items', item);\n\t},\n\tgetItemByName: function getItemByName(itemName) {\n\t\tvar item = this.get('items')[this.get('lookupItems')[itemName]] || {};\n\t\tif (itemName === item.name) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\treturn this.determineItemByName(itemName);\n\t\t}\n\t},\n\tdetermineItemByName: function determineItemByName(itemName) {\n\t\tvar items = this.get('items');\n\t\tfor (var index = 0; index < items.length; index++) {\n\t\t\tvar item = items[index];\n\t\t\tif (itemName === item.name) {\n\t\t\t\tthis.get('lookupItems').itemName = index;\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = MigrationProgressStage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86\n");

/***/ }),
/* 87 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar $ = jQuery;\n\nvar MigrationProgressStageView = Backbone.View.extend({\n\ttagName: 'div',\n\tclassName: 'migration-progress-stage-container hide-tables',\n\t$totalProgressElem: null,\n\t$tabElem: null,\n\t$showHideTablesElem: null,\n\t$pauseBeforeFinalizeElem: null,\n\t$pauseBeforeFinalizeCheckbox: null,\n\t$itemsContainer: null,\n\titemViews: null,\n\tmaxDomNodes: 100,\n\tvisibleDomNodes: 0,\n\tqueuedElements: null,\n\t$truncationNotice: null,\n\t$truncationNoticeHiddenItems: null,\n\tinitialize: function initialize() {\n\t\tthis.$el.empty();\n\t\tthis.$el.attr('data-stage', this.model.get('name')).addClass('queued ' + this.model.get('name'));\n\n\t\tthis.queuedElements = [];\n\n\t\tthis.initTotalProgressElem();\n\t\twpmdb.current_migration.view.$el.parent().find('.stage-tabs').after(this.$totalProgressElem);\n\n\t\tthis.$itemsContainer = $('<div class=progress-items />');\n\t\tthis.$el.append(this.$itemsContainer);\n\n\t\tthis.initTabElem();\n\n\t\tthis.model.on('item:added', this.maybeAddElementToView, this);\n\n\t\t_.each(this.model.get('itemModels'), this.maybeAddElementToView, this);\n\t\tthis.model.on('change', function () {\n\t\t\tthis.updateProgressElem();\n\t\t\tthis.updateStageTotals();\n\t\t}, this);\n\n\t\tthis.model.on('change:status', function (e) {\n\t\t\tthis.$el.removeClass('queued active').addClass(this.model.get('status'));\n\t\t\tthis.$totalProgressElem.removeClass('queued active').addClass(this.model.get('status'));\n\t\t\tthis.$tabElem.removeClass('queued active').addClass(this.model.get('status')).find('.stage-status').text(this.model.get('strings')[this.model.get('status')]);\n\t\t}, this);\n\n\t\tthis.model.on('change:items', function (item) {\n\t\t\tif (item.name) {\n\t\t\t\tthis.setItemProgress(item);\n\t\t\t}\n\t\t}, this);\n\n\t\tthis.model.on('activateTab', function () {\n\t\t\tif ('complete' === wpmdb.current_migration.model.get('migrationStatus')) {\n\t\t\t\tthis.$totalProgressElem.addClass('active').siblings().removeClass('active');\n\t\t\t\tthis.$tabElem.addClass('active').siblings().removeClass('active');\n\t\t\t\tthis.$el.addClass('active').siblings().removeClass('active');\n\t\t\t}\n\t\t}, this);\n\t},\n\tinitTotalProgressElem: function initTotalProgressElem() {\n\t\tthis.initShowHideTablesElem();\n\t\tthis.initPauseBeforeFinalizeElem();\n\n\t\tthis.$totalProgressElem = $('<div class=\"stage-progress ' + this.model.get('name') + '\" />').append('<span class=percent-complete>0</span>% ' + this.model.get('strings').complete + ' ').append('<span class=\"size-complete-wrap\">(<span class=size-complete>0 MB</span> / <span class=size-total>0 MB</span>) </span>').append('<span class=\"items-complete-wrap\"><span class=items-complete>0</span> <span class=lowercase >of</span> <span class=items-total>0</span> ' + this.model.get('strings').items_migrated + '</span>').append(this.$showHideTablesElem).append('<div class=progress-bar-wrapper><div class=progress-bar /></div>');\n\n\t\tthis.updateStageTotals();\n\t},\n\tinitShowHideTablesElem: function initShowHideTablesElem() {\n\t\tthis.$showHideTablesElem = $('<a class=show-hide-tables/>').text(this.model.get('strings').show_items);\n\t\tvar self = this;\n\t\tthis.$showHideTablesElem.on('click show-hide-progress-tables', function () {\n\t\t\tvar progTablesHidden;\n\t\t\tif (self.$el.hasClass('hide-tables')) {\n\t\t\t\t// show tables\n\t\t\t\tprogTablesHidden = false;\n\t\t\t\tself.$el.add(self.$el.siblings()).removeClass('hide-tables');\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').hide_items);\n\t\t\t} else {\n\t\t\t\t// hide tables\n\t\t\t\tprogTablesHidden = true;\n\t\t\t\tself.$el.add(self.$el.siblings()).addClass('hide-tables');\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').show_items);\n\t\t\t}\n\n\t\t\tif (Boolean(progTablesHidden) !== Boolean(wpmdb_data.prog_tables_hidden)) {\n\t\t\t\twpmdb_data.prog_tables_visibility_changed = true;\n\t\t\t\twpmdb_data.prog_tables_hidden = progTablesHidden;\n\t\t\t}\n\t\t});\n\n\t\t// show progress tables on init if hidden is false\n\t\tif (!wpmdb_data.prog_tables_hidden) {\n\t\t\tthis.$showHideTablesElem.triggerHandler('show-hide-progress-tables');\n\t\t}\n\n\t\t// make sure text reflects current state when showing\n\t\tthis.model.on('change:status activateTab', function () {\n\t\t\tif (wpmdb_data.prog_tables_hidden) {\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').show_items);\n\t\t\t} else {\n\t\t\t\tself.$showHideTablesElem.text(self.model.get('strings').hide_items);\n\t\t\t}\n\t\t});\n\t},\n\tinitPauseBeforeFinalizeElem: function initPauseBeforeFinalizeElem() {\n\t\tthis.$pauseBeforeFinalizeElem = $('.pause-before-finalize');\n\t\tthis.$pauseBeforeFinalizeCheckbox = this.$pauseBeforeFinalizeElem.find('input[type=checkbox]');\n\t\tvar self = this;\n\t\tvar isChecked = false;\n\t\tvar migrationIntent = wpmdb.current_migration.model.get('migrationIntent');\n\n\t\t// make sure checkbox is checked based on current state\n\t\tif (wpmdb_data.pause_before_finalize) {\n\t\t\tisChecked = true;\n\t\t}\n\t\tthis.$pauseBeforeFinalizeCheckbox.prop('checked', isChecked);\n\n\t\t// only display on certain migrations\n\t\tif (-1 !== $.inArray(migrationIntent, ['push', 'pull', 'find_replace', 'import'])) {\n\t\t\tif ('find_replace' === migrationIntent) {\n\t\t\t\t$('#pause-before-finalize-label').text(wpmdb_strings.pause_before_finalize_find_replace);\n\t\t\t}\n\t\t\tthis.$pauseBeforeFinalizeElem.show();\n\t\t} else {\n\t\t\tthis.$pauseBeforeFinalizeElem.hide();\n\t\t}\n\n\t\t// hide on media stage\n\t\twpmdb.current_migration.model.on('change:activeStage', function () {\n\t\t\tif ('media' === wpmdb.current_migration.model.get('activeStageName')) {\n\t\t\t\tself.$pauseBeforeFinalizeElem.hide();\n\t\t\t}\n\t\t});\n\n\t\tthis.$pauseBeforeFinalizeElem.on('click', function () {\n\t\t\tvar pauseBeforeFinalizeValue = Boolean(self.$pauseBeforeFinalizeCheckbox.is(':checked'));\n\t\t\tif (pauseBeforeFinalizeValue !== Boolean(wpmdb_data.pause_before_finalize)) {\n\t\t\t\twpmdb_data.pause_before_finalize_changed = true;\n\t\t\t\twpmdb_data.pause_before_finalize = pauseBeforeFinalizeValue;\n\t\t\t}\n\t\t});\n\t},\n\tinitTabElem: function initTabElem() {\n\t\tvar self = this;\n\t\tthis.$tabElem = $('<a class=stage-tab>').append('<span class=stage-title>' + this.model.get('strings').stage_title + '</span> ').append('<span class=stage-status>' + this.model.get('strings').queued + '</span> ').on('click', function () {\n\t\t\tself.model.activateTab();\n\t\t});\n\t},\n\tupdateProgressElem: function updateProgressElem() {\n\t\tvar percentDone = Math.max(0, this.model.getTotalProgressPercent());\n\t\tvar sizeDone = wpmdb.functions.convertKBSizeToHRFixed(Math.min(this.model.getTotalSizeTransferred(), this.model.get('totalSize')));\n\t\tvar tablesDone = Math.min(this.model.countItemsComplete(), this.model.get('items').length);\n\n\t\tif ('complete' === this.model.get('status') && 0 === this.model.get('totalSize')) {\n\t\t\tpercentDone = 100;\n\t\t\tthis.$showHideTablesElem.fadeOut();\n\t\t}\n\n\t\tthis.$totalProgressElem.find('.percent-complete').text(percentDone);\n\t\tthis.$totalProgressElem.find('.size-complete').text(sizeDone);\n\t\tthis.$totalProgressElem.find('.items-complete').text(wpmdb.functions.wpmdb_add_commas(tablesDone));\n\t\tthis.$totalProgressElem.find('.progress-bar-wrapper .progress-bar').css({ width: percentDone + '%' });\n\t},\n\tupdateStageTotals: function updateStageTotals(itemCount) {\n\t\titemCount = itemCount || this.model.get('items').length;\n\t\tthis.$totalProgressElem.find('.items-total').text(wpmdb.functions.wpmdb_add_commas(itemCount));\n\t\tthis.$totalProgressElem.find('.size-total').text(wpmdb.functions.convertKBSizeToHRFixed(this.model.get('totalSize')));\n\t},\n\tinitializeItemElement: function initializeItemElement(item) {\n\t\tvar itemName = item.name;\n\n\t\tif ('undefined' !== typeof item.displayName) {\n\t\t\titemName = item.displayName;\n\t\t}\n\n\t\tvar $el = $('<div class=\"item-progress\" />');\n\t\tvar $progress = $('<div class=\"progress-bar\"/>').css('width', '0%');\n\t\tvar $title = $('<p>').addClass('item-info').append($('<span class=\"name\" />').text(itemName)).append(' ').append($('<span class=\"size\" />').text('(' + wpmdb.functions.convertKBSizeToHRFixed(item.size) + ')'));\n\n\t\t$el.append($title);\n\t\t$el.append($progress);\n\t\t$el.append('<span class=\"dashicons dashicons-yes\"/>');\n\n\t\t$el.attr('id', 'item-' + item.name);\n\t\t$el.attr('data-stage', this.model.get('name'));\n\n\t\titem.$el = $el;\n\t\titem.$progress = $progress;\n\t\titem.$title = $title;\n\n\t\treturn item;\n\t},\n\tmaybeAddElementToView: function maybeAddElementToView(item) {\n\t\tif (this.visibleDomNodes < this.maxDomNodes) {\n\t\t\t++this.visibleDomNodes;\n\t\t\tthis.$itemsContainer.append(this.initializeItemElement(item).$el);\n\t\t} else {\n\t\t\tthis.queuedElements.push(item);\n\t\t\tif (!this.$truncationNotice) {\n\t\t\t\tthis.showTruncationNotice();\n\t\t\t} else {\n\t\t\t\tthis.updateTruncationNotice();\n\t\t\t}\n\t\t}\n\t},\n\tshowTruncationNotice: function showTruncationNotice() {\n\t\tif (this.$truncationNotice) {\n\t\t\treturn;\n\t\t}\n\t\tthis.$truncationNotice = $('<div class=\"truncation-notice\" >' + wpmdb_strings.progress_items_truncated_msg.replace('%1$s', '<span class=\"hidden-items\">' + wpmdb.functions.wpmdb_add_commas(this.queuedElements.length) + '</span>') + '</div>');\n\t\tthis.$truncationNoticeHiddenItems = this.$truncationNotice.find('.hidden-items');\n\t\tthis.$itemsContainer.after(this.$truncationNotice);\n\t},\n\tupdateTruncationNotice: function updateTruncationNotice() {\n\t\tthis.$truncationNoticeHiddenItems.text(wpmdb.functions.wpmdb_add_commas(this.queuedElements.length));\n\t},\n\tgetNextElementForView: function getNextElementForView($el) {\n\t\tvar queueItem;\n\t\tif (this.queuedElements.length) {\n\t\t\tif ($el) {\n\t\t\t\tthis.queuedElements.push($el);\n\t\t\t}\n\t\t\tqueueItem = this.queuedElements.shift();\n\t\t\tif (queueItem instanceof $) {\n\t\t\t\t$el = queueItem;\n\t\t\t} else {\n\t\t\t\t$el = this.initializeItemElement(queueItem).$el;\n\t\t\t}\n\t\t}\n\t\treturn $el;\n\t},\n\tsetItemProgress: function setItemProgress(item) {\n\n\t\tvar percentDone = Math.min(100, Math.ceil(100 * (item.transferred / item.size)));\n\t\tif (0 === item.size) {\n\t\t\tpercentDone = 100;\n\t\t}\n\t\titem.$progress.css('width', percentDone + '%');\n\t\tif (100 <= percentDone || 0 === item.size) {\n\t\t\tthis.elemComplete(item);\n\t\t}\n\t},\n\telemComplete: function elemComplete(item) {\n\t\tvar $el = item.$el.addClass('complete');\n\n\t\t// skip moving item to end of list if there's only one item in the list\n\t\tif (1 === this.model.get('items').length) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $nextEl = this.getNextElementForView($el);\n\n\t\tvar height = $el.height();\n\t\tvar marginBottom = $el.css('margin-bottom');\n\n\t\tvar $clone = $nextEl.clone().css({ height: 0, marginBottom: 0 }).addClass('clone');\n\t\t$clone.appendTo(this.$itemsContainer);\n\t\t$el.css({ height: height, marginBottom: marginBottom });\n\n\t\tsetTimeout(function () {\n\t\t\t$el.css({ height: 0, marginBottom: 0 });\n\t\t\t$clone.css({ height: height, marginBottom: marginBottom });\n\n\t\t\tsetTimeout(function () {\n\t\t\t\t$el.css({ height: 'auto', marginBottom: marginBottom }).remove();\n\t\t\t\t$clone.remove();\n\t\t\t\tthis.$itemsContainer.find('.item-progress:not(.clone)').last().after($nextEl.css({\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tmarginBottom: marginBottom\n\t\t\t\t}));\n\t\t\t}.bind(this), 250);\n\t\t}.bind(this), 1000);\n\t}\n});\n\nmodule.exports = MigrationProgressStageView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///87\n");

/***/ }),
/* 88 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($, wpmdb) {\n\twpmdb.functions.update_multiselect = function (element, subsites, selected_subsite_ids) {\n\t\t$(element).empty();\n\n\t\tif (0 < Object.keys(subsites).length) {\n\t\t\tvar table_prefix = $.wpmdb.apply_filters('wpmdb_get_table_prefix', null, null);\n\t\t\tvar site_selected = false;\n\t\t\t$.each(subsites, function (blog_id, subsite_path) {\n\t\t\t\tif ($.wpmdb.apply_filters('wpmdb_exclude_subsite', false, blog_id)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar selected = ' ';\n\t\t\t\tif (undefined === selected_subsite_ids || null === selected_subsite_ids || 0 === selected_subsite_ids.length || undefined !== selected_subsite_ids && null !== selected_subsite_ids && 0 < selected_subsite_ids.length && -1 !== $.inArray(blog_id, selected_subsite_ids)) {\n\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t\tsite_selected = true;\n\t\t\t\t}\n\t\t\t\tsubsite_path += ' (' + table_prefix + ('1' !== blog_id ? blog_id + '_' : '') + ')';\n\t\t\t\t$(element).append('<option' + selected + 'value=\"' + blog_id + '\">' + subsite_path + '</option>');\n\t\t\t});\n\n\t\t\t// If nothing selected (maybe IDs differ between saved profile and current config) revert to default of all selected.\n\t\t\tif (false === site_selected) {\n\t\t\t\twpmdb.functions.update_multiselect(element, subsites, []);\n\t\t\t}\n\t\t}\n\t};\n})(jQuery, wpmdb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL211bHRpc2l0ZS5qcz81NjU0Il0sIm5hbWVzIjpbIiQiLCJ3cG1kYiIsImZ1bmN0aW9ucyIsInVwZGF0ZV9tdWx0aXNlbGVjdCIsImVsZW1lbnQiLCJzdWJzaXRlcyIsInNlbGVjdGVkX3N1YnNpdGVfaWRzIiwiZW1wdHkiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwidGFibGVfcHJlZml4IiwiYXBwbHlfZmlsdGVycyIsInNpdGVfc2VsZWN0ZWQiLCJlYWNoIiwiYmxvZ19pZCIsInN1YnNpdGVfcGF0aCIsInNlbGVjdGVkIiwidW5kZWZpbmVkIiwiaW5BcnJheSIsImFwcGVuZCIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxDQUFDLFVBQVVBLENBQVYsRUFBYUMsS0FBYixFQUFxQjtBQUNyQkEsT0FBTUMsU0FBTixDQUFnQkMsa0JBQWhCLEdBQXFDLFVBQVVDLE9BQVYsRUFBbUJDLFFBQW5CLEVBQTZCQyxvQkFBN0IsRUFBb0Q7QUFDeEZOLElBQUdJLE9BQUgsRUFBYUcsS0FBYjs7QUFFQSxNQUFLLElBQUlDLE9BQU9DLElBQVAsQ0FBYUosUUFBYixFQUF3QkssTUFBakMsRUFBMEM7QUFDekMsT0FBTUMsZUFBZVgsRUFBRUMsS0FBRixDQUFRVyxhQUFSLENBQXVCLHdCQUF2QixFQUFpRCxJQUFqRCxFQUF1RCxJQUF2RCxDQUFyQjtBQUNBLE9BQUlDLGdCQUFnQixLQUFwQjtBQUNBYixLQUFFYyxJQUFGLENBQVFULFFBQVIsRUFBa0IsVUFBVVUsT0FBVixFQUFtQkMsWUFBbkIsRUFBa0M7QUFDbkQsUUFBS2hCLEVBQUVDLEtBQUYsQ0FBUVcsYUFBUixDQUF1Qix1QkFBdkIsRUFBZ0QsS0FBaEQsRUFBdURHLE9BQXZELENBQUwsRUFBd0U7QUFDdkU7QUFDQTs7QUFFRCxRQUFJRSxXQUFXLEdBQWY7QUFDQSxRQUFPQyxjQUFjWixvQkFBZCxJQUFzQyxTQUFTQSxvQkFBL0MsSUFBdUUsTUFBTUEscUJBQXFCSSxNQUFwRyxJQUNFUSxjQUFjWixvQkFBZCxJQUFzQyxTQUFTQSxvQkFBL0MsSUFBdUUsSUFBSUEscUJBQXFCSSxNQUFoRyxJQUEwRyxDQUFDLENBQUQsS0FBT1YsRUFBRW1CLE9BQUYsQ0FBV0osT0FBWCxFQUFvQlQsb0JBQXBCLENBRHhILEVBRUU7QUFDRFcsZ0JBQVcsdUJBQVg7QUFDQUoscUJBQWdCLElBQWhCO0FBQ0E7QUFDREcsb0JBQWdCLE9BQU9MLFlBQVAsSUFBMEIsUUFBUUksT0FBVixHQUFzQkEsVUFBVSxHQUFoQyxHQUFzQyxFQUE5RCxJQUFxRSxHQUFyRjtBQUNBZixNQUFHSSxPQUFILEVBQWFnQixNQUFiLENBQXFCLFlBQVlILFFBQVosR0FBdUIsU0FBdkIsR0FBbUNGLE9BQW5DLEdBQTZDLElBQTdDLEdBQW9EQyxZQUFwRCxHQUFtRSxXQUF4RjtBQUNBLElBZEQ7O0FBZ0JBO0FBQ0EsT0FBSyxVQUFVSCxhQUFmLEVBQStCO0FBQzlCWixVQUFNQyxTQUFOLENBQWdCQyxrQkFBaEIsQ0FBb0NDLE9BQXBDLEVBQTZDQyxRQUE3QyxFQUF1RCxFQUF2RDtBQUNBO0FBQ0Q7QUFDRCxFQTNCRDtBQTRCQSxDQTdCRCxFQTZCSWdCLE1BN0JKLEVBNkJZcEIsS0E3QlosRSIsImZpbGUiOiI4OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiggJCwgd3BtZGIgKSB7XG5cdHdwbWRiLmZ1bmN0aW9ucy51cGRhdGVfbXVsdGlzZWxlY3QgPSBmdW5jdGlvbiggZWxlbWVudCwgc3Vic2l0ZXMsIHNlbGVjdGVkX3N1YnNpdGVfaWRzICkge1xuXHRcdCQoIGVsZW1lbnQgKS5lbXB0eSgpO1xuXG5cdFx0aWYgKCAwIDwgT2JqZWN0LmtleXMoIHN1YnNpdGVzICkubGVuZ3RoICkge1xuXHRcdFx0Y29uc3QgdGFibGVfcHJlZml4ID0gJC53cG1kYi5hcHBseV9maWx0ZXJzKCAnd3BtZGJfZ2V0X3RhYmxlX3ByZWZpeCcsIG51bGwsIG51bGwgKTtcblx0XHRcdHZhciBzaXRlX3NlbGVjdGVkID0gZmFsc2U7XG5cdFx0XHQkLmVhY2goIHN1YnNpdGVzLCBmdW5jdGlvbiggYmxvZ19pZCwgc3Vic2l0ZV9wYXRoICkge1xuXHRcdFx0XHRpZiAoICQud3BtZGIuYXBwbHlfZmlsdGVycyggJ3dwbWRiX2V4Y2x1ZGVfc3Vic2l0ZScsIGZhbHNlLCBibG9nX2lkICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIHNlbGVjdGVkID0gJyAnO1xuXHRcdFx0XHRpZiAoICggdW5kZWZpbmVkID09PSBzZWxlY3RlZF9zdWJzaXRlX2lkcyB8fCBudWxsID09PSBzZWxlY3RlZF9zdWJzaXRlX2lkcyB8fCAwID09PSBzZWxlY3RlZF9zdWJzaXRlX2lkcy5sZW5ndGggKSB8fFxuXHRcdFx0XHQgICAgICggdW5kZWZpbmVkICE9PSBzZWxlY3RlZF9zdWJzaXRlX2lkcyAmJiBudWxsICE9PSBzZWxlY3RlZF9zdWJzaXRlX2lkcyAmJiAwIDwgc2VsZWN0ZWRfc3Vic2l0ZV9pZHMubGVuZ3RoICYmIC0xICE9PSAkLmluQXJyYXkoIGJsb2dfaWQsIHNlbGVjdGVkX3N1YnNpdGVfaWRzICkgKVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRzZWxlY3RlZCA9ICcgc2VsZWN0ZWQ9XCJzZWxlY3RlZFwiICc7XG5cdFx0XHRcdFx0c2l0ZV9zZWxlY3RlZCA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3Vic2l0ZV9wYXRoICs9ICcgKCcgKyB0YWJsZV9wcmVmaXggKyAoICggJzEnICE9PSBibG9nX2lkICkgPyBibG9nX2lkICsgJ18nIDogJycgKSArICcpJztcblx0XHRcdFx0JCggZWxlbWVudCApLmFwcGVuZCggJzxvcHRpb24nICsgc2VsZWN0ZWQgKyAndmFsdWU9XCInICsgYmxvZ19pZCArICdcIj4nICsgc3Vic2l0ZV9wYXRoICsgJzwvb3B0aW9uPicgKTtcblx0XHRcdH0gKTtcblxuXHRcdFx0Ly8gSWYgbm90aGluZyBzZWxlY3RlZCAobWF5YmUgSURzIGRpZmZlciBiZXR3ZWVuIHNhdmVkIHByb2ZpbGUgYW5kIGN1cnJlbnQgY29uZmlnKSByZXZlcnQgdG8gZGVmYXVsdCBvZiBhbGwgc2VsZWN0ZWQuXG5cdFx0XHRpZiAoIGZhbHNlID09PSBzaXRlX3NlbGVjdGVkICkge1xuXHRcdFx0XHR3cG1kYi5mdW5jdGlvbnMudXBkYXRlX211bHRpc2VsZWN0KCBlbGVtZW50LCBzdWJzaXRlcywgW10gKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59KSggalF1ZXJ5LCB3cG1kYiApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9qcy9tdWx0aXNpdGUuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88\n");

/***/ }),
/* 89 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\n(function ($) {\n\n\tvar doing_check_licence = false;\n\tvar fade_duration = 650;\n\n\tvar admin_url = ajaxurl.replace('/admin-ajax.php', '');\n\tvar spinner_url = admin_url + '/images/spinner';\n\tvar spinner;\n\tif (2 < window.devicePixelRatio) {\n\t\tspinner_url += '-2x';\n\t}\n\tspinner_url += '.gif';\n\tspinner = $('<img src=\"' + spinner_url + '\" alt=\"\" class=\"check-licence-spinner\" />');\n\n\t$(document).ready(function () {\n\n\t\t$('body').on('click', '.check-my-licence-again', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(this).blur();\n\n\t\t\tif (doing_check_licence) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tdoing_check_licence = true;\n\n\t\t\t$(this).hide();\n\t\t\tspinner.insertAfter(this);\n\n\t\t\tvar check_again_link = ' <a class=\"check-my-licence-again\" href=\"#\">' + wpmdb_update_strings.check_license_again + '</a>';\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_check_licence',\n\t\t\t\t\tnonce: wpmdb_nonces.check_licence,\n\t\t\t\t\tcontext: 'update'\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tdoing_check_licence = false;\n\t\t\t\t\t$('.wpmdb-licence-error-notice').fadeOut(fade_duration, function () {\n\t\t\t\t\t\t$('.wpmdb-licence-error-notice').empty().html(wpmdb_update_strings.license_check_problem + check_again_link).fadeIn(fade_duration);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tdoing_check_licence = false;\n\t\t\t\t\tif ('undefined' !== typeof data.errors) {\n\t\t\t\t\t\tvar msg = '';\n\t\t\t\t\t\tfor (var key in data.errors) {\n\t\t\t\t\t\t\tmsg += data.errors[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('.wpmdb-licence-error-notice').fadeOut(fade_duration, function () {\n\t\t\t\t\t\t\t$('.check-licence-spinner').remove();\n\t\t\t\t\t\t\t$('.wpmdb-licence-error-notice').empty().html(msg).fadeIn(fade_duration);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Success\n\t\t\t\t\t\t// Fade out, empty wpmdb custom error content, swap back in the original wordpress upgrade message, fade in\n\t\t\t\t\t\t$('.wpmdbpro-custom-visible').fadeOut(fade_duration, function () {\n\t\t\t\t\t\t\t$('.check-licence-spinner').remove();\n\t\t\t\t\t\t\t$('.wpmdbpro-custom-visible').empty().html($('.wpmdb-original-update-row').html()).fadeIn(fade_duration);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('.wpmdbpro-custom').prev().addClass('wpmdbpro-has-message');\n\t});\n})(jQuery);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL2pzL3BsdWdpbi11cGRhdGUuanM/ODNjMSJdLCJuYW1lcyI6WyIkIiwiZG9pbmdfY2hlY2tfbGljZW5jZSIsImZhZGVfZHVyYXRpb24iLCJhZG1pbl91cmwiLCJhamF4dXJsIiwicmVwbGFjZSIsInNwaW5uZXJfdXJsIiwic3Bpbm5lciIsIndpbmRvdyIsImRldmljZVBpeGVsUmF0aW8iLCJkb2N1bWVudCIsInJlYWR5Iiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJibHVyIiwiaGlkZSIsImluc2VydEFmdGVyIiwiY2hlY2tfYWdhaW5fbGluayIsIndwbWRiX3VwZGF0ZV9zdHJpbmdzIiwiY2hlY2tfbGljZW5zZV9hZ2FpbiIsImFqYXgiLCJ1cmwiLCJ0eXBlIiwiZGF0YVR5cGUiLCJjYWNoZSIsImRhdGEiLCJhY3Rpb24iLCJub25jZSIsIndwbWRiX25vbmNlcyIsImNoZWNrX2xpY2VuY2UiLCJjb250ZXh0IiwiZXJyb3IiLCJqcVhIUiIsInRleHRTdGF0dXMiLCJlcnJvclRocm93biIsImZhZGVPdXQiLCJlbXB0eSIsImh0bWwiLCJsaWNlbnNlX2NoZWNrX3Byb2JsZW0iLCJmYWRlSW4iLCJzdWNjZXNzIiwiZXJyb3JzIiwibXNnIiwia2V5IiwicmVtb3ZlIiwicHJldiIsImFkZENsYXNzIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLENBQUMsVUFBVUEsQ0FBVixFQUFjOztBQUVkLEtBQUlDLHNCQUFzQixLQUExQjtBQUNBLEtBQUlDLGdCQUFnQixHQUFwQjs7QUFFQSxLQUFJQyxZQUFZQyxRQUFRQyxPQUFSLENBQWlCLGlCQUFqQixFQUFvQyxFQUFwQyxDQUFoQjtBQUNBLEtBQUlDLGNBQWNILFlBQVksaUJBQTlCO0FBQ0EsS0FBSUksT0FBSjtBQUNBLEtBQUssSUFBSUMsT0FBT0MsZ0JBQWhCLEVBQW1DO0FBQ2xDSCxpQkFBZSxLQUFmO0FBQ0E7QUFDREEsZ0JBQWUsTUFBZjtBQUNBQyxXQUFVUCxFQUFHLGVBQWVNLFdBQWYsR0FBNkIsMkNBQWhDLENBQVY7O0FBRUFOLEdBQUdVLFFBQUgsRUFBY0MsS0FBZCxDQUFxQixZQUFXOztBQUUvQlgsSUFBRyxNQUFILEVBQVlZLEVBQVosQ0FBZ0IsT0FBaEIsRUFBeUIseUJBQXpCLEVBQW9ELFVBQVVDLENBQVYsRUFBYztBQUNqRUEsS0FBRUMsY0FBRjtBQUNBZCxLQUFHLElBQUgsRUFBVWUsSUFBVjs7QUFFQSxPQUFLZCxtQkFBTCxFQUEyQjtBQUMxQixXQUFPLEtBQVA7QUFDQTs7QUFFREEseUJBQXNCLElBQXRCOztBQUVBRCxLQUFHLElBQUgsRUFBVWdCLElBQVY7QUFDQVQsV0FBUVUsV0FBUixDQUFxQixJQUFyQjs7QUFFQSxPQUFJQyxtQkFBbUIsaURBQWlEQyxxQkFBcUJDLG1CQUF0RSxHQUE0RixNQUFuSDs7QUFFQXBCLEtBQUVxQixJQUFGLENBQVE7QUFDUEMsU0FBS2xCLE9BREU7QUFFUG1CLFVBQU0sTUFGQztBQUdQQyxjQUFVLE1BSEg7QUFJUEMsV0FBTyxLQUpBO0FBS1BDLFVBQU07QUFDTEMsYUFBUSxxQkFESDtBQUVMQyxZQUFPQyxhQUFhQyxhQUZmO0FBR0xDLGNBQVM7QUFISixLQUxDO0FBVVBDLFdBQU8sZUFBVUMsS0FBVixFQUFpQkMsVUFBakIsRUFBNkJDLFdBQTdCLEVBQTJDO0FBQ2pEbEMsMkJBQXNCLEtBQXRCO0FBQ0FELE9BQUcsNkJBQUgsRUFBbUNvQyxPQUFuQyxDQUE0Q2xDLGFBQTVDLEVBQTJELFlBQVc7QUFDckVGLFFBQUcsNkJBQUgsRUFBbUNxQyxLQUFuQyxHQUNFQyxJQURGLENBQ1FuQixxQkFBcUJvQixxQkFBckIsR0FBNkNyQixnQkFEckQsRUFFRXNCLE1BRkYsQ0FFVXRDLGFBRlY7QUFHQSxNQUpEO0FBS0EsS0FqQk07QUFrQlB1QyxhQUFTLGlCQUFVZixJQUFWLEVBQWlCO0FBQ3pCekIsMkJBQXNCLEtBQXRCO0FBQ0EsU0FBSyxnQkFBZ0IsT0FBT3lCLEtBQUtnQixNQUFqQyxFQUEwQztBQUN6QyxVQUFJQyxNQUFNLEVBQVY7QUFDQSxXQUFNLElBQUlDLEdBQVYsSUFBaUJsQixLQUFLZ0IsTUFBdEIsRUFBK0I7QUFDOUJDLGNBQU9qQixLQUFLZ0IsTUFBTCxDQUFhRSxHQUFiLENBQVA7QUFDQTtBQUNENUMsUUFBRyw2QkFBSCxFQUFtQ29DLE9BQW5DLENBQTRDbEMsYUFBNUMsRUFBMkQsWUFBVztBQUNyRUYsU0FBRyx3QkFBSCxFQUE4QjZDLE1BQTlCO0FBQ0E3QyxTQUFHLDZCQUFILEVBQW1DcUMsS0FBbkMsR0FDRUMsSUFERixDQUNRSyxHQURSLEVBRUVILE1BRkYsQ0FFVXRDLGFBRlY7QUFHQSxPQUxEO0FBTUEsTUFYRCxNQVdPOztBQUVOO0FBQ0E7QUFDQUYsUUFBRywwQkFBSCxFQUFnQ29DLE9BQWhDLENBQXlDbEMsYUFBekMsRUFBd0QsWUFBVztBQUNsRUYsU0FBRyx3QkFBSCxFQUE4QjZDLE1BQTlCO0FBQ0E3QyxTQUFHLDBCQUFILEVBQWdDcUMsS0FBaEMsR0FDRUMsSUFERixDQUNRdEMsRUFBRyw0QkFBSCxFQUFrQ3NDLElBQWxDLEVBRFIsRUFFRUUsTUFGRixDQUVVdEMsYUFGVjtBQUdBLE9BTEQ7QUFNQTtBQUNEO0FBMUNNLElBQVI7QUE2Q0EsR0E1REQ7O0FBOERBRixJQUFHLGtCQUFILEVBQXdCOEMsSUFBeEIsR0FBK0JDLFFBQS9CLENBQXlDLHNCQUF6QztBQUVBLEVBbEVEO0FBbUVBLENBakZELEVBaUZJQyxNQWpGSixFIiwiZmlsZSI6Ijg5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCAkICkge1xuXG5cdHZhciBkb2luZ19jaGVja19saWNlbmNlID0gZmFsc2U7XG5cdHZhciBmYWRlX2R1cmF0aW9uID0gNjUwO1xuXG5cdHZhciBhZG1pbl91cmwgPSBhamF4dXJsLnJlcGxhY2UoICcvYWRtaW4tYWpheC5waHAnLCAnJyApO1xuXHR2YXIgc3Bpbm5lcl91cmwgPSBhZG1pbl91cmwgKyAnL2ltYWdlcy9zcGlubmVyJztcblx0dmFyIHNwaW5uZXI7XG5cdGlmICggMiA8IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvICkge1xuXHRcdHNwaW5uZXJfdXJsICs9ICctMngnO1xuXHR9XG5cdHNwaW5uZXJfdXJsICs9ICcuZ2lmJztcblx0c3Bpbm5lciA9ICQoICc8aW1nIHNyYz1cIicgKyBzcGlubmVyX3VybCArICdcIiBhbHQ9XCJcIiBjbGFzcz1cImNoZWNrLWxpY2VuY2Utc3Bpbm5lclwiIC8+JyApO1xuXG5cdCQoIGRvY3VtZW50ICkucmVhZHkoIGZ1bmN0aW9uKCkge1xuXG5cdFx0JCggJ2JvZHknICkub24oICdjbGljaycsICcuY2hlY2stbXktbGljZW5jZS1hZ2FpbicsIGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0JCggdGhpcyApLmJsdXIoKTtcblxuXHRcdFx0aWYgKCBkb2luZ19jaGVja19saWNlbmNlICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGRvaW5nX2NoZWNrX2xpY2VuY2UgPSB0cnVlO1xuXG5cdFx0XHQkKCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0c3Bpbm5lci5pbnNlcnRBZnRlciggdGhpcyApO1xuXG5cdFx0XHR2YXIgY2hlY2tfYWdhaW5fbGluayA9ICcgPGEgY2xhc3M9XCJjaGVjay1teS1saWNlbmNlLWFnYWluXCIgaHJlZj1cIiNcIj4nICsgd3BtZGJfdXBkYXRlX3N0cmluZ3MuY2hlY2tfbGljZW5zZV9hZ2FpbiArICc8L2E+JztcblxuXHRcdFx0JC5hamF4KCB7XG5cdFx0XHRcdHVybDogYWpheHVybCxcblx0XHRcdFx0dHlwZTogJ1BPU1QnLFxuXHRcdFx0XHRkYXRhVHlwZTogJ2pzb24nLFxuXHRcdFx0XHRjYWNoZTogZmFsc2UsXG5cdFx0XHRcdGRhdGE6IHtcblx0XHRcdFx0XHRhY3Rpb246ICd3cG1kYl9jaGVja19saWNlbmNlJyxcblx0XHRcdFx0XHRub25jZTogd3BtZGJfbm9uY2VzLmNoZWNrX2xpY2VuY2UsXG5cdFx0XHRcdFx0Y29udGV4dDogJ3VwZGF0ZSdcblx0XHRcdFx0fSxcblx0XHRcdFx0ZXJyb3I6IGZ1bmN0aW9uKCBqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24gKSB7XG5cdFx0XHRcdFx0ZG9pbmdfY2hlY2tfbGljZW5jZSA9IGZhbHNlO1xuXHRcdFx0XHRcdCQoICcud3BtZGItbGljZW5jZS1lcnJvci1ub3RpY2UnICkuZmFkZU91dCggZmFkZV9kdXJhdGlvbiwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHQkKCAnLndwbWRiLWxpY2VuY2UtZXJyb3Itbm90aWNlJyApLmVtcHR5KClcblx0XHRcdFx0XHRcdFx0Lmh0bWwoIHdwbWRiX3VwZGF0ZV9zdHJpbmdzLmxpY2Vuc2VfY2hlY2tfcHJvYmxlbSArIGNoZWNrX2FnYWluX2xpbmsgKVxuXHRcdFx0XHRcdFx0XHQuZmFkZUluKCBmYWRlX2R1cmF0aW9uICk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRzdWNjZXNzOiBmdW5jdGlvbiggZGF0YSApIHtcblx0XHRcdFx0XHRkb2luZ19jaGVja19saWNlbmNlID0gZmFsc2U7XG5cdFx0XHRcdFx0aWYgKCAndW5kZWZpbmVkJyAhPT0gdHlwZW9mIGRhdGEuZXJyb3JzICkge1xuXHRcdFx0XHRcdFx0dmFyIG1zZyA9ICcnO1xuXHRcdFx0XHRcdFx0Zm9yICggdmFyIGtleSBpbiBkYXRhLmVycm9ycyApIHtcblx0XHRcdFx0XHRcdFx0bXNnICs9IGRhdGEuZXJyb3JzWyBrZXkgXTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdCQoICcud3BtZGItbGljZW5jZS1lcnJvci1ub3RpY2UnICkuZmFkZU91dCggZmFkZV9kdXJhdGlvbiwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdCQoICcuY2hlY2stbGljZW5jZS1zcGlubmVyJyApLnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0XHQkKCAnLndwbWRiLWxpY2VuY2UtZXJyb3Itbm90aWNlJyApLmVtcHR5KClcblx0XHRcdFx0XHRcdFx0XHQuaHRtbCggbXNnIClcblx0XHRcdFx0XHRcdFx0XHQuZmFkZUluKCBmYWRlX2R1cmF0aW9uICk7XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VjY2Vzc1xuXHRcdFx0XHRcdFx0Ly8gRmFkZSBvdXQsIGVtcHR5IHdwbWRiIGN1c3RvbSBlcnJvciBjb250ZW50LCBzd2FwIGJhY2sgaW4gdGhlIG9yaWdpbmFsIHdvcmRwcmVzcyB1cGdyYWRlIG1lc3NhZ2UsIGZhZGUgaW5cblx0XHRcdFx0XHRcdCQoICcud3BtZGJwcm8tY3VzdG9tLXZpc2libGUnICkuZmFkZU91dCggZmFkZV9kdXJhdGlvbiwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdCQoICcuY2hlY2stbGljZW5jZS1zcGlubmVyJyApLnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0XHQkKCAnLndwbWRicHJvLWN1c3RvbS12aXNpYmxlJyApLmVtcHR5KClcblx0XHRcdFx0XHRcdFx0XHQuaHRtbCggJCggJy53cG1kYi1vcmlnaW5hbC11cGRhdGUtcm93JyApLmh0bWwoKSApXG5cdFx0XHRcdFx0XHRcdFx0LmZhZGVJbiggZmFkZV9kdXJhdGlvbiApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXG5cdFx0fSApO1xuXG5cdFx0JCggJy53cG1kYnByby1jdXN0b20nICkucHJldigpLmFkZENsYXNzKCAnd3BtZGJwcm8taGFzLW1lc3NhZ2UnICk7XG5cblx0fSApO1xufSkoIGpRdWVyeSApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9qcy9wbHVnaW4tdXBkYXRlLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///89\n");

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n'use strict';\n\nvar _wpmdbGlobals = __webpack_require__(29);\n\nvar _wpmdbGlobals2 = _interopRequireDefault(_wpmdbGlobals);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar globals = new _wpmdbGlobals2.default();\n\nvar wpmdb = window.wpmdb || {};\n\n(function ($, wpmdb) {\n\n\twpmdb.migration_progress_controller = __webpack_require__(91);\n\twpmdb.current_migration = null;\n\twpmdb.migration_selection = wpmdb.functions.wpmdb_migration_type();\n\n\twindow.onbeforeunload = function (e) {\n\t\tif ('import' === wpmdb.functions.wpmdb_migration_type() && !$('.step-two').is(':visible')) {\n\t\t\twpmdb.functions.remove_localStorage_form_data();\n\t\t}\n\n\t\tif (globals.currently_migrating) {\n\t\t\te = e || window.event;\n\n\t\t\t// For IE and Firefox prior to version 4\n\t\t\tif (e) {\n\t\t\t\te.returnValue = wpmdb_strings.sure;\n\t\t\t}\n\n\t\t\t// For Safari\n\t\t\treturn wpmdb_strings.sure;\n\t\t}\n\t};\n\n\twpmdb.functions.exclude_post_types_warning = function () {\n\t\tvar excluded_post_types = $('#select-post-types').val();\n\t\tvar excluded_post_types_text = '';\n\t\tvar $exclude_post_types_warning = $('.exclude-post-types-warning');\n\n\t\tif (excluded_post_types) {\n\t\t\texcluded_post_types_text = '<code>' + excluded_post_types.join('</code>, <code>') + '</code>';\n\t\t\t$('.excluded-post-types').html(excluded_post_types_text);\n\n\t\t\tif ('0' === $exclude_post_types_warning.css('opacity')) {\n\t\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideDown(200).animate({ opacity: 1 });\n\t\t\t}\n\t\t} else {\n\t\t\t$exclude_post_types_warning.css({ opacity: 0 }).slideUp(200).animate({ opacity: 0 });\n\t\t}\n\t};\n\n\t//Main method that shows migration progress in the UI\n\twpmdb.functions.migrate_table_recursive = function (current_row, primary_keys, iterator) {\n\t\tvar i = iterator || 0;\n\n\t\tif (i >= globals.tables_to_migrate.length) {\n\n\t\t\tif ('upload' === globals.stage && wpmdb.current_migration.model.getStageItems('find_replace').length) {\n\t\t\t\tglobals.stage = 'find_replace';\n\t\t\t\tglobals.tables_to_migrate = wpmdb.current_migration.model.getStageItems('find_replace', 'name');\n\t\t\t\tglobals.tables_to_migrate = globals.tables_to_migrate.map(function (table) {\n\t\t\t\t\treturn '_mig_' + table;\n\t\t\t\t});\n\t\t\t\ti = 0;\n\t\t\t} else if ('backup' === globals.stage) {\n\n\t\t\t\tif (-1 !== $.inArray(globals.migration_intent, ['push', 'pull'])) {\n\t\t\t\t\tglobals.stage = 'migrate';\n\t\t\t\t} else if ('import' === globals.migration_intent) {\n\t\t\t\t\tglobals.stage = 'upload';\n\t\t\t\t} else {\n\t\t\t\t\tglobals.stage = globals.migration_intent;\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.model.setActiveStage(globals.stage);\n\n\t\t\t\tif ('find_replace' !== globals.stage && 'migrate' !== globals.stage) {\n\t\t\t\t\twpmdb.functions.wpmdb_call_next_hook();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\ti = 0;\n\n\t\t\t\t// should get from model\n\t\t\t\tglobals.tables_to_migrate = wpmdb.functions.get_tables_to_migrate(null, null);\n\t\t\t} else {\n\t\t\t\t$('.progress-label').removeClass('label-visible');\n\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_before_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete);\n\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.wpmdb_flush);\n\t\t\t\twpmdb.common.hooks = $.wpmdb.apply_filters('wpmdb_after_migration_complete_hooks', wpmdb.common.hooks);\n\t\t\t\twpmdb.common.hooks.push(wpmdb.functions.migration_complete_events);\n\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tvar last_table = 0;\n\t\tif (i === globals.tables_to_migrate.length - 1) {\n\t\t\tlast_table = 1;\n\t\t}\n\n\t\tvar gzip = 0;\n\t\tif (-1 !== $.inArray(globals.migration_intent, ['push', 'pull']) && 1 === parseInt(wpmdb.common.connection_data.gzip)) {\n\t\t\tgzip = 1;\n\t\t}\n\n\t\tvar request_data = {\n\t\t\taction: 'wpmdb_migrate_table',\n\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\ttable: globals.tables_to_migrate[i],\n\t\t\tstage: globals.stage,\n\t\t\tcurrent_row: current_row,\n\t\t\tlast_table: last_table,\n\t\t\tprimary_keys: primary_keys,\n\t\t\tgzip: gzip,\n\t\t\tnonce: wpmdb_data.nonces.migrate_table\n\t\t};\n\n\t\tif (-1 !== $.inArray(globals.migration_intent, ['push', 'pull'])) {\n\t\t\trequest_data.bottleneck = wpmdb.common.connection_data.bottleneck;\n\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t}\n\n\t\tif (wpmdb.common.connection_data && wpmdb.common.connection_data.path_current_site && wpmdb.common.connection_data.domain) {\n\t\t\trequest_data.path_current_site = wpmdb.common.connection_data.path_current_site;\n\t\t\trequest_data.domain_current_site = wpmdb.common.connection_data.domain;\n\t\t}\n\n\t\tglobals.doing_ajax = true;\n\n\t\t$.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'text',\n\t\t\tcache: false,\n\t\t\ttimeout: 0,\n\t\t\tdata: request_data,\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\tvar progress_text = wpmdb_strings.table_process_problem + ' ' + globals.tables_to_migrate[i] + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText;\n\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, progress_text, 'error');\n\n\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\tconsole.log(jqXHR);\n\t\t\t\tconsole.log(textStatus);\n\t\t\t\tconsole.log(errorThrown);\n\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t},\n\t\t\tsuccess: function success(data) {\n\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\tdata = $.trim(data);\n\t\t\t\tvar row_information = wpmdb.functions.wpmdb_parse_json(data);\n\t\t\t\tvar error_text = '';\n\n\t\t\t\tif (false === row_information || null === row_information) {\n\n\t\t\t\t\t// should update model\n\t\t\t\t\tif ('' === data || null === data) {\n\t\t\t\t\t\terror_text = wpmdb_strings.table_process_problem_empty_response + ' ' + globals.tables_to_migrate[i];\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror_text = globals.get_ajax_errors(data, null, null);\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, error_text, 'error');\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ('undefined' !== typeof row_information.wpmdb_error && 1 === row_information.wpmdb_error) {\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, row_information.body, 'error');\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar item_name = globals.tables_to_migrate[i];\n\t\t\t\tif ('import' === globals.migration_intent && 'find_replace' === globals.stage) {\n\t\t\t\t\titem_name = item_name.replace(wpmdb_data.this_temp_prefix, '');\n\t\t\t\t}\n\n\t\t\t\t//successful iteration\n\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\twpmdb.current_migration.model.getStageModel(globals.stage).setItemRowsTransferred(item_name, row_information.current_row);\n\n\t\t\t\t// We need the returned file name for delivery or display to the user.\n\t\t\t\tif (1 === last_table && 'savefile' === globals.migration_intent) {\n\t\t\t\t\tif ('undefined' !== typeof row_information.dump_filename) {\n\t\t\t\t\t\tglobals.dump_filename = row_information.dump_filename;\n\t\t\t\t\t}\n\t\t\t\t\tif ('undefined' !== typeof row_information.dump_path) {\n\t\t\t\t\t\tglobals.dump_path = row_information.dump_path;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (-1 === parseInt(row_information.current_row)) {\n\t\t\t\t\ti++;\n\t\t\t\t\trow_information.current_row = '';\n\t\t\t\t\trow_information.primary_keys = '';\n\t\t\t\t}\n\n\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\tfn: wpmdb.functions.migrate_table_recursive,\n\t\t\t\t\targs: [row_information.current_row, row_information.primary_keys, i]\n\t\t\t\t};\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\t\t});\n\t};\n\n\twpmdb.functions.migration_complete_events = function () {\n\t\tif (false === wpmdb.common.migration_error) {\n\t\t\tif ('' === wpmdb.common.non_fatal_errors) {\n\t\t\t\tif ('savefile' !== globals.migration_intent && true === $('#save_computer').is(':checked')) {\n\t\t\t\t\twpmdb.current_migration.setText();\n\t\t\t\t}\n\n\t\t\t\tglobals.completed_msg = globals.completed_msg + '&nbsp;<div class=\"dashicons dashicons-yes\"></div>';\n\n\t\t\t\tif (true === globals.migration_cancelled) {\n\t\t\t\t\tvar cancel_success = wpmdb_strings.migration_cancelled_success;\n\n\t\t\t\t\tif ('find_replace' === globals.migration_intent) {\n\t\t\t\t\t\tcancel_success = wpmdb_strings.find_replace_cancelled_success;\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.current_migration.setState(globals.completed_msg, cancel_success, 'cancelled');\n\t\t\t\t} else {\n\t\t\t\t\twpmdb.current_migration.setState(globals.completed_msg, '', 'complete');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.completed_with_some_errors, wpmdb.common.non_fatal_errors, 'error');\n\t\t\t}\n\t\t}\n\n\t\t$('.migration-controls').addClass('hidden');\n\n\t\t// reset migration variables so consecutive migrations work correctly\n\t\twpmdb.common.hooks = [];\n\t\twpmdb.common.call_stack = [];\n\t\twpmdb.common.migration_error = false;\n\t\tglobals.currently_migrating = false;\n\t\tglobals.migration_completed = true;\n\t\tglobals.migration_paused = false;\n\t\tglobals.migration_cancelled = false;\n\t\tglobals.doing_ajax = false;\n\t\twpmdb.common.non_fatal_errors = '';\n\t\tglobals.tables_to_migrate = [];\n\n\t\t$('.progress-label').remove();\n\t\t$('.migration-progress-ajax-spinner').remove();\n\t\t$('.close-progress-content').show();\n\t\t$('#overlay').css('cursor', 'pointer');\n\t\twpmdb.current_migration.model.setMigrationComplete();\n\t};\n\n\twpmdb.functions.migration_complete = function () {\n\n\t\t$('.migration-controls').addClass('hidden');\n\n\t\tif ('savefile' === globals.migration_intent) {\n\t\t\tglobals.currently_migrating = false;\n\t\t\tvar migrate_complete_text = wpmdb_strings.migration_complete;\n\t\t\tif ($('#save_computer').is(':checked')) {\n\t\t\t\tvar url = wpmdb_data.this_download_url + encodeURIComponent(globals.dump_filename);\n\t\t\t\tif ($('#gzip_file').is(':checked')) {\n\t\t\t\t\turl += '&gzip=1';\n\t\t\t\t}\n\t\t\t\twindow.location = url;\n\t\t\t} else {\n\t\t\t\tmigrate_complete_text = wpmdb_strings.completed_dump_located_at + ' ' + globals.dump_path;\n\t\t\t}\n\n\t\t\tif (false === wpmdb.common.migration_error) {\n\n\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\twpmdb.current_migration.setState(globals.completed_msg, migrate_complete_text, 'complete');\n\t\t\t}\n\t\t} else {\n\t\t\t// rename temp tables, delete old tables\n\n\t\t\twpmdb.current_migration.setState(null, wpmdb_strings.finalizing_migration, 'finalizing');\n\n\t\t\tvar request_data = {\n\t\t\t\taction: 'wpmdb_finalize_migration',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\ttables: globals.tables_to_migrate.join(','),\n\t\t\t\tnonce: wpmdb_data.nonces.finalize_migration\n\t\t\t};\n\n\t\t\tif (-1 !== $.inArray(globals.migration_intent, ['push', 'pull'])) {\n\t\t\t\trequest_data.prefix = wpmdb.common.connection_data.prefix;\n\t\t\t}\n\n\t\t\tglobals.doing_ajax = true;\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: request_data,\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.finalize_tables_problem, 'error');\n\n\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\twpmdb.functions.wpmdb_flush = function () {\n\t\tif ('savefile' !== globals.migration_intent) {\n\t\t\twpmdb.current_migration.setText(wpmdb_strings.flushing);\n\t\t\tglobals.doing_ajax = true;\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_flush',\n\t\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\t\tnonce: wpmdb_data.nonces.flush\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, wpmdb_strings.flush_problem, 'error');\n\n\t\t\t\t\talert(jqXHR + ' : ' + textStatus + ' : ' + errorThrown);\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tif ('1' !== $.trim(data)) {\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data, 'error');\n\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twpmdb.common.next_step_in_migration = { fn: wpmdb.functions.wpmdb_call_next_hook };\n\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\twpmdb.functions.execute_next_step = function () {\n\t\tvar instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tvar run_fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n\n\t\t// if delay is set, set a timeout for delay to recall this function, then return\n\t\tif (0 < globals.delay_between_requests && false === globals.flag_skip_delay) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tglobals.flag_skip_delay = true;\n\t\t\t\twpmdb.functions.execute_next_step(instance);\n\t\t\t}, globals.delay_between_requests);\n\t\t\treturn;\n\t\t} else {\n\t\t\tglobals.flag_skip_delay = false;\n\t\t}\n\n\t\tif (true === globals.migration_paused) {\n\t\t\t$('.migration-progress-ajax-spinner').hide();\n\n\t\t\t// Pause the timer\n\t\t\twpmdb.current_migration.pauseTimer();\n\n\t\t\tvar pause_text = '';\n\t\t\tif (true === globals.is_auto_pause_before_finalize) {\n\t\t\t\tpause_text = wpmdb_strings.paused_before_finalize;\n\t\t\t\tglobals.is_auto_pause_before_finalize = false;\n\n\t\t\t\tif ('find_replace' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\tpause_text = wpmdb_strings.find_replace_paused_before_finalize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpause_text = wpmdb_strings.paused;\n\t\t\t}\n\n\t\t\twpmdb.current_migration.setState(null, pause_text, 'paused');\n\n\t\t\t// Re-bind Pause/Resume button to Resume when we are finally Paused\n\t\t\t$('body').on('click', '.pause-resume', function (event) {\n\t\t\t\tglobals.set_pause_resume_button(event, instance);\n\t\t\t});\n\t\t\t$('body').on('click', '.cancel', function (event) {\n\t\t\t\tglobals.cancel_migration(event);\n\t\t\t});\n\t\t\t$('.pause-resume').html(wpmdb_strings.resume);\n\t\t} else if (true === globals.migration_cancelled) {\n\t\t\tglobals.migration_intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\tvar progress_msg;\n\n\t\t\tif ('savefile' === globals.migration_intent) {\n\t\t\t\tprogress_msg = wpmdb_strings.removing_local_sql;\n\t\t\t} else if ('pull' === globals.migration_intent) {\n\t\t\t\tif ('backup' === globals.stage) {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_backup;\n\t\t\t\t} else {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_local_temp_tables;\n\t\t\t\t}\n\t\t\t} else if ('push' === globals.migration_intent) {\n\t\t\t\tif ('backup' === globals.stage) {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_sql;\n\t\t\t\t} else {\n\t\t\t\t\tprogress_msg = wpmdb_strings.removing_remote_temp_tables;\n\t\t\t\t}\n\t\t\t}\n\t\t\twpmdb.current_migration.setText(progress_msg);\n\n\t\t\tvar request_data = {\n\t\t\t\taction: 'wpmdb_cancel_migration',\n\t\t\t\tmigration_state_id: wpmdb.migration_state_id,\n\t\t\t\tnonce: wpmdb_data.nonces.cancel_migration\n\t\t\t};\n\n\t\t\tglobals.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: request_data,\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, wpmdb_strings.manually_remove_temp_files + '<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + ':<br />' + jqXHR.responseText, 'error');\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tdata = $.trim(data);\n\n\t\t\t\t\tif ('push' === globals.migration_intent && '1' !== data || 'push' !== globals.migration_intent && '' !== data) {\n\n\t\t\t\t\t\tif ('undefined' !== typeof data && 'undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t\tdata = data.wpmdb_error;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_cancellation_failed, data, 'error');\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tglobals.completed_msg = wpmdb_strings.migration_cancelled;\n\n\t\t\t\t\tif ('find_replace' === globals.migration_intent) {\n\t\t\t\t\t\tglobals.completed_msg = wpmdb_strings.find_replace_cancelled;\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\twpmdb.current_migration.setStatus('cancelled');\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif (run_fn) {\n\t\t\t\twpmdb.common.next_step_in_migration.fn.apply(instance, wpmdb.common.next_step_in_migration.args);\n\t\t\t}\n\t\t}\n\t};\n\n\twpmdb.functions.maybe_show_prefix_notice = function (prefix) {\n\t\tvar $prefix_notice = $('.prefix-notice');\n\n\t\t$prefix_notice.hide();\n\n\t\tif (prefix !== wpmdb_data.this_prefix) {\n\t\t\t$('.remote-prefix').html(prefix);\n\t\t\tglobals.show_prefix_notice = true;\n\t\t\t$prefix_notice.show();\n\t\t}\n\t};\n\n\twpmdb.functions.maybe_show_mst_warning = function (data) {\n\t\tvar migration_type = wpmdb.functions.wpmdb_migration_type();\n\t\tvar show_mst_warning = false;\n\n\t\tif (-1 !== $.inArray(migration_type, ['push', 'pull']) && 'undefined' !== typeof data.site_details) {\n\t\t\tif (wpmdb_data.site_details.is_multisite !== data.site_details.is_multisite) {\n\t\t\t\tif ('undefined' === typeof wpmdb.mst || 'undefined' === typeof data.mst_available || '1' !== data.mst_available) {\n\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ('import' === migration_type) {\n\t\t\tif ('undefined' !== typeof data.multisite && 'undefined' !== typeof data.subsite_export) {\n\t\t\t\tif ('false' === wpmdb_data.site_details.is_multisite && 'true' === data.multisite && 'true' !== data.subsite_export || 'true' === wpmdb_data.site_details.is_multisite && 'false' === data.multisite) {\n\t\t\t\t\tshow_mst_warning = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tshow_mst_warning = $.wpmdb.apply_filters('wpmdb_show_mst_warning', show_mst_warning);\n\n\t\tif (show_mst_warning) {\n\t\t\t$('.mst-required').show();\n\t\t}\n\n\t\treturn show_mst_warning;\n\t};\n\n\twpmdb.functions.maybe_show_select_table_notice = function () {\n\n\t\t// check that they've selected some tables to migrate\n\t\tif ($('#migrate-selected').is(':checked') && null === $('#select-tables').val()) {\n\t\t\tif ('import' !== wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\talert(wpmdb_strings.please_select_one_table);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif ($('#import-find-replace').is(':checked') && $('#select-tables').is(':visible')) {\n\t\t\t\t\talert(wpmdb_strings.please_select_one_table_import);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// check that they've selected some tables to backup\n\t\tif ('savefile' !== wpmdb.functions.wpmdb_migration_type() && $('#backup-manual-select').is(':checked') && null === $('#select-backup').val()) {\n\t\t\talert(wpmdb_strings.please_select_one_table_backup);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\twpmdb.functions.remove_protocol = function (url) {\n\t\treturn url.replace(/^https?:/i, '');\n\t};\n\n\twpmdb.functions.create_table_select = function (tables, table_sizes_hr, selected_tables) {\n\t\tvar $table_select = document.createElement('select');\n\t\t$($table_select).attr({\n\t\t\tmultiple: 'multiple',\n\t\t\tname: 'select_tables[]',\n\t\t\tid: 'select-tables',\n\t\t\tclass: 'multiselect'\n\t\t});\n\n\t\tif (0 < tables.length) {\n\t\t\t$.each(tables, function (index, table) {\n\t\t\t\tif ($.wpmdb.apply_filters('wpmdb_exclude_table', false, table)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar selected = ' ';\n\t\t\t\tif (undefined !== selected_tables && null !== selected_tables && 0 < selected_tables.length && -1 !== $.inArray(table, selected_tables)) {\n\t\t\t\t\tselected = ' selected=\"selected\" ';\n\t\t\t\t}\n\n\t\t\t\tvar size = '';\n\t\t\t\tif (0 !== table_sizes_hr.length) {\n\t\t\t\t\tsize = ' (' + table_sizes_hr[table] + ')';\n\t\t\t\t}\n\n\t\t\t\t$($table_select).append('<option' + selected + 'value=\"' + table + '\">' + table + size + '</option>');\n\t\t\t});\n\t\t}\n\n\t\treturn $table_select;\n\t};\n\n\t/**\n  * Returns tables selected for migration.\n  *\n  * @returns {array}\n  *\n  * Also handler for wpmdb_get_tables_to_migrate filter, disregards input values as it is the primary source.\n  */\n\twpmdb.functions.get_tables_to_migrate = function () {\n\t\tvar tables = [];\n\t\tvar mig_type = wpmdb.functions.wpmdb_migration_type();\n\t\tvar table_intent = $('input[name=table_migrate_option]:checked').val();\n\n\t\t// Grab tables as per what the user has selected from the multiselect box or all prefixed tables.\n\t\tif ('migrate_select' === table_intent) {\n\t\t\ttables = $('#select-tables').val();\n\t\t} else {\n\t\t\tif ('pull' !== mig_type && 'undefined' !== typeof wpmdb_data.this_prefixed_tables) {\n\t\t\t\ttables = wpmdb_data.this_prefixed_tables;\n\t\t\t} else if ('pull' === mig_type && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.prefixed_tables) {\n\t\t\t\ttables = wpmdb.common.connection_data.prefixed_tables;\n\t\t\t}\n\t\t}\n\n\t\treturn tables;\n\t};\n\n\twpmdb.functions.update_migrate_button_text = function () {\n\t\tvar migration_intent = wpmdb.functions.wpmdb_migration_type();\n\t\tvar save_string = $('#save-migration-profile').is(':checked') ? '_save' : '';\n\t\tvar migrate_string = 'migrate_button_' + ('savefile' === migration_intent ? 'export' : migration_intent) + save_string;\n\t\t$('.migrate-db .button-primary').val(wpmdb_strings[migrate_string]);\n\t};\n\n\t// fired when the connection info box changes (e.g. gets pasted into)\n\twpmdb.functions.connection_box_changed = function () {\n\t\tvar $this = $('.pull-push-connection-info');\n\n\t\tif (-1 === $.inArray(wpmdb.functions.wpmdb_migration_type(), ['push', 'pull']) || (globals.doing_ajax || $($this).hasClass('temp-disabled')) && false === wpmdb.force_reconnect) {\n\t\t\treturn;\n\t\t}\n\n\t\twpmdb.force_reconnect = false;\n\t\tvar data = $('.pull-push-connection-info').val();\n\n\t\tvar connection_info = $.trim(data).split('\\n');\n\t\tvar error = false;\n\t\tvar error_message = '';\n\n\t\tif ('' === connection_info) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_missing;\n\t\t}\n\n\t\t// attempt to format the connection info from a single line\n\t\tif (1 === connection_info.length && !error) {\n\t\t\tvar connection_words = $.trim(data).split(' ');\n\t\t\tif (2 === connection_words.length) {\n\t\t\t\tconnection_info = connection_words;\n\t\t\t}\n\t\t}\n\n\t\tif (2 !== connection_info.length && !error) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_incorrect;\n\t\t}\n\n\t\tif (!error && !globals.validate_url(connection_info[0])) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_url_invalid;\n\t\t}\n\n\t\tvar key_length = 0;\n\n\t\tif ('undefined' !== typeof connection_info[1]) {\n\t\t\tkey_length = connection_info[1].length;\n\t\t}\n\n\t\tif (!error && 32 !== key_length && 40 !== key_length) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_key_invalid;\n\t\t}\n\n\t\tif (!error && connection_info[0] === wpmdb_data.connection_info[0]) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_local_url;\n\t\t}\n\n\t\tif (!error && connection_info[1] === wpmdb_data.connection_info[1]) {\n\t\t\terror = true;\n\t\t\terror_message = wpmdb_strings.connection_info_local_key;\n\t\t}\n\t\tif (error) {\n\t\t\t$('.connection-status').html(error_message);\n\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\treturn;\n\t\t}\n\n\t\tvar new_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\n\t\t// If connection info is a single line\n\t\tif (1 === $.trim(data).split('\\n').length) {\n\n\t\t\t// Repopulate the input with the info on two lines\n\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t}\n\n\t\tif (false === wpmdb_data.openssl_available) {\n\t\t\tconnection_info[0] = connection_info[0].replace('https://', 'http://');\n\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t}\n\n\t\tglobals.show_prefix_notice = false;\n\t\tglobals.doing_ajax = true;\n\t\tglobals.disable_export_type_controls();\n\n\t\tif ($('.basic-access-auth-wrapper').is(':visible')) {\n\t\t\tconnection_info[0] = connection_info[0].replace(/\\/\\/(.*)@/, '//');\n\t\t\tconnection_info[0] = connection_info[0].replace('//', '//' + encodeURIComponent($.trim($('.auth-username').val())) + ':' + encodeURIComponent($.trim($('.auth-password').val())) + '@');\n\t\t\tnew_connection_info_contents = connection_info[0] + '\\n' + connection_info[1];\n\t\t\t$('.pull-push-connection-info').val(new_connection_info_contents);\n\t\t\t$('.basic-access-auth-wrapper').hide();\n\t\t}\n\n\t\t$('.step-two').hide();\n\t\t$('.ssl-notice').hide();\n\t\t$('.prefix-notice').hide();\n\t\t$('.connection-status').show();\n\n\t\t$('.connection-status').html(wpmdb_strings.establishing_remote_connection);\n\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t$('.connection-status').append(globals.ajax_spinner);\n\n\t\tvar intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\tglobals.profile_name_edited = false;\n\n\t\treturn $.ajax({\n\t\t\turl: ajaxurl,\n\t\t\ttype: 'POST',\n\t\t\tdataType: 'json',\n\t\t\tcache: false,\n\t\t\tdata: {\n\t\t\t\taction: 'wpmdb_verify_connection_to_remote_site',\n\t\t\t\turl: connection_info[0],\n\t\t\t\tkey: connection_info[1],\n\t\t\t\tintent: intent,\n\t\t\t\tnonce: wpmdb_data.nonces.verify_connection_to_remote_site\n\t\t\t},\n\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t$('.connection-status').html(globals.get_ajax_errors(jqXHR.responseText, '(#100)', jqXHR));\n\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\tglobals.enable_export_type_controls();\n\t\t\t},\n\t\t\tsuccess: function success(data) {\n\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\tglobals.enable_export_type_controls();\n\n\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!$('.pull-push-connection-info').hasClass('temp-disabled') && !$('.connect-button').is(':visible')) {\n\t\t\t\t\t\t$('.pull-push-connection-info').removeAttr('readonly');\n\t\t\t\t\t\t$('.connect-button').show();\n\t\t\t\t\t}\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (true === wpmdb.functions.maybe_show_mst_warning(data)) {\n\t\t\t\t\t$('.connection-status').hide();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tglobals.maybe_show_ssl_warning(connection_info[0], connection_info[1], data.scheme);\n\n\t\t\t\tvar profile_name = globals.get_domain_name(data.url);\n\t\t\t\t$('.create-new-profile').val(profile_name);\n\n\t\t\t\t$('.pull-push-connection-info').addClass('temp-disabled');\n\t\t\t\t$('.pull-push-connection-info').attr('readonly', 'readonly');\n\t\t\t\t$('.connect-button').hide();\n\n\t\t\t\t$('.connection-status').hide();\n\t\t\t\t$('.step-two').show();\n\n\t\t\t\twpmdb.functions.maybe_show_prefix_notice(data.prefix);\n\n\t\t\t\tglobals.connection_established = true;\n\t\t\t\tglobals.set_connection_data(data);\n\t\t\t\tglobals.move_connection_info_box();\n\t\t\t\tglobals.change_replace_values();\n\n\t\t\t\tglobals.maybe_show_mixed_cased_table_name_warning();\n\n\t\t\t\tglobals.refresh_table_selects(null, null, this);\n\n\t\t\t\tglobals.$push_select_backup = $(globals.$pull_select).clone();\n\t\t\t\t$(globals.$push_select_backup).attr({\n\t\t\t\t\tname: 'select_backup[]',\n\t\t\t\t\tid: 'select-backup'\n\t\t\t\t});\n\n\t\t\t\tvar $post_type_select = document.createElement('select');\n\t\t\t\t$($post_type_select).attr({\n\t\t\t\t\tmultiple: 'multiple',\n\t\t\t\t\tname: 'select_post_types[]',\n\t\t\t\t\tid: 'select-post-types',\n\t\t\t\t\tclass: 'multiselect'\n\t\t\t\t});\n\n\t\t\t\t$.each(wpmdb.common.connection_data.post_types, function (index, value) {\n\t\t\t\t\t$($post_type_select).append('<option value=\"' + value + '\">' + value + '</option>');\n\t\t\t\t});\n\n\t\t\t\tglobals.$pull_post_type_select = $post_type_select;\n\n\t\t\t\t$('#new-path-missing-warning, #new-url-missing-warning').hide();\n\n\t\t\t\tif ('pull' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\t$('#new-url').val(wpmdb.functions.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t$('#new-path').val(wpmdb_data.this_path);\n\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t$('#new-domain').val(wpmdb_data.this_domain);\n\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(wpmdb.functions.remove_protocol(data.url));\n\t\t\t\t\t}\n\t\t\t\t\t$('#old-url').val(wpmdb.functions.remove_protocol(data.url));\n\t\t\t\t\t$('#old-path').val(data.path);\n\n\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_pull_table_select');\n\t\t\t\t\t$('#select-post-types').remove();\n\t\t\t\t\t$('.exclude-post-types-warning').after(globals.$pull_post_type_select);\n\t\t\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t\t\t\t$('.table-prefix').html(data.prefix);\n\t\t\t\t\t$('.backup-table-prefix').html(wpmdb_data.site_details.prefix);\n\t\t\t\t\t$('.uploads-dir').html(wpmdb_data.this_uploads_dir);\n\t\t\t\t} else {\n\t\t\t\t\t$('#new-url').val(wpmdb.functions.remove_protocol(data.url));\n\t\t\t\t\t$('#new-path').val(data.path);\n\n\t\t\t\t\tif ('true' === wpmdb_data.is_multisite) {\n\t\t\t\t\t\t$('.replace-row.pin .old-replace-col input[type=\"text\"]').val(wpmdb.functions.remove_protocol(wpmdb_data.this_url));\n\t\t\t\t\t}\n\t\t\t\t\t$.wpmdb.do_action('wpmdb_update_push_table_select');\n\t\t\t\t\t$('#select-backup').remove();\n\t\t\t\t\t$('.backup-tables-wrap').prepend(globals.$push_select_backup);\n\t\t\t\t}\n\n\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\tfn: $.wpmdb.do_action,\n\t\t\t\t\targs: ['verify_connection_to_remote_site', wpmdb.common.connection_data]\n\t\t\t\t};\n\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t}\n\n\t\t});\n\t};\n\n\t/**\n  *\n  * ========= DOM ready =========\n  *\n  * Mostly direct DOM manipulation specific code\n  *\n  */\n\t$(document).ready(function () {\n\t\twpmdb.migration_state_id = '';\n\n\t\t$('#plugin-compatibility').change(function (e) {\n\t\t\tvar install = '1';\n\t\t\tvar $status = $(this).closest('td').next('td').find('.setting-status');\n\n\t\t\tif (!$(this).is(':checked')) {\n\t\t\t\tinstall = '0';\n\t\t\t}\n\n\t\t\t$('.plugin-compatibility-wrap').toggle();\n\n\t\t\t$status.find('.ajax-success-msg').remove();\n\t\t\t$status.append(globals.ajax_spinner);\n\t\t\t$('#plugin-compatibility').attr('disabled', 'disabled');\n\t\t\t$('.plugin-compatibility').addClass('disabled');\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_plugin_compatibility',\n\t\t\t\t\tinstall: install,\n\t\t\t\t\tnonce: wpmdb_data.nonces.plugin_compatibility\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.plugin_compatibility_settings_problem + '\\r\\n\\r\\n' + wpmdb_strings.status + ' ' + jqXHR.status + ' ' + jqXHR.statusText + '\\r\\n\\r\\n' + wpmdb_strings.response + '\\r\\n' + jqXHR.responseText);\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\t$('#plugin-compatibility').removeAttr('disabled');\n\t\t\t\t\t$('.plugin-compatibility').removeClass('disabled');\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif ('' !== $.trim(data)) {\n\t\t\t\t\t\talert(data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$status.append('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\t$('#plugin-compatibility').removeAttr('disabled');\n\t\t\t\t\t$('.plugin-compatibility').removeClass('disabled');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif ($('#plugin-compatibility').is(':checked')) {\n\t\t\t$('.plugin-compatibility-wrap').show();\n\t\t}\n\n\t\tif (0 <= navigator.userAgent.indexOf('MSIE') || 0 <= navigator.userAgent.indexOf('Trident')) {\n\t\t\t$('.ie-warning').show();\n\t\t}\n\n\t\tif (0 <= navigator.userAgent.indexOf('Edge')) {\n\t\t\t$('.edge-warning').show();\n\t\t}\n\n\t\tif (0 === wpmdb_data.valid_licence) {\n\t\t\t$('#savefile').prop('checked', true);\n\t\t}\n\t\tvar max_request_size_container = $('.max-request-size');\n\t\tvar max_request_size_slider = $('.slider', max_request_size_container);\n\t\tmax_request_size_slider.slider({\n\t\t\trange: 'min',\n\t\t\tvalue: parseInt(wpmdb_data.max_request / 1024),\n\t\t\tmin: 512,\n\t\t\tmax: parseInt(wpmdb_data.bottleneck / 1024),\n\t\t\tstep: 256,\n\t\t\tcreate: function create(event, ui) {\n\t\t\t\tvar display_info = globals.get_max_request_display_info(wpmdb_data.max_request / 1024);\n\t\t\t\tglobals.set_slider_value(max_request_size_container, wpmdb_data.max_request / 1024, display_info.unit, display_info.amount);\n\t\t\t},\n\t\t\tslide: function slide(event, ui) {\n\t\t\t\tvar display_info = globals.get_max_request_display_info(ui.value);\n\t\t\t\tglobals.set_slider_value(max_request_size_container, ui.value, display_info.unit, display_info.amount);\n\t\t\t},\n\t\t\tstop: function stop(event, ui) {\n\t\t\t\t$('.slider-success-msg').remove();\n\t\t\t\t$('.amount', max_request_size_container).after('<img src=\"' + globals.spinner_url + '\" alt=\"\" class=\"slider-spinner general-spinner\" />');\n\t\t\t\tmax_request_size_slider.slider('disable');\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'wpmdb_update_max_request_size',\n\t\t\t\t\t\tmax_request_size: parseInt(ui.value),\n\t\t\t\t\t\tnonce: wpmdb_data.nonces.update_max_request_size\n\t\t\t\t\t},\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tmax_request_size_slider.slider('enable');\n\t\t\t\t\t\t$('.slider-spinner', max_request_size_container).remove();\n\t\t\t\t\t\talert(wpmdb_strings.max_request_size_problem);\n\t\t\t\t\t\tvar display_info = globals.get_max_request_display_info(wpmdb_data.max_request / 1024);\n\t\t\t\t\t\tglobals.set_slider_value(max_request_size_container, wpmdb_data.max_request / 1024, display_info.unit, display_info.amount);\n\t\t\t\t\t\tmax_request_size_slider.slider('enable');\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success() {\n\t\t\t\t\t\tmax_request_size_slider.slider('enable');\n\t\t\t\t\t\t$('.slider-label-wrapper', max_request_size_container).append('<span class=\"slider-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t\t$('.slider-success-msg', max_request_size_container).fadeOut(2000, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('.slider-spinner', max_request_size_container).remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar delay_between_requests_container = $('.delay-between-requests');\n\t\tvar delay_between_requests_slider = $('.slider', delay_between_requests_container);\n\t\tdelay_between_requests_slider.slider({\n\t\t\trange: 'min',\n\t\t\tvalue: parseInt(wpmdb_data.delay_between_requests / 1000),\n\t\t\tmin: 0,\n\t\t\tmax: 10,\n\t\t\tstep: 1,\n\t\t\tcreate: function create(event, ui) {\n\t\t\t\tglobals.set_slider_value(delay_between_requests_container, wpmdb_data.delay_between_requests / 1000, 's');\n\t\t\t},\n\t\t\tslide: function slide(event, ui) {\n\t\t\t\tglobals.set_slider_value(delay_between_requests_container, ui.value, 's');\n\t\t\t},\n\t\t\tstop: function stop(event, ui) {\n\t\t\t\t$('.slider-success-msg').remove();\n\t\t\t\t$('.amount', delay_between_requests_container).after('<img src=\"' + globals.spinner_url + '\" alt=\"\" class=\"slider-spinner general-spinner\" />');\n\t\t\t\tdelay_between_requests_slider.slider('disable');\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taction: 'wpmdb_update_delay_between_requests',\n\t\t\t\t\t\tdelay_between_requests: parseInt(ui.value * 1000),\n\t\t\t\t\t\tnonce: wpmdb_data.nonces.update_delay_between_requests\n\t\t\t\t\t},\n\t\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t\tdelay_between_requests_slider.slider('enable');\n\t\t\t\t\t\t$('.slider-spinner', delay_between_requests_container).remove();\n\t\t\t\t\t\talert(wpmdb_strings.delay_between_requests_problem);\n\t\t\t\t\t\tglobals.set_slider_value(delay_between_requests_container, wpmdb_data.delay_between_requests / 1000, 's');\n\t\t\t\t\t\tdelay_between_requests_slider.slider('enable');\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function success() {\n\t\t\t\t\t\twpmdb_data.delay_between_requests = parseInt(ui.value * 1000);\n\t\t\t\t\t\tdelay_between_requests_slider.slider('enable');\n\t\t\t\t\t\t$('.slider-label-wrapper', delay_between_requests_container).append('<span class=\"slider-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t\t$('.slider-success-msg', delay_between_requests_container).fadeOut(2000, function () {\n\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('.slider-spinner', delay_between_requests_container).remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$('.help-tab .video').each(function () {\n\t\t\tvar $container = $(this),\n\t\t\t    $viewer = $('.video-viewer');\n\n\t\t\t$('a', this).click(function (e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t$viewer.attr('src', '//www.youtube.com/embed/' + $container.data('video-id') + '?autoplay=1');\n\t\t\t\t$viewer.show();\n\t\t\t\tvar offset = $viewer.offset();\n\t\t\t\t$(window).scrollTop(offset.top - 50);\n\t\t\t});\n\t\t});\n\n\t\t$('.backup-options').show();\n\t\t$('.keep-active-plugins').show();\n\t\tif ('savefile' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t$('.backup-options').hide();\n\t\t\t$('.keep-active-plugins').hide();\n\t\t}\n\n\t\tglobals.last_replace_switch = wpmdb.functions.wpmdb_migration_type();\n\n\t\t/**\n   * Handle 'Check License Again' functionality found in expired license messages.\n   */\n\t\t$('.content-tab').on('click', '.check-my-licence-again', function (e) {\n\t\t\te.preventDefault();\n\t\t\tglobals.checked_licence = false;\n\t\t\t$(e.target).replaceWith('Checking... ' + globals.ajax_spinner);\n\t\t\tglobals.check_licence(null, 'all');\n\t\t});\n\n\t\t$.wpmdb.add_action('wpmdb_refresh_table_selects', globals.refresh_table_selects, '', globals);\n\n\t\tfunction update_push_table_select() {\n\t\t\t$('#select-tables').remove();\n\t\t\t$('.select-tables-wrap').prepend(globals.$push_select);\n\t\t\t$('#select-tables').change();\n\t\t}\n\n\t\t$.wpmdb.add_action('wpmdb_update_push_table_select', update_push_table_select);\n\n\t\tfunction update_pull_table_select() {\n\t\t\t$('#select-tables').remove();\n\t\t\t$('.select-tables-wrap').prepend(globals.$pull_select);\n\t\t\t$('#select-tables').change();\n\t\t}\n\n\t\t$.wpmdb.add_action('wpmdb_update_pull_table_select', update_pull_table_select);\n\n\t\tfunction disable_table_migration_options() {\n\t\t\t$('#migrate-selected').parents('.option-section').children('.header-expand-collapse').children('.expand-collapse-arrow').removeClass('collapsed');\n\t\t\t$('.table-select-wrap').show();\n\t\t\t$('#migrate-only-with-prefix').prop('checked', false);\n\t\t\t$('#migrate-selected').prop('checked', true);\n\t\t\t$('.table-migrate-options').hide();\n\t\t\t$('.select-tables-wrap').show();\n\t\t}\n\n\t\t$.wpmdb.add_action('wpmdb_disable_table_migration_options', disable_table_migration_options);\n\n\t\tfunction enable_table_migration_options() {\n\t\t\t$('.table-migrate-options').show();\n\t\t}\n\n\t\t$.wpmdb.add_action('wpmdb_enable_table_migration_options', enable_table_migration_options);\n\n\t\tfunction select_all_tables() {\n\t\t\t$('#select-tables').children('option').prop('selected', true);\n\t\t\t$('#select-tables').change();\n\t\t}\n\n\t\t$.wpmdb.add_action('wpmdb_select_all_tables', select_all_tables);\n\n\t\tfunction base_old_url(value, args) {\n\t\t\treturn globals.remove_protocol(wpmdb_data.this_url);\n\t\t}\n\n\t\t$.wpmdb.add_filter('wpmdb_base_old_url', base_old_url);\n\n\t\t// automatically validate connection info if we're loading a saved profile\n\t\tglobals.establish_remote_connection_from_saved_profile();\n\n\t\t// add to <a> tags which act as JS event buttons, will not jump page to top and will deselect the button\n\t\t$('body').on('click', '.js-action-link', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(this).blur();\n\t\t});\n\n\t\t$('.licence-input').keypress(function (e) {\n\t\t\tif (13 === e.which) {\n\t\t\t\te.preventDefault();\n\t\t\t\t$('.register-licence').click();\n\t\t\t}\n\t\t});\n\n\t\t// registers your licence\n\t\t$('body').on('click', '.register-licence', function (e) {\n\t\t\te.preventDefault();\n\n\t\t\tif (globals.doing_licence_registration_ajax) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar licence_key = $.trim($('.licence-input').val());\n\t\t\tvar $licence_status = $('.licence-status');\n\n\t\t\t$licence_status.removeClass('notification-message error-notice success-notice');\n\n\t\t\tif ('' === licence_key) {\n\t\t\t\t$licence_status.html('<div class=\"notification-message error-notice\">' + wpmdb_strings.enter_license_key + '</div>');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$licence_status.empty().removeClass('success');\n\t\t\tglobals.doing_licence_registration_ajax = true;\n\t\t\t$('.button.register-licence').after('<img src=\"' + globals.spinner_url + '\" alt=\"\" class=\"register-licence-ajax-spinner general-spinner\" />');\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'JSON',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_activate_licence',\n\t\t\t\t\tlicence_key: licence_key,\n\t\t\t\t\tnonce: wpmdb_data.nonces.activate_licence,\n\t\t\t\t\tcontext: 'licence'\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\tglobals.doing_licence_registration_ajax = false;\n\t\t\t\t\t$('.register-licence-ajax-spinner').remove();\n\t\t\t\t\t$licence_status.html(wpmdb_strings.register_license_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.register-licence-ajax-spinner').remove();\n\n\t\t\t\t\tif ('undefined' !== typeof data.errors) {\n\t\t\t\t\t\tvar msg = '';\n\t\t\t\t\t\tfor (var key in data.errors) {\n\t\t\t\t\t\t\tmsg += data.errors[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$licence_status.html(msg);\n\n\t\t\t\t\t\tif ('undefined' !== typeof data.masked_licence) {\n\t\t\t\t\t\t\tglobals.enable_pro_licence(data, licence_key);\n\t\t\t\t\t\t\t$('.migrate-tab .invalid-licence').hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if ('undefined' !== typeof data.wpmdb_error && 'undefined' !== typeof data.body) {\n\t\t\t\t\t\t$licence_status.html(data.body);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (1 === Number(data.is_first_activation)) {\n\t\t\t\t\t\t\twpmdb_strings.welcome_text = wpmdb_strings.welcome_text.replace('%1$s', 'https://deliciousbrains.com/wp-migrate-db-pro/doc/quick-start-guide/?utm_campaign=support%2Bdocs&utm_source=MDB%2BPaid&utm_medium=insideplugin');\n\t\t\t\t\t\t\twpmdb_strings.welcome_text = wpmdb_strings.welcome_text.replace('%2$s', 'https://deliciousbrains.com/wp-migrate-db-pro/videos/?utm_campaign=support%2Bdocs&utm_source=MDB%2BPaid&utm_medium=insideplugin');\n\n\t\t\t\t\t\t\t$licence_status.after('<div id=\"welcome-wrap\">' + '<img id=\"welcome-img\" src=\"' + wpmdb_data.this_plugin_url + 'asset/dist/img/mdb-banner.svg\" />' + '<div class=\"welcome-text\">' + '<h3>' + wpmdb_strings.welcome_title + '</h3>' + '<p>' + wpmdb_strings.welcome_text + '</p>' + '</div>' + '</div>');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$licence_status.html(wpmdb_strings.license_registered).delay(5000).fadeOut(1000, function () {\n\t\t\t\t\t\t\t$(this).css({ visibility: 'hidden', display: 'block' }).slideUp();\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$licence_status.addClass('success notification-message success-notice');\n\t\t\t\t\t\tglobals.enable_pro_licence(data, licence_key);\n\t\t\t\t\t\t$('.invalid-licence').hide();\n\t\t\t\t\t}\n\n\t\t\t\t\tglobals.doing_licence_registration_ajax = false;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// clears the debug log\n\t\t$('.clear-log').click(function () {\n\t\t\t$('.ajax-spinner, .ajax-success-msg').remove();\n\t\t\t$(this).after(globals.ajax_spinner);\n\t\t\t$('.debug-log-textarea').val('');\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_clear_log',\n\t\t\t\t\tnonce: wpmdb_data.nonces.clear_log\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\talert(wpmdb_strings.clear_log_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner, .ajax-success-msg').remove();\n\t\t\t\t\tglobals.refresh_debug_log();\n\t\t\t\t\t$('.clear-log').after('<span class=\"ajax-success-msg\">' + wpmdb_strings.clear_error_log + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// select all tables\n\t\t$('.multiselect-select-all').click(function () {\n\t\t\tvar multiselect = $(this).parents('.select-wrap').children('.multiselect');\n\t\t\t$('option', multiselect).prop('selected', 1);\n\t\t\t$(multiselect).focus().trigger('change');\n\t\t});\n\n\t\t// deselect all tables\n\t\t$('.multiselect-deselect-all').click(function () {\n\t\t\tvar multiselect = $(this).parents('.select-wrap').children('.multiselect');\n\t\t\t$('option', multiselect).removeAttr('selected');\n\t\t\t$(multiselect).focus().trigger('change');\n\t\t});\n\n\t\t// invert table selection\n\t\t$('.multiselect-invert-selection').click(function () {\n\t\t\tvar multiselect = $(this).parents('.select-wrap').children('.multiselect');\n\t\t\t$('option', multiselect).each(function () {\n\t\t\t\t$(this).attr('selected', !$(this).attr('selected'));\n\t\t\t});\n\t\t\t$(multiselect).focus().trigger('change');\n\t\t});\n\n\t\t// on option select hide all \"advanced\" option divs and show the correct div for the option selected\n\t\t$('.option-group input[type=radio]').change(function () {\n\t\t\tvar group = $(this).closest('.option-group');\n\t\t\t$('ul', group).hide();\n\t\t\tvar parent = $(this).closest('li');\n\t\t\t$('ul', parent).show();\n\t\t});\n\n\t\t// on page load, expand hidden divs for selected options (browser form cache)\n\t\t$('.option-group').each(function () {\n\t\t\t$('.option-group input[type=radio]').each(function () {\n\t\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t\tvar parent = $(this).closest('li');\n\t\t\t\t\t$('ul', parent).show();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// expand and collapse content on click\n\t\t$('.header-expand-collapse').click(function () {\n\t\t\tvar target = null;\n\n\t\t\tif (undefined !== $(this).data('next')) {\n\t\t\t\ttarget = $(this).data('next');\n\t\t\t}\n\n\t\t\tif ($('.expand-collapse-arrow', this).hasClass('collapsed')) {\n\t\t\t\t$('.expand-collapse-arrow', this).removeClass('collapsed');\n\t\t\t\tif (target) {\n\t\t\t\t\t$(target).show();\n\t\t\t\t} else {\n\t\t\t\t\t$(this).next().show();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$('.expand-collapse-arrow', this).addClass('collapsed');\n\t\t\t\tif (target) {\n\t\t\t\t\t$(target).hide();\n\t\t\t\t} else {\n\t\t\t\t\t$(this).next().hide();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$('.checkbox-label input[type=checkbox]').change(function () {\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t$(this).parent().next().show();\n\t\t\t} else {\n\t\t\t\t$(this).parent().next().hide();\n\t\t\t}\n\t\t});\n\n\t\t// warning for excluding post types\n\t\t$('.select-post-types-wrap').on('change', '#select-post-types', function () {\n\t\t\twpmdb.functions.exclude_post_types_warning();\n\t\t});\n\n\t\tif ($('#exclude-post-types').is(':checked')) {\n\t\t\tif ($('#select-post-types').val()) {\n\t\t\t\t$('.exclude-post-types-warning').css({ display: 'block', opacity: 1 });\n\t\t\t}\n\t\t}\n\n\t\t// special expand and collapse content on click for save migration profile\n\t\t$('#save-migration-profile').change(function () {\n\t\t\twpmdb.functions.update_migrate_button_text();\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t$('.save-settings-button').show();\n\t\t\t} else {\n\t\t\t\t$('.save-settings-button').hide();\n\t\t\t}\n\t\t});\n\n\t\tif ($('#save-migration-profile').is(':checked')) {\n\t\t\t$('.save-settings-button').show();\n\t\t}\n\n\t\t$('.create-new-profile').focus(function () {\n\t\t\t$('#create_new').prop('checked', true);\n\t\t});\n\n\t\t$('.checkbox-label input[type=checkbox]').each(function () {\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t$(this).parent().next().show();\n\t\t\t}\n\t\t});\n\n\t\t// AJAX migrate button\n\t\t$('.migrate-db-button').click(function (event) {\n\t\t\t$(this).blur();\n\n\t\t\tevent.preventDefault();\n\t\t\twpmdb.migration_state_id = '';\n\n\t\t\tif (false === $.wpmdb.apply_filters('wpmdb_migration_profile_ready', true)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (true === wpmdb.functions.maybe_show_select_table_notice()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar new_url_missing = false;\n\t\t\tvar new_file_path_missing = false;\n\t\t\tif ($('#new-url').length && !$('#new-url').val()) {\n\t\t\t\t$('#new-url-missing-warning').show();\n\t\t\t\t$('#new-url').focus();\n\t\t\t\t$('html,body').scrollTop(0);\n\t\t\t\tnew_url_missing = true;\n\t\t\t}\n\n\t\t\tif ($('#new-path').length && !$('#new-path').val()) {\n\t\t\t\t$('#new-path-missing-warning').show();\n\t\t\t\tif (false === new_url_missing) {\n\t\t\t\t\t$('#new-path').focus();\n\t\t\t\t\t$('html,body').scrollTop(0);\n\t\t\t\t}\n\t\t\t\tnew_file_path_missing = true;\n\t\t\t}\n\n\t\t\tif (true === new_url_missing || true === new_file_path_missing) {\n\t\t\t\tif ('import' === wpmdb.functions.wpmdb_migration_type()) {\n\t\t\t\t\tif ($('#import-find-replace').is(':checked')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// also save profile\n\t\t\tif ($('#save-migration-profile').is(':checked')) {\n\t\t\t\tglobals.save_active_profile();\n\t\t\t}\n\n\t\t\tglobals.form_data = $($('#migrate-form')[0].elements).not('.auth-credentials').serialize();\n\n\t\t\tglobals.migration_intent = wpmdb.functions.wpmdb_migration_type();\n\n\t\t\tglobals.stage = 'backup';\n\n\t\t\tif ('savefile' === globals.migration_intent) {\n\t\t\t\tglobals.stage = 'migrate';\n\t\t\t}\n\n\t\t\tif (false === $('#create-backup').is(':checked')) {\n\t\t\t\tif (-1 !== $.inArray(globals.migration_intent, ['savefile', 'push', 'pull'])) {\n\t\t\t\t\tglobals.stage = 'migrate';\n\t\t\t\t} else if ('import' === globals.migration_intent) {\n\t\t\t\t\tglobals.stage = 'upload';\n\t\t\t\t} else {\n\t\t\t\t\tglobals.stage = globals.migration_intent;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twpmdb.current_migration = wpmdb.migration_progress_controller.newMigration({\n\t\t\t\tlocalTableSizes: wpmdb_data.this_table_sizes,\n\t\t\t\tlocalTableRows: wpmdb_data.this_table_rows,\n\t\t\t\tremoteTableSizes: 'undefined' !== typeof wpmdb.common.connection_data ? wpmdb.common.connection_data.table_sizes : null,\n\t\t\t\tremoteTableRows: 'undefined' !== typeof wpmdb.common.connection_data ? wpmdb.common.connection_data.table_rows : null,\n\t\t\t\tmigrationIntent: wpmdb.functions.wpmdb_migration_type()\n\t\t\t});\n\n\t\t\tvar backup_option = $('input[name=backup_option]:checked').val();\n\t\t\tvar table_option = $('input[name=table_migrate_option]:checked').val();\n\t\t\tvar selected_tables = '';\n\t\t\tvar data_type = '';\n\n\t\t\t// set up backup stage\n\t\t\tif ('backup' === globals.stage) {\n\t\t\t\tif ('migrate_only_with_prefix' === table_option && 'backup_selected' === backup_option && 'import' !== globals.migration_intent) {\n\t\t\t\t\tbackup_option = 'backup_only_with_prefix';\n\t\t\t\t}\n\t\t\t\tif ('push' === globals.migration_intent) {\n\t\t\t\t\tdata_type = 'remote';\n\t\t\t\t\tif ('backup_only_with_prefix' === backup_option) {\n\t\t\t\t\t\tglobals.tables_to_migrate = wpmdb.common.connection_data.prefixed_tables;\n\t\t\t\t\t} else if ('backup_selected' === backup_option) {\n\t\t\t\t\t\tselected_tables = $('#select-tables').val();\n\t\t\t\t\t\tselected_tables = $.wpmdb.apply_filters('wpmdb_backup_selected_tables', selected_tables);\n\t\t\t\t\t\tglobals.tables_to_migrate = globals.get_intersect(selected_tables, wpmdb.common.connection_data.tables);\n\t\t\t\t\t} else if ('backup_manual_select' === backup_option) {\n\t\t\t\t\t\tglobals.tables_to_migrate = $('#select-backup').val();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata_type = 'local';\n\t\t\t\t\tif ('backup_only_with_prefix' === backup_option) {\n\t\t\t\t\t\tglobals.tables_to_migrate = wpmdb_data.this_prefixed_tables;\n\t\t\t\t\t} else if ('backup_selected' === backup_option) {\n\t\t\t\t\t\tselected_tables = $('#select-tables').val();\n\t\t\t\t\t\tselected_tables = $.wpmdb.apply_filters('wpmdb_backup_selected_tables', selected_tables);\n\t\t\t\t\t\tglobals.tables_to_migrate = globals.get_intersect(selected_tables, wpmdb_data.this_tables);\n\t\t\t\t\t} else if ('backup_manual_select' === backup_option) {\n\t\t\t\t\t\tglobals.tables_to_migrate = $('#select-backup').val();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twpmdb.current_migration.model.addStage('backup', globals.tables_to_migrate, data_type, {\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tmigrated: wpmdb_strings.backed_up\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// set up migration stage\n\t\t\tif ('pull' === globals.migration_intent) {\n\t\t\t\tdata_type = 'remote';\n\t\t\t} else {\n\t\t\t\tdata_type = 'local';\n\t\t\t}\n\n\t\t\tif ('find_replace' === globals.migration_intent) {\n\t\t\t\twpmdb.current_migration.model.addStage('find_replace', wpmdb.functions.get_tables_to_migrate(null, null), data_type, {\n\t\t\t\t\tstrings: {\n\t\t\t\t\t\tmigrated: wpmdb_strings.searched,\n\t\t\t\t\t\tstage_title: wpmdb_strings.migrate_button_find_replace\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (-1 !== $.inArray(globals.migration_intent, ['savefile', 'push', 'pull'])) {\n\t\t\t\twpmdb.current_migration.model.addStage('migrate', wpmdb.functions.get_tables_to_migrate(null, null), data_type);\n\t\t\t}\n\n\t\t\t// add any additional migration stages via hook\n\t\t\t$.wpmdb.do_action('wpmdb_add_migration_stages', {\n\t\t\t\tdata_type: data_type,\n\t\t\t\ttables_to_migrate: wpmdb.functions.get_tables_to_migrate(null, null)\n\t\t\t});\n\n\t\t\tvar table_intent = $('input[name=table_migrate_option]:checked').val();\n\t\t\tvar connection_info = $.trim($('.pull-push-connection-info').val()).split('\\n');\n\t\t\tvar table_rows = '';\n\n\t\t\tglobals.remote_site = connection_info[0];\n\t\t\tglobals.secret_key = connection_info[1];\n\n\t\t\tvar static_migration_label = globals.get_migration_status_label(globals.remote_site, globals.migration_intent, 'migrating');\n\t\t\tglobals.completed_msg = globals.get_migration_status_label(globals.remote_site, globals.migration_intent, 'completed');\n\n\t\t\tif (-1 !== $.inArray(globals.stage, ['find_replace', 'backup', 'migrate'])) {\n\t\t\t\tglobals.tables_to_migrate = wpmdb.current_migration.model.getStageItems(globals.stage, 'name');\n\t\t\t}\n\n\t\t\twpmdb.current_migration.model.setActiveStage(globals.stage);\n\n\t\t\twpmdb.current_migration.setTitle(static_migration_label);\n\n\t\t\twpmdb.current_migration.startTimer();\n\n\t\t\tglobals.currently_migrating = true;\n\t\t\twpmdb.current_migration.setStatus('active');\n\n\t\t\tvar request_data = {\n\t\t\t\taction: 'wpmdb_initiate_migration',\n\t\t\t\tintent: globals.migration_intent,\n\t\t\t\turl: globals.remote_site,\n\t\t\t\tkey: globals.secret_key,\n\t\t\t\tform_data: globals.form_data,\n\t\t\t\tstage: globals.stage,\n\t\t\t\tnonce: wpmdb_data.nonces.initiate_migration\n\t\t\t};\n\n\t\t\trequest_data.site_details = {\n\t\t\t\tlocal: wpmdb_data.site_details\n\t\t\t};\n\n\t\t\tif (-1 !== $.inArray(globals.migration_intent, ['push', 'pull'])) {\n\t\t\t\trequest_data.temp_prefix = wpmdb.common.connection_data.temp_prefix;\n\t\t\t\trequest_data.site_details.remote = wpmdb.common.connection_data.site_details;\n\t\t\t}\n\n\t\t\t// site_details can have a very large number of elements that blows out PHP's max_input_vars\n\t\t\t// so we reduce it down to one variable for this one POST.\n\t\t\trequest_data.site_details = JSON.stringify(request_data.site_details);\n\n\t\t\trequest_data = $.wpmdb.apply_filters('wpmdb_initiate_migration_request_data', request_data, request_data);\n\n\t\t\tglobals.doing_ajax = true;\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: request_data,\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\n\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, globals.get_ajax_errors(jqXHR.responseText, '(#112)', jqXHR), 'error');\n\n\t\t\t\t\tconsole.log(jqXHR);\n\t\t\t\t\tconsole.log(textStatus);\n\t\t\t\t\tconsole.log(errorThrown);\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tif ('undefined' !== typeof data && 'undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\twpmdb.common.migration_error = true;\n\t\t\t\t\t\twpmdb.functions.migration_complete_events();\n\t\t\t\t\t\twpmdb.current_migration.setState(wpmdb_strings.migration_failed, data.body, 'error');\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\twpmdb.migration_state_id = data.migration_state_id;\n\n\t\t\t\t\tvar i = 0;\n\n\t\t\t\t\t// Set delay between requests - use max of local/remote values, 0 if doing export\n\t\t\t\t\tglobals.delay_between_requests = 0;\n\t\t\t\t\tif ('savefile' !== globals.migration_intent && 'undefined' !== typeof wpmdb.common.connection_data && 'undefined' !== typeof wpmdb.common.connection_data.delay_between_requests || 'import' === globals.migration_intent) {\n\t\t\t\t\t\tif ('import' === globals.migration_intent) {\n\t\t\t\t\t\t\tglobals.delay_between_requests = wpmdb_data.delay_between_requests;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tglobals.delay_between_requests = Math.max(parseInt(wpmdb_data.delay_between_requests), parseInt(wpmdb.common.connection_data.delay_between_requests));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (-1 !== $.inArray(globals.migration_intent, ['savefile', 'push', 'pull', 'find_replace'])) {\n\t\t\t\t\t\twpmdb.common.next_step_in_migration = {\n\t\t\t\t\t\t\tfn: wpmdb.functions.migrate_table_recursive,\n\t\t\t\t\t\t\targs: ['-1', '']\n\t\t\t\t\t\t};\n\t\t\t\t\t\twpmdb.functions.execute_next_step();\n\t\t\t\t\t}\n\n\t\t\t\t\t$.wpmdb.do_action('wpmdb_migration_initiated', globals.stage);\n\t\t\t\t}\n\n\t\t\t}); // end ajax\n\t\t});\n\n\t\tglobals.update_migrate_button_text();\n\n\t\t// close progress pop up once migration is completed\n\t\t$('body').on('click', '.close-progress-content-button', function (e) {\n\t\t\tglobals.hide_overlay();\n\t\t\twpmdb.current_migration.restoreTitleElem();\n\t\t\twpmdb.functions.maybe_reload_page();\n\t\t});\n\n\t\t$('body').on('click', '#overlay', function (e) {\n\t\t\tif (true === globals.migration_completed && e.target === this) {\n\t\t\t\tglobals.hide_overlay();\n\t\t\t\twpmdb.current_migration.restoreTitleElem();\n\t\t\t\twpmdb.functions.maybe_reload_page();\n\t\t\t}\n\t\t});\n\n\t\t// AJAX save button profile\n\t\t$('.save-settings-button').click(function (event) {\n\t\t\tevent.preventDefault();\n\t\t\tif ('' === $.trim($('.create-new-profile').val()) && $('#create_new').is(':checked')) {\n\t\t\t\talert(wpmdb_strings.enter_name_for_profile);\n\t\t\t\t$('.create-new-profile').focus();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tglobals.save_active_profile();\n\t\t});\n\n\t\t// move around textarea depending on whether or not the push/pull options are selected\n\t\tglobals.move_connection_info_box();\n\n\t\t$('.migrate-selection.option-group input[type=radio]').change(function () {\n\t\t\tglobals.move_connection_info_box();\n\t\t\twpmdb.migration_selection = wpmdb.functions.wpmdb_migration_type();\n\t\t\tif (globals.connection_established) {\n\t\t\t\tglobals.change_replace_values();\n\t\t\t}\n\t\t\twpmdb.functions.update_migrate_button_text();\n\t\t});\n\n\t\t// hide second section if pull or push is selected with no connection established\n\t\tif (('pull' === wpmdb.functions.wpmdb_migration_type() || 'push' === wpmdb.functions.wpmdb_migration_type()) && !globals.connection_established) {\n\t\t\t$('.step-two').hide();\n\t\t\t$('.connection-status').show();\n\t\t}\n\n\t\t// show / hide GUID helper description\n\t\t$('.general-helper').click(function (e) {\n\t\t\te.preventDefault();\n\t\t\tvar icon = $(this),\n\t\t\t    bubble = $(this).next();\n\n\t\t\t// Close any that are already open\n\t\t\t$('.helper-message').not(bubble).hide();\n\n\t\t\tvar position = icon.position();\n\t\t\tif (bubble.hasClass('bottom')) {\n\t\t\t\tvar bubble_offset = 1;\n\n\t\t\t\tif (true === bubble.hasClass('compatibility-help')) {\n\t\t\t\t\tbubble_offset = 6;\n\t\t\t\t} else if ($(this).is(':first-child')) {\n\t\t\t\t\tbubble_offset = 3;\n\t\t\t\t}\n\t\t\t\tbubble.css({\n\t\t\t\t\tleft: position.left - bubble.width() / 2 - bubble_offset + 'px',\n\t\t\t\t\ttop: position.top + icon.height() + 9 + 'px'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tbubble.css({\n\t\t\t\t\tleft: position.left + icon.width() + 9 + 'px',\n\t\t\t\t\ttop: position.top + icon.height() / 2 - 18 + 'px'\n\t\t\t\t});\n\t\t\t}\n\t\t\tbubble.toggle();\n\t\t\te.stopPropagation();\n\t\t});\n\n\t\t$('body').click(function () {\n\t\t\t$('.helper-message').hide();\n\t\t});\n\n\t\t$('.helper-message').click(function (e) {\n\t\t\te.stopPropagation();\n\t\t});\n\n\t\t$('body').on('click', '.show-errors-toggle', function (e) {\n\t\t\te.preventDefault();\n\t\t\t$(this).next('.migration-php-errors').toggle();\n\t\t});\n\n\t\t// migrate / settings tabs\n\t\t$('.nav-tab').click(function () {\n\t\t\tvar hash = $(this).attr('data-div-name');\n\t\t\thash = hash.replace('-tab', '');\n\t\t\twindow.location.hash = hash;\n\t\t\tglobals.switch_to_plugin_tab(hash, false);\n\t\t});\n\n\t\t$('body').on('click', 'a[href^=\"#\"]', function (event) {\n\t\t\tvar href = $(event.target).attr('href');\n\t\t\tvar tab_name = href.substr(1);\n\n\t\t\tif (tab_name) {\n\t\t\t\tvar nav_tab = $('.' + tab_name);\n\t\t\t\tif (1 === nav_tab.length) {\n\t\t\t\t\tnav_tab.trigger('click');\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// repeatable fields\n\t\t$('body').on('click', '.add-row', function () {\n\t\t\tvar $parent_tr = $(this).parents('tr');\n\t\t\t$parent_tr.before($('.original-repeatable-field').clone().removeClass('original-repeatable-field'));\n\t\t\t$parent_tr.prev().find('.old-replace-col input').focus();\n\t\t});\n\n\t\t// repeatable fields\n\t\t$('body').on('click', '.replace-remove-row', function () {\n\t\t\t$(this).parents('tr').remove();\n\t\t\tif (2 >= $('.replace-row').length) {\n\t\t\t\t$('.no-replaces-message').show();\n\t\t\t}\n\n\t\t\tvar prev_id = $(this).prev().attr('id');\n\t\t\tif ('new-url' === prev_id || 'new-path' === prev_id) {\n\t\t\t\t$('#' + prev_id + '-missing-warning').hide();\n\t\t\t}\n\t\t});\n\n\t\t// Hide New URL & New Path Warnings on change.\n\t\t$('body').on('change', '#new-url', function () {\n\t\t\t$('#new-url-missing-warning').hide();\n\t\t}).on('change', '#new-path', function () {\n\t\t\t$('#new-path-missing-warning').hide();\n\t\t});\n\n\t\t// Copy Find field to associated Replace field on arrow click.\n\t\t$('body').on('click', '.arrow-col', function () {\n\t\t\tvar replace_row_arrow = this;\n\n\t\t\tif ($(replace_row_arrow).hasClass('disabled')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar original_value = $(replace_row_arrow).prev('td').find('input').val();\n\t\t\tvar new_value_input = $(replace_row_arrow).next('td').find('input');\n\t\t\tnew_value_input.val(original_value);\n\n\t\t\t// Hide New URL or New Path Warning if changed.\n\t\t\tif ('new-url' === new_value_input.prop('id')) {\n\t\t\t\t$('#new-url-missing-warning').hide();\n\t\t\t} else if ('new-path' === new_value_input.prop('id')) {\n\t\t\t\t$('#new-path-missing-warning').hide();\n\t\t\t}\n\t\t});\n\n\t\t$('.add-replace').click(function () {\n\t\t\t$('.replace-fields').prepend($('.original-repeatable-field').clone().removeClass('original-repeatable-field'));\n\t\t\t$('.no-replaces-message').hide();\n\t\t});\n\n\t\t$('#find-and-replace-sort tbody').sortable({\n\t\t\titems: '> tr:not(.pin)',\n\t\t\thandle: 'td:first',\n\t\t\tstart: function start() {\n\t\t\t\t$('.sort-handle').css('cursor', '-webkit-grabbing');\n\t\t\t\t$('.sort-handle').css('cursor', '-moz-grabbing');\n\t\t\t},\n\t\t\tstop: function stop() {\n\t\t\t\t$('.sort-handle').css('cursor', '-webkit-grab');\n\t\t\t\t$('.sort-handle').css('cursor', '-moz-grab');\n\t\t\t}\n\t\t});\n\n\t\tvar hash = '';\n\n\t\t// check for hash in url (settings || migrate) switch tabs accordingly\n\t\tif (window.location.hash) {\n\t\t\thash = window.location.hash.substring(1);\n\t\t\tglobals.switch_to_plugin_tab(hash, false);\n\t\t}\n\n\t\tif ('' !== globals.get_query_var('install-plugin')) {\n\t\t\thash = 'addons';\n\t\t\tglobals.checked_licence = true;\n\t\t\tglobals.switch_to_plugin_tab(hash, true);\n\t\t}\n\n\t\t// process notice links clicks, eg. dismiss, reminder\n\t\t$('.notice-link').click(function (e) {\n\t\t\te.preventDefault();\n\n\t\t\t// process notice links clicks, eg. dismiss, reminder\n\t\t\twpmdb.functions.ajax_handle_dismissible_notice(wpmdb_data.nonces.process_notice_link, function (ele) {\n\t\t\t\t$(ele).closest('.inline-message').hide();\n\t\t\t}, $(this));\n\t\t});\n\n\t\t// When read-only connection info is copied, convert it to one line\n\t\t$('#connection_info').on('copy', function (e) {\n\t\t\tvar $this = $(this);\n\n\t\t\t// Test for two lines\n\t\t\tvar lines = $this.val().split('\\n');\n\t\t\tif (2 === lines.length) {\n\n\t\t\t\t// Wrapping in a try in case there's no browser support\n\t\t\t\ttry {\n\n\t\t\t\t\t// Combine the two lines into one\n\t\t\t\t\te.originalEvent.clipboardData.setData('text/plain', lines.join(' '));\n\t\t\t\t\te.preventDefault(); // Default behaviour is to copy any selected text\n\t\t\t\t} catch (err) {\n\n\t\t\t\t\t// Do nothing. Allow normal copying\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// regenerates the saved secret key\n\t\t$('.reset-api-key').click(function () {\n\t\t\tvar answer = confirm(wpmdb_strings.reset_api_key);\n\n\t\t\tif (!answer || globals.doing_reset_api_key_ajax) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tglobals.doing_reset_api_key_ajax = true;\n\t\t\t$('.reset-api-key').after('<img src=\"' + globals.spinner_url + '\" alt=\"\" class=\"reset-api-key-ajax-spinner general-spinner\" />');\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_reset_api_key',\n\t\t\t\t\tnonce: wpmdb_data.nonces.reset_api_key\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.reset_api_key_problem);\n\t\t\t\t\t$('.reset-api-key-ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_reset_api_key_ajax = false;\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.reset-api-key-ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_reset_api_key_ajax = false;\n\t\t\t\t\t$('.connection-info').html(data);\n\t\t\t\t\twpmdb_data.connection_info = $.trim(data).split('\\n');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Copy the connection info to the clipboard\n\t\t$('.copy-api-key').click(function () {\n\n\t\t\tvar $el = $(this);\n\n\t\t\t// Get connection_info input\n\t\t\tvar $connection_info = $('#connection_info');\n\n\t\t\t// Get the connection info\n\t\t\tvar two_lines = $connection_info.val();\n\n\t\t\t// Make it one line, if it's two\n\t\t\tvar one_line = two_lines.replace('\\n', ' ');\n\n\t\t\t// Replace two lines with one\n\t\t\t$connection_info.val(one_line);\n\n\t\t\t// Select the input val\n\t\t\t$connection_info.select();\n\n\t\t\ttry {\n\n\t\t\t\t// Copy connection_info\n\t\t\t\tdocument.execCommand('copy');\n\n\t\t\t\t// Unselect connection_info input\n\t\t\t\t$connection_info.blur();\n\n\t\t\t\t// show confirmation\n\t\t\t\t$el.css('color', 'transparent');\n\t\t\t\tvar $confirmation = $('.copy-api-key-confirmation').show();\n\n\t\t\t\t// fadeout confirmation\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t$confirmation.fadeOut('fast');\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t$el.css('color', '');\n\t\t\t\t\t}, 200);\n\t\t\t\t}, 1000);\n\t\t\t} catch (err) {\n\t\t\t\talert('please press Ctrl/Cmd+C to copy');\n\t\t\t}\n\n\t\t\t// Replace the input val with the two lines\n\t\t\t$connection_info.val(two_lines);\n\t\t});\n\n\t\t$('input[name=table_migrate_option]').change(function () {\n\t\t\t$('.select-tables-wrap').hide();\n\n\t\t\tif ('migrate_select' === $(this).val()) {\n\t\t\t\t$('.select-tables-wrap').show();\n\t\t\t}\n\t\t});\n\n\t\t$('.show-multiselect').each(function () {\n\t\t\tif ($(this).is(':checked')) {\n\t\t\t\t$(this).parents('.option-section').children('.header-expand-collapse').children('.expand-collapse-arrow').removeClass('collapsed');\n\t\t\t\t$(this).parents('.expandable-content').show();\n\t\t\t\t$(this).parents('.expandable-content').children('.select-wrap').toggle();\n\t\t\t}\n\t\t});\n\n\t\t$('input[name=backup_option]').change(function () {\n\t\t\t$('.backup-tables-wrap').hide();\n\t\t\tif ('backup_manual_select' === $(this).val()) {\n\t\t\t\t$('.backup-tables-wrap').show();\n\t\t\t}\n\t\t});\n\n\t\tif ($('#backup-manual-select').is(':checked')) {\n\t\t\t$('.backup-tables-wrap').show();\n\t\t}\n\n\t\t$('.plugin-compatibility-save').click(function () {\n\t\t\tif (globals.doing_plugin_compatibility_ajax) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$(this).addClass('disabled');\n\t\t\tvar select_element = $('#selected-plugins');\n\t\t\t$(select_element).attr('disabled', 'disabled');\n\n\t\t\t$('.plugin-compatibility-success-msg').remove();\n\n\t\t\tglobals.doing_plugin_compatibility_ajax = true;\n\t\t\t$(this).after('<img src=\"' + globals.spinner_url + '\" alt=\"\" class=\"plugin-compatibility-spinner general-spinner\" />');\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_whitelist_plugins',\n\t\t\t\t\twhitelist_plugins: $(select_element).val(),\n\t\t\t\t\tnonce: wpmdb_data.nonces.whitelist_plugins\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.blacklist_problem + '\\r\\n\\r\\n' + wpmdb_strings.status + ' ' + jqXHR.status + ' ' + jqXHR.statusText + '\\r\\n\\r\\n' + wpmdb_strings.response + '\\r\\n' + jqXHR.responseText);\n\t\t\t\t\t$(select_element).removeAttr('disabled');\n\t\t\t\t\t$('.plugin-compatibility-save').removeClass('disabled');\n\t\t\t\t\tglobals.doing_plugin_compatibility_ajax = false;\n\t\t\t\t\t$('.plugin-compatibility-spinner').remove();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif ('' !== $.trim(data)) {\n\t\t\t\t\t\talert(data);\n\t\t\t\t\t}\n\t\t\t\t\t$(select_element).removeAttr('disabled');\n\t\t\t\t\t$('.plugin-compatibility-save').removeClass('disabled');\n\t\t\t\t\tglobals.doing_plugin_compatibility_ajax = false;\n\t\t\t\t\t$('.plugin-compatibility-spinner').remove();\n\t\t\t\t\t$('.plugin-compatibility-save').after('<span class=\"plugin-compatibility-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.plugin-compatibility-success-msg').fadeOut(2000);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// delete a profile from the migrate form area\n\t\t$('body').on('click', '.delete-profile', function () {\n\t\t\tvar name = $(this).next().clone();\n\t\t\t$('input', name).remove();\n\t\t\tname = $.trim($(name).html());\n\t\t\tvar answer = confirm(wpmdb_strings.remove_profile.replace('{{profile}}', name));\n\n\t\t\tif (!answer) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar $profile_li = $(this).parent();\n\n\t\t\tif ($profile_li.find('input:checked').length) {\n\t\t\t\tvar $new_profile_li = $profile_li.siblings().last();\n\t\t\t\t$new_profile_li.find('input[type=radio]').prop('checked', 'checked');\n\t\t\t\t$new_profile_li.find('input[type=text]').focus();\n\t\t\t\t$('#migrate-form .crumbs .crumb:last').text('New Profile');\n\n\t\t\t\tif ('function' === typeof window.history.pushState) {\n\t\t\t\t\tvar updated_url = window.location.href.replace('#migrate', '').replace(/&wpmdb-profile=-?\\d+/, '') + '&wpmdb-profile=-1';\n\t\t\t\t\twindow.history.pushState({ updated_profile_id: -1 }, null, updated_url);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$profile_li.fadeOut(500);\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_delete_migration_profile',\n\t\t\t\t\tprofile_id: $(this).attr('data-profile-id'),\n\t\t\t\t\tnonce: wpmdb_data.nonces.delete_migration_profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.remove_profile_problem);\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\tif ('-1' === data) {\n\t\t\t\t\t\talert(wpmdb_strings.remove_profile_not_found);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// deletes a profile from the main profile selection screen\n\t\t$('.main-list-delete-profile-link').click(function () {\n\t\t\tvar name = $(this).prev().html();\n\t\t\tvar answer = confirm(wpmdb_strings.remove_profile.replace('{{profile}}', name));\n\n\t\t\tif (!answer) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$(this).parent().fadeOut(500);\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_delete_migration_profile',\n\t\t\t\t\tprofile_id: $(this).attr('data-profile-id'),\n\t\t\t\t\tnonce: wpmdb_data.nonces.delete_migration_profile\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.remove_profile_problem);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// warn the user when editing the connection info after a connection has been established\n\t\t$('body').on('click', '.temp-disabled', function () {\n\t\t\tvar answer = confirm(wpmdb_strings.change_connection_info);\n\n\t\t\tif (answer) {\n\t\t\t\t$('.ssl-notice').hide();\n\t\t\t\t$('.different-plugin-version-notice').hide();\n\t\t\t\t$('.migrate-db-button').show();\n\t\t\t\t$('.temp-disabled').removeAttr('readonly');\n\t\t\t\t$('.temp-disabled').removeClass('temp-disabled');\n\t\t\t\t$('.connect-button').show();\n\t\t\t\t$('.step-two').hide();\n\t\t\t\t$('.connection-status').show().html(wpmdb_strings.enter_connection_info);\n\t\t\t\tglobals.connection_established = false;\n\t\t\t}\n\t\t});\n\n\t\t// ajax request for settings page when checking/unchecking setting radio buttons\n\t\t$('.settings-tab input[type=checkbox]').change(function () {\n\t\t\tif ('plugin-compatibility' === $(this).attr('id')) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar checked = $(this).is(':checked');\n\t\t\tvar setting = $(this).attr('id');\n\t\t\tvar $status = $(this).closest('td').next('td').find('.setting-status');\n\n\t\t\t$('.ajax-success-msg').remove();\n\t\t\t$status.after(globals.ajax_spinner);\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'text',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_save_setting',\n\t\t\t\t\tchecked: checked,\n\t\t\t\t\tsetting: setting,\n\t\t\t\t\tnonce: wpmdb_data.nonces.save_setting\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\talert(wpmdb_strings.save_settings_problem);\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\t$status.append('<span class=\"ajax-success-msg\">' + wpmdb_strings.saved + '</span>');\n\t\t\t\t\t$('.ajax-success-msg').fadeOut(2000, function () {\n\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// disable form submissions\n\t\t$('.migrate-form').submit(function (e) {\n\t\t\te.preventDefault();\n\t\t});\n\n\t\t// fire connection_box_changed when the connect button is pressed\n\t\t$('.connect-button').click(function (event) {\n\t\t\tevent.preventDefault();\n\t\t\t$(this).blur();\n\t\t\twpmdb.functions.connection_box_changed();\n\t\t});\n\n\t\t// send paste even to connection_box_changed() function\n\t\t$('.pull-push-connection-info').bind('paste', function (e) {\n\t\t\tvar $this = this;\n\t\t\tsetTimeout(function () {\n\t\t\t\twpmdb.functions.connection_box_changed();\n\t\t\t}, 0);\n\t\t});\n\n\t\t$('body').on('click', '.try-again', function () {\n\t\t\t$('.pull-push-connection-info').removeClass('temp-disabled');\n\t\t\twpmdb.functions.connection_box_changed();\n\t\t});\n\n\t\t$('body').on('click', '.try-http', function () {\n\t\t\tvar connection_info = $.trim($('.pull-push-connection-info').val()).split('\\n');\n\t\t\tvar new_url = connection_info[0].replace('https', 'http');\n\t\t\tvar new_contents = new_url + '\\n' + connection_info[1];\n\t\t\t$('.pull-push-connection-info').val(new_contents);\n\t\t\twpmdb.functions.connection_box_changed();\n\t\t});\n\n\t\t$('.create-new-profile').change(function () {\n\t\t\tglobals.profile_name_edited = true;\n\t\t});\n\n\t\t$('body').on('click', '.temporarily-disable-ssl', function () {\n\t\t\tvar hash = '';\n\t\t\tif (window.location.hash) {\n\t\t\t\thash = window.location.hash.substring(1);\n\t\t\t}\n\t\t\t$(this).attr('href', $(this).attr('href') + '&hash=' + hash);\n\t\t});\n\n\t\t// Sets the initial Pause/Resume button event to Pause\n\t\t$('body').on('click', '.pause-resume', function (event) {\n\t\t\tglobals.set_pause_resume_button(event);\n\t\t});\n\n\t\t$('body').on('click', '.cancel', function (event) {\n\t\t\tglobals.cancel_migration(event);\n\t\t});\n\n\t\t$('.enter-licence').click(function () {\n\t\t\t$('.settings').click();\n\t\t\t$('.licence-input').focus();\n\t\t});\n\n\t\t$('body').on('click', '.copy-licence-to-remote-site', function () {\n\t\t\t$('.connection-status').html(wpmdb_strings.copying_license);\n\t\t\t$('.connection-status').removeClass('notification-message error-notice migration-error');\n\t\t\t$('.connection-status').append(globals.ajax_spinner);\n\n\t\t\tvar connection_info = $.trim($('.pull-push-connection-info').val()).split('\\n');\n\n\t\t\tglobals.doing_ajax = true;\n\t\t\tglobals.disable_export_type_controls();\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_copy_licence_to_remote_site',\n\t\t\t\t\turl: connection_info[0],\n\t\t\t\t\tkey: connection_info[1],\n\t\t\t\t\tnonce: wpmdb_data.nonces.copy_licence_to_remote_site\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.connection-status').html(globals.get_ajax_errors(jqXHR.responseText, '(#143)', jqXHR));\n\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tglobals.enable_export_type_controls();\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t\tglobals.enable_export_type_controls();\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.connection-status').html(data.body);\n\t\t\t\t\t\t$('.connection-status').addClass('notification-message error-notice migration-error');\n\n\t\t\t\t\t\tif (data.body.indexOf('401 Unauthorized') > -1) {\n\t\t\t\t\t\t\t$('.basic-access-auth-wrapper').show();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\twpmdb.functions.connection_box_changed();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('body').on('click', '.reactivate-licence', function (e) {\n\t\t\tglobals.doing_ajax = true;\n\n\t\t\t$('.invalid-licence').empty().html(wpmdb_strings.attempting_to_activate_licence);\n\t\t\t$('.invalid-licence').append(globals.ajax_spinner);\n\n\t\t\t$.ajax({\n\t\t\t\turl: ajaxurl,\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcache: false,\n\t\t\t\tdata: {\n\t\t\t\t\taction: 'wpmdb_reactivate_licence',\n\t\t\t\t\tnonce: wpmdb_data.nonces.reactivate_licence\n\t\t\t\t},\n\t\t\t\terror: function error(jqXHR, textStatus, errorThrown) {\n\t\t\t\t\t$('.invalid-licence').html(wpmdb_strings.activate_licence_problem);\n\t\t\t\t\t$('.invalid-licence').append('<br /><br />' + wpmdb_strings.status + ': ' + jqXHR.status + ' ' + jqXHR.statusText + '<br /><br />' + wpmdb_strings.response + '<br />' + jqXHR.responseText);\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_ajax = false;\n\t\t\t\t},\n\t\t\t\tsuccess: function success(data) {\n\t\t\t\t\t$('.ajax-spinner').remove();\n\t\t\t\t\tglobals.doing_ajax = false;\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_error && 1 === data.wpmdb_error) {\n\t\t\t\t\t\t$('.invalid-licence').html(data.body);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('undefined' !== typeof data.wpmdb_dbrains_api_down && 1 === data.wpmdb_dbrains_api_down) {\n\t\t\t\t\t\t$('.invalid-licence').html(wpmdb_strings.temporarily_activated_licence);\n\t\t\t\t\t\t$('.invalid-licence').append(data.body);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t$('.invalid-licence').empty().html(wpmdb_strings.licence_reactivated);\n\t\t\t\t\tlocation.reload();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('input[name=table_migrate_option]').change(function () {\n\t\t\tglobals.maybe_show_mixed_cased_table_name_warning();\n\t\t\t$.wpmdb.do_action('wpmdb_tables_to_migrate_changed');\n\t\t});\n\n\t\t$('body').on('change', '#select-tables', function () {\n\t\t\tglobals.maybe_show_mixed_cased_table_name_warning();\n\t\t\t$.wpmdb.do_action('wpmdb_tables_to_migrate_changed');\n\t\t});\n\n\t\t$.wpmdb.add_filter('wpmdb_get_table_prefix', globals.get_table_prefix);\n\t\t$.wpmdb.add_filter('wpmdb_get_tables_to_migrate', wpmdb.functions.get_tables_to_migrate);\n\t\t$.wpmdb.add_action('wpmdb_lock_replace_url', globals.lock_replace_url);\n\t\t$.wpmdb.add_action('wpmdb_pin_replace_url', globals.pin_replace_url);\n\t\t$.wpmdb.add_action('move_connection_info_box', wpmdb.functions.exclude_post_types_warning);\n\n\t\t$.wpmdb.add_filter('wpmdb_before_migration_complete_hooks', function (hooks) {\n\t\t\tglobals.pause_before_finalize = !!$('input[name=pause_before_finalize]:checked').length;\n\t\t\tif (true === globals.pause_before_finalize && 'savefile' !== globals.migration_intent) {\n\t\t\t\tglobals.set_pause_resume_button(null); // don't just set migration_paused to true, since `set_pause_resume_button` will get double bound to clicking resume\n\t\t\t\twindow.is_auto_pause_before_finalize = true;\n\t\t\t}\n\t\t\treturn hooks;\n\t\t});\n\n\t\t$('.wpmdb-switch').on('click', function (e) {\n\t\t\tif (!$(this).hasClass('disabled')) {\n\t\t\t\tglobals.set_checkbox($(this).attr('id'));\n\t\t\t}\n\t\t});\n\t});\n})(jQuery, wpmdb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///90\n");

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar $ = jQuery;\nvar MigrationProgressModel = __webpack_require__(49);\nvar MigrationProgressView = __webpack_require__(51);\nvar $overlayOriginal = $('<div id=\"overlay\" class=\"hide\"></div>');\nvar $progressContentOriginal = $('.progress-content').clone().addClass('hide');\nvar $proVersion = $('.pro-version').addClass('hide');\n\n$overlayOriginal.append($proVersion);\n\nvar MigrationProgressController = {\n\tmigration: {\n\t\tmodel: {},\n\t\tview: {},\n\t\t$progress: {},\n\t\t$wrapper: {},\n\t\t$overlay: {},\n\t\tstatus: 'active',\n\t\ttitle: '',\n\t\ttext: '',\n\t\ttimerCount: 0,\n\t\telapsedInterval: 0,\n\t\tcurrentStageNum: 0,\n\t\tcounterDisplay: false,\n\t\toriginalTitle: document.title,\n\t\tsetTitle: function setTitle(title) {\n\t\t\tthis.$progress.find('.progress-title').html(title);\n\t\t\tthis.title = title;\n\t\t},\n\t\tsetStatus: function setStatus(status) {\n\t\t\tthis.$progress.removeClass(this.status).addClass('error' === status ? 'wpmdb-error' : status);\n\n\t\t\t// Possible statuses include: 'error', 'paused', 'complete', 'cancelling'\n\t\t\tif ('error' === status) {\n\t\t\t\tthis.$progress.find('.progress-text').addClass('migration-error');\n\t\t\t}\n\n\t\t\tthis.status = status;\n\n\t\t\tthis.updateTitleElem();\n\t\t},\n\t\tsetText: function setText(text) {\n\t\t\tif ('string' !== typeof text) {\n\t\t\t\ttext = '';\n\t\t\t}\n\n\t\t\tif (0 >= text.indexOf('wpmdb_error')) {\n\t\t\t\ttext = this.decodeErrorObject(text);\n\t\t\t}\n\n\t\t\tthis.$progress.find('.progress-text').html(text);\n\t\t\tthis.text = text;\n\t\t},\n\t\tsetState: function setState(title, text, status) {\n\t\t\tif (null !== title) {\n\t\t\t\tthis.setTitle(title);\n\t\t\t}\n\t\t\tif (null !== text) {\n\t\t\t\tthis.setText(text);\n\t\t\t}\n\t\t\tif (null !== status) {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t},\n\t\tstartTimer: function startTimer() {\n\t\t\tthis.timerCount = 0;\n\t\t\tthis.counterDisplay = $('.timer');\n\t\t\tthis.elapsedInterval = setInterval(this.incrementTimer, 1000);\n\t\t},\n\t\tpauseTimer: function pauseTimer() {\n\t\t\tclearInterval(this.elapsedInterval);\n\t\t},\n\t\tresumeTimer: function resumeTimer() {\n\t\t\tthis.elapsedInterval = setInterval(this.incrementTimer, 1000);\n\t\t},\n\t\tincrementTimer: function incrementTimer() {\n\t\t\twpmdb.current_migration.timerCount = wpmdb.current_migration.timerCount + 1;\n\t\t\twpmdb.current_migration.displayCount();\n\t\t},\n\t\tdisplayCount: function displayCount() {\n\t\t\tvar hours = Math.floor(this.timerCount / 3600) % 24;\n\t\t\tvar minutes = Math.floor(this.timerCount / 60) % 60;\n\t\t\tvar seconds = this.timerCount % 60;\n\t\t\tvar display = this.pad(hours, 2, 0) + ':' + this.pad(minutes, 2, 0) + ':' + this.pad(seconds, 2, 0);\n\t\t\tthis.counterDisplay.html(display);\n\t\t},\n\t\tupdateTitleElem: function updateTitleElem() {\n\t\t\tvar activeStage = this.model.get('activeStageName');\n\t\t\tvar stageModel = this.model.getStageModel(activeStage);\n\t\t\tvar percentDone = Math.max(0, stageModel.getTotalProgressPercent());\n\t\t\tvar numStages = this.model.get('stages').length;\n\t\t\tvar currentStage = this.currentStageNum;\n\t\t\tvar currentStatus = this.status;\n\t\t\tvar progressText = wpmdb_strings.title_progress;\n\n\t\t\tif ('complete' === stageModel.get('status') && 0 === stageModel.get('totalSize')) {\n\t\t\t\tpercentDone = 100;\n\t\t\t}\n\n\t\t\tprogressText = progressText.replace('%1$s', percentDone + '%');\n\t\t\tprogressText = progressText.replace('%2$s', currentStage);\n\t\t\tprogressText = progressText.replace('%3$s', numStages);\n\n\t\t\tif (1 === numStages) {\n\t\t\t\tprogressText = percentDone + '%';\n\t\t\t}\n\n\t\t\tif (wpmdb_strings['title_' + currentStatus]) {\n\t\t\t\tprogressText = wpmdb_strings['title_' + currentStatus];\n\t\t\t}\n\n\t\t\tprogressText = progressText + ' - ' + this.originalTitle;\n\n\t\t\tdocument.title = progressText;\n\t\t},\n\t\trestoreTitleElem: function restoreTitleElem() {\n\t\t\tdocument.title = this.originalTitle;\n\t\t},\n\t\tpad: function pad(num, width, padChar) {\n\t\t\tpadChar = padChar || '0';\n\t\t\tnum = num + '';\n\t\t\treturn num.length >= width ? num : new Array(width - num.length + 1).join(padChar) + num;\n\t\t},\n\n\t\t// fixes error objects that have been mangled by html encoding\n\t\tdecodeErrorObject: function decodeErrorObject(input) {\n\t\t\tvar inputDecoded = input.replace(/\\{&quot;/g, '{#q!#').replace(/\\&quot;}/g, '#q!#}').replace(/,&quot;/g, ',#q!#').replace(/&quot;:/g, '#q!#:').replace(/:&quot;/g, ':#q!#').replace(/&quot;/g, '\\\\\"').replace(/#q!#/g, '\"').replace(/&gt;/g, '>').replace(/&lt;/g, '<');\n\t\t\ttry {\n\t\t\t\tinputDecoded = JSON.parse(inputDecoded);\n\t\t\t} catch (e) {\n\t\t\t\treturn input;\n\t\t\t}\n\t\t\treturn 'object' === (typeof inputDecoded === 'undefined' ? 'undefined' : _typeof(inputDecoded)) && 'undefined' !== typeof inputDecoded.body ? inputDecoded : input;\n\t\t},\n\t\tfixProgressStageWidthForScrollBar: function fixProgressStageWidthForScrollBar() {\n\t\t\tvar scrollBarWidth = Math.abs(this.$wrapper[0].offsetWidth - this.$wrapper[0].clientWidth);\n\t\t\tvar visibleProgressItems = this.$wrapper.find('.active .progress-items');\n\t\t\tvar leftPad = parseInt(visibleProgressItems.css('padding-left'), 10);\n\t\t\tvar rightPad = parseInt(visibleProgressItems.css('padding-right'), 10);\n\n\t\t\tif (0 !== scrollBarWidth || 0 === scrollBarWidth && rightPad !== leftPad) {\n\t\t\t\tvisibleProgressItems.css('padding-right', leftPad - scrollBarWidth + 'px');\n\t\t\t}\n\t\t}\n\t},\n\tnewMigration: function newMigration(settings) {\n\t\t$('#overlay').remove();\n\t\t$('.progress-content').remove();\n\t\tthis.migration.$overlay = $overlayOriginal.clone();\n\n\t\t$('#wpwrap').append(this.migration.$overlay);\n\n\t\tthis.migration.model = new MigrationProgressModel(settings);\n\t\tthis.migration.view = new MigrationProgressView({\n\t\t\tmodel: this.migration.model\n\t\t});\n\n\t\tthis.migration.$progress = $progressContentOriginal.clone();\n\t\tthis.migration.$wrapper = this.migration.view.$el;\n\t\tthis.migration.$progress.find('.migration-progress-stages').replaceWith(this.migration.$wrapper);\n\n\t\tthis.migration.$proVersion = this.migration.$overlay.find('.pro-version');\n\t\tvar proVersionIFrame = this.migration.$proVersion.find('iframe').remove().clone();\n\n\t\tthis.migration.$overlay.prepend(this.migration.$progress);\n\n\t\t// timeout needed so class is added after elements are appended to dom and transition runs.\n\t\tvar self = this;\n\t\tsetTimeout(function () {\n\t\t\tself.migration.$overlay.add(self.migration.$progress).add(self.migration.$proVersion).removeClass('hide').addClass('show');\n\t\t\tif (self.migration.$proVersion.length) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tself.migration.$proVersion.find('.iframe').append(proVersionIFrame);\n\t\t\t\t}, 500);\n\t\t\t}\n\t\t}, 0);\n\n\t\tthis.migration.currentStageNum = 0;\n\n\t\tthis.migration.$proVersion.on('click', '.close-pro-version', function () {\n\t\t\tself.migration.$proVersion.find('iframe').remove();\n\t\t\tself.migration.$proVersion.addClass('hide remove');\n\t\t\tsetTimeout(function () {\n\t\t\t\tself.migration.$proVersion.remove();\n\t\t\t}, 500);\n\t\t});\n\n\t\tthis.migration.model.on('migrationComplete', function () {\n\t\t\tself.utils.updateProgTableVisibilitySetting();\n\t\t\tself.utils.updatePauseBeforeFinalizeSetting();\n\t\t\tself.migration.pauseTimer();\n\t\t});\n\n\t\t$(window).on('resize', _.debounce(this.migration.fixProgressStageWidthForScrollBar.bind(this.migration), 100));\n\t\tthis.migration.model.on('change:activeStage', this.migration.fixProgressStageWidthForScrollBar.bind(this.migration));\n\n\t\treturn this.migration;\n\t},\n\tutils: __webpack_require__(53)\n};\n\nmodule.exports = MigrationProgressController;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///91\n");

/***/ }),
/* 92 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n// removed by extract-text-webpack-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL3Nhc3MvX21pZ3JhdGlvbi1wcm9ncmVzcy5zY3NzP2U1YzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFFQSIsImZpbGUiOiI5Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiogSU1QT1JUUyBGUk9NIGltcG9ydHMtbG9hZGVyICoqKi9cbnZhciAkID0gd2luZG93LmpRdWVyeTtcblxuLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2ltcG9ydHMtbG9hZGVyPyQ9PndpbmRvdy5qUXVlcnkhLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL3Nhc3MvX21pZ3JhdGlvbi1wcm9ncmVzcy5zY3NzXG4vLyBtb2R1bGUgaWQgPSA5MlxuLy8gbW9kdWxlIGNodW5rcyA9IDEgMiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///92\n");

/***/ }),
/* 93 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n// removed by extract-text-webpack-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL3Nhc3MvX3Byb2dyZXNzLXVwZ3JhZGUuc2Nzcz9mNjVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiOTMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqIElNUE9SVFMgRlJPTSBpbXBvcnRzLWxvYWRlciAqKiovXG52YXIgJCA9IHdpbmRvdy5qUXVlcnk7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9pbXBvcnRzLWxvYWRlcj8kPT53aW5kb3cualF1ZXJ5IS4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9zYXNzL19wcm9ncmVzcy11cGdyYWRlLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDkzXG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///93\n");

/***/ }),
/* 94 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n// removed by extract-text-webpack-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL3Nhc3MvcGx1Z2luLXVwZGF0ZS1zdHlsZXMuc2Nzcz9lNzgxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiOTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKioqIElNUE9SVFMgRlJPTSBpbXBvcnRzLWxvYWRlciAqKiovXG52YXIgJCA9IHdpbmRvdy5qUXVlcnk7XG5cbi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9pbXBvcnRzLWxvYWRlcj8kPT53aW5kb3cualF1ZXJ5IS4vc3JjL3dwLW1pZ3JhdGUtZGItcHJvL2Fzc2V0L3NyYy9zYXNzL3BsdWdpbi11cGRhdGUtc3R5bGVzLnNjc3Ncbi8vIG1vZHVsZSBpZCA9IDk0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSAyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///94\n");

/***/ }),
/* 95 */
/***/ (function(module, exports) {

eval("/*** IMPORTS FROM imports-loader ***/\nvar $ = window.jQuery;\n\n// removed by extract-text-webpack-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd3AtbWlncmF0ZS1kYi1wcm8vYXNzZXQvc3JjL3Nhc3Mvc3R5bGVzLnNjc3M/OWFjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBIiwiZmlsZSI6Ijk1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKiBJTVBPUlRTIEZST00gaW1wb3J0cy1sb2FkZXIgKioqL1xudmFyICQgPSB3aW5kb3cualF1ZXJ5O1xuXG4vLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvaW1wb3J0cy1sb2FkZXI/JD0+d2luZG93LmpRdWVyeSEuL3NyYy93cC1taWdyYXRlLWRiLXByby9hc3NldC9zcmMvc2Fzcy9zdHlsZXMuc2Nzc1xuLy8gbW9kdWxlIGlkID0gOTVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///95\n");

/***/ })
/******/ ]));